{"version":3,"sources":["webpack:///./src/_packages/@lunit/insight-viewer/index.ts","webpack:///./src/_packages/@lunit/insight-viewer/context/frame.tsx","webpack:///./src/_packages/@lunit/is-touch-device/index.ts","webpack:///./src/_packages/@lunit/heatmap/draw/getRGBArray.ts","webpack:///./src/_packages/@lunit/heatmap/draw/getRGBAArray.ts","webpack:///./src/_packages/@lunit/heatmap/draw/getAlpha.ts","webpack:///./src/_packages/@lunit/heatmap/hooks/useHeatmapScaleImageURI.ts","webpack:///./src/_packages/@lunit/heatmap/components/HeatmapScaleSVGImage.tsx","webpack:///./src/_packages/@lunit/heatmap/draw/posMapToImageData.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/ParallelImageLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/types.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageProgress.tsx","webpack:///./src/_packages/@lunit/insight-viewer/interactions/adjust.ts","webpack:///./src/_packages/@lunit/insight-viewer/interactions/pan.ts","webpack:///./src/_packages/@lunit/insight-viewer/interactions/zoom.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneSingleImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/theme/style.ts","webpack:///./src/_packages/@lunit/insight-viewer/loaders/installWADOImageLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/loaders/unloadImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startAdjustInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startPanInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startZoomInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourDrawer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/geom/hitTestContours.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/animation/dashStroke.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourHover.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewerContainer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ProgressViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleDrawer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/geom/hitTestCircles.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleHover.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/DCMImage.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ThumbnailImage.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewerTestController.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/StrokeText.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CornerstoneViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/interactions/useViewerInteractions.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useSeriesImagePosition.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useSeriesImageScroll.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useInsightViewerSync.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useContour.ts","webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/index.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useViewportMirroring.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageLoadedTime.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageStore.tsx","webpack:///./src/_packages/@lunit/insight-viewer/image/wadoImageLoaderXHRLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneSeriesImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/fetchBuffer.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/fileToBuffer.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneFileSingleImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneStaticSeriesImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/theme/withInsightViewerStorybookGlobalStyle.tsx","webpack:///./src/_packages/@lunit/insight-viewer/image/npy.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/mapNpyBufferToImages.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/HeatmapViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/draw/cleanCanvas.ts","webpack:///./src/_packages/@lunit/is-intersection/index.ts","webpack:///./src/_packages/@lunit/is-complex-polygon/index.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/PointPin.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/PointViewer.tsx"],"names":["FrameContext","createContext","contentWindow","window","FrameConsumer","stateRef","Consumer","state","isTouchDevice","document","documentElement","navigator","maxTouchPoints","msMaxTouchPoints","error","console","getRGBArray","value","r","g","b","v","Math","max","min","getRGBAArray","stop","threshold","alpha","getAlpha","useHeatmapScaleImageURI","width","height","useMemo","canvas","createElement","ratio","devicePixelRatio","w","h","setAttribute","toString","ctx","getContext","i","beginPath","fillStyle","fillRect","closePath","toDataURL","HeatmapScaleSVGImage","imageProps","dataUri","xlinkHref","posMapToImageData","posMap","length","imageData","createImageData","imageDataRgbaMap","data","y","x","pos","async","delay","ms","Promise","resolve","setTimeout","ParallelImageLoader","constructor","options","loadImage","imageId","this","timeout","race","cornerstone","then","Error","getProgressEventDetail","event","detail","useImageProgress","image","progress","setProgress","useState","useEffect","subscription","subscribe","nextProgress","unsubscribe","adjust","element","getElement","getCurrentViewport","updateViewport","getContentWindow","startAdjustInteraction","onMove","voi","onEnd","pan","startPanInteraction","translation","zoom","getMinScale","getMaxScale","startZoomInteraction","getMinMaxScale","onZoom","patch","defaultLoader","CornerstoneSingleImage","_imageSubject","_progressSubject","_cancel","_loader","_destoyed","destroy","unload","events","removeEventListener","onProgress","forEach","cancel","eventDetail","next","loaded","total","loader","wadoImageLoaderXHRLoader","push","warn","BehaviorSubject","addEventListener","asObservable","blockStyle","css","globalStyle","installed","installWADOImageLoader","cornerstoneWADOImageLoader","external","dicomParser","unloadImage","id","test","wadouri","dataSetCacheManager","Array","isArray","InsightViewer","Component","currentViewport","currentImage","teardownPanInteraction","teardownAdjustInteraction","teardownZoomInteraction","imageSubscription","needImageInitialize","elementRef","props","initImage","disable","enable","renderer","defaultViewport","getDefaultViewport","defaultViewportTransforms","minScale","scale","transform","maxScale","hflip","flip","invert","displayImage","setImage","setViewport","subscribeImage","voiLUT","undefined","onImageRenderered","eventData","canvasContext","enabledElement","renderTimeInMs","viewport","updateCornerstoneRenderData","updateCurrentViewport","getDefaultViewportForImage","getViewportTransformParams","setCornerstoneImage","update","render","ref","style","componentDidMount","EVENTS","IMAGE_RENDERED","componentWillUnmount","componentDidUpdate","prevProps","resetTime","resize","getViewport","startPageX","startPageY","startWindowCenter","startWindowWidth","startTrigger","mouseStart","touchStart","stopTrigger","targetTouches","touchMove","touchEnd","stopPropagation","stopImmediatePropagation","preventDefault","pageX","pageY","windowCenter","windowWidth","changedTouches","dx","dy","button","mouseMove","mouseEnd","startTranslationX","startTranslationY","wheel","delta","deltaY","nextScale","top","left","getBoundingClientRect","distanceX","scrollX","distanceY","scrollY","startPagePoints","startPixelDistance","startViewportPoint","startViewportScale","pinchStart","a","abs","sqrt","pow","pinchMove","pinchEnd","pagePoints","pixelDistance","nextViewportScale","t","timer","elapsed","d","easeQuadInOut","ContourViewerBase","svgRef","createRef","cornerstoneRenderData","contours","focusedContour","className","map","contour","polygon","p","pixelToCanvas","toLocal","labelCenter","polylabel","focused","dataAttrs","key","border","data-border","data-id","data-focused","points","join","fontSize","label","defaultProps","ContourViewer","styled","ContourDrawerBase","super","svg","preventClickEvent","startX","startY","deactivateInitialEvents","deactivateMouseDrawEvents","canActivate","activateInitialEvents","draw","device","onMouseMoveToFindFocus","onMouseDownToStartDraw","onTouchStartToStartDraw","onMouseClickToRemove","findFocus","pageToPixel","hitTestContours","onFocus","onRemove","touchType","deactivateTouchDrawEvents","setState","prevState","activateTouchDrawEvents","onTouchMoveToDraw","onTouchEndToEndDraw","onKeyDownToCancelTouchDraw","onAdd","toLowerCase","cancelTouchDraw","activateMouseDrawEvents","onMouseMoveToDraw","onMouseUpToEndDraw","onMouseLeaveToCancelDraw","onKeyDownToCancelMouseDraw","cancelMouseDraw","role","animateStroke","data-highlight","ContourDrawer","dashStroke","cursor","find","pointInPolygon","dash","keyframes","ContourHoverBase","hover","ContourHover","InsightViewerContainer","div","LeftTopHolder","LeftBottomHolder","RightTopHolder","RightBottomHolder","count","ProgressViewer","inProgress","imageProgress","unsetProgress","useContext","ProgressCollectionContext","Div","backgroundColor","size","variant","CircleViewerBase","cx","cy","x1","y1","x2","y2","CircleViewer","CircleDrawerBase","hitTestCircles","p1","p2","CircleDrawer","r1","CircleHoverBase","CircleHover","DCMImage","cornerstoneImage","useRef","current","InsightViewerTestController","children","setWidth","setHeight","control","setControl","setWheel","setInvert","setFlip","setResetTime","Date","now","setElement","interactions","useViewerInteractions","updateWidth","updateHeight","updateControl","updateWheel","updateInvert","updateFlip","updateResetTime","Controller","FloatingBox","gutterBottom","color","onChange","nextValue","toUpperCase","checked","onClick","StrokeText","fontFamily","strokeWidth","strokeColor","textRef","text","cloneElement","stroke","strokeLinejoin","strokeLinecap","dominantBaseline","useLayoutEffect","rect","pointerEvents","userSelect","CornerstoneViewer","teardownInteraction","startInteraction","teardown","filter","interaction","interactionName","useSeriesImagePosition","result","setResult","getIndex","end","index","prevResult","useSeriesImageScroll","enabled","touchDirection","prev","startIndex","startPoint","goto","floor","useInsightViewerSync","setCornerstoneRenderData","useContour","nextId","initialContours","mode","setContours","startId","addedContour","setFocusedContour","addContour","useCallback","contourInfo","isPolygonAreaGreaterThanArea","isComplexPolygon","validateDataAttrs","prevContours","addContours","added","updateContour","nextContour","nextContours","findIndex","prevFocusedContour","focusContour","removeAllContours","removeContour","splice","reset","Object","keys","attr","isGreaterThanArea","l","useViewportMirroring","destinations","updateMasterRenderData","vfilip","dest","useImageLoadedTime","progresses","time","setTime","combineLatest","pipe","numbers","reduce","ImageStoreContext","defaultFactory","ImageStoreProvider","cacheImages","factory","cache","fetch","item","itemImageId","deleteCount","deleteItems","deleteItem","purge","Provider","useImageStore","getCancel","url","headers","params","xhr","XMLHttpRequest","reject","open","responseType","setRequestHeader","deferred","abort","onreadystatechange","readyState","status","response","onloadstart","triggerEvent","onloadend","onprogress","lengthComputable","percentComplete","round","send","isImage","CornerstoneSeriesImage","imageIds","_images","_indexSubject","imageIndex","indexOf","getValue","change","before","slice","reverse","after","n","initialIndex","fetchBuffer","signal","subject","Headers","k","fileToBuffer","blob","reader","FileReader","readAsArrayBuffer","CornerstoneFileSingleImage","file","_imageId","fileManager","add","CornerstoneStaticSeriesImage","images","_imagesSubscription","_progress","createGlobalStyle","asciiDecode","buf","arr","Uint8Array","String","fromCharCode","apply","npy","headerLength","buffer","view","DataView","val","getUint8","readUint16LE","offsetBytes","header","replace","info","JSON","parse","descr","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","shape","isFortranOrder","fortran_order","mapNpyBufferToImages","sliceSpacing","rowPixelSpacing","columnPixelSpacing","slope","intercept","minPixelValue","maxPixelValue","observable","Observable","observer","slices","rows","columns","axialImages","coronalImages","sagittalImages","axialImageDataLength","axialImageData","j","getPixelData","sizeInBytes","BYTES_PER_ELEMENT","coronalRows","coronalColumns","coronalImageData","sagittalRows","sagittalColumns","sagittalImageData","axial","coronal","sagittal","complete","HeatmapViewer","canvasRef","imageResourceCanvas","drawHeatmap","save","putImageData","setToPixelCoordinateSystem","imageWidth","imageHeight","drawImage","restore","Canvas","setTransform","clearRect","cleanCanvas","isIntersection","c","sign1","sign2","sign3","sign4","closedPolygon","PointPin","onEnter","onLeave","gProps","nativeEvent","onMouseEnter","onMouseLeave","PointViewer","onPointAdd","onPointEnter","onPointLeave","onPointRemove","position","interact","Pin","pointPinFunction","pointPinComponent","point"],"mappings":"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","file":"1.bf2dc38371b16c0ea093.js","sourcesContent":["/// <reference types=\"@lunit/cornerstone-declarations\"/>\n\nexport * from './types';\n\nexport * from './loaders/installWADOImageLoader';\nexport * from './loaders/installWebImageLoader';\nexport * from './loaders/unloadImage';\n\nexport * from './components/InsightViewer';\nexport * from './components/ContourViewer';\nexport * from './components/ContourDrawer';\nexport * from './components/ContourHover';\nexport * from './components/HeatmapViewer';\nexport * from './components/InsightViewerContainer';\nexport * from './components/ProgressViewer';\nexport * from './components/PointViewer';\nexport * from './components/CircleViewer';\nexport * from './components/CircleDrawer';\nexport * from './components/CircleHover';\nexport * from './components/DCMImage';\nexport * from './components/ThumbnailImage';\nexport * from './components/InsightViewerTestController';\nexport * from './components/StrokeText';\nexport * from './components/CornerstoneViewer';\n\nexport * from './interactions/adjust';\nexport * from './interactions/pan';\nexport * from './interactions/zoom';\nexport * from './interactions/useViewerInteractions';\n\nexport * from './hooks/useSeriesImagePosition';\nexport * from './hooks/useSeriesImageScroll';\nexport * from './hooks/useImageProgress';\nexport * from './hooks/useInsightViewerSync';\nexport * from './hooks/useContour';\nexport * from './hooks/useViewportMirroring';\nexport * from './hooks/useImageLoadedTime';\nexport * from './hooks/useImageStore';\n\nexport * from './image/types';\nexport * from './image/CornerstoneSingleImage';\nexport * from './image/CornerstoneSeriesImage';\nexport * from './image/ParallelImageLoader';\nexport * from './image/QueueImageLoader';\n\nexport * from './image/fetchBuffer';\nexport * from './image/fileToBuffer';\nexport * from './image/CornerstoneFileSingleImage';\nexport * from './image/CornerstoneStaticSeriesImage';\nexport * from './image/mapNpyBufferToImages';\n\nexport * from './behaviors/updateViewport';\n\nexport * from './theme/style';\nexport * from './theme/withInsightViewerStorybookGlobalStyle';\n\nexport * from './context/frame';\n","import React, { Context, createContext, ReactNode, useContext } from 'react';\n\nexport interface FrameProviderProps {\n  children: ReactNode;\n  frame?: HTMLIFrameElement;\n  contentWindow?: Window;\n}\n\nexport interface FrameState {\n  frame?: HTMLIFrameElement;\n  contentWindow: Window;\n}\n\nconst FrameContext: Context<FrameState> = createContext<FrameState>({\n  contentWindow: window,\n});\n\n/**\n * `<iframe>` + `React.createPortal()` 이라는 매우 특수한 상황을 위한 기능.\n * 사용할 일은 거의 없다.\n */\nexport function FrameProvider({ children, contentWindow = window }: FrameProviderProps) {\n  return (\n    <FrameContext.Provider\n      value={{\n        contentWindow,\n      }}\n    >\n      {children}\n    </FrameContext.Provider>\n  );\n}\n\nexport function useFrame(): FrameState {\n  return useContext(FrameContext);\n}\n\nexport function FrameConsumer({ stateRef }: { stateRef: (state: FrameState) => void }) {\n  return <FrameContext.Consumer>{state => void stateRef(state)}</FrameContext.Consumer>;\n}\n\n//export const InsightViewerConsumer: Consumer<InsightViewerState> = InsightViewerContext.Consumer;\n","export function isTouchDevice(): boolean {\n  try {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n","export function getRGBArray(value: number): [number, number, number] {\n  let r: number, g: number, b: number;\n  const v: number = Math.max(Math.min(value, 1), 0);\n\n  if (v < 0.25) {\n    r = 0;\n    g = 4 * v;\n    b = 1;\n  } else if (v < 0.5) {\n    r = 0;\n    g = 1;\n    b = 1 + 4 * (0.25 - v);\n  } else if (v < 0.75) {\n    r = 4 * (v - 0.5);\n    g = 1;\n    b = 0;\n  } else {\n    r = 1;\n    g = 1 + 4 * (0.75 - v);\n    b = 0;\n  }\n\n  return [(r * 255) << 0, (g * 255) << 0, (b * 255) << 0];\n}\n","import { getAlpha } from './getAlpha';\nimport { getRGBArray } from './getRGBArray';\n\nexport function getRGBAArray({\n  stop,\n  threshold,\n}: {\n  stop: number;\n  threshold: number;\n}): [number, number, number, number] {\n  const alpha: number = getAlpha({ stop, threshold });\n\n  if (alpha <= 0) return [0, 0, 0, 0];\n\n  const [r, g, b] = getRGBArray(stop);\n\n  return [r, g, b, alpha];\n}\n","export function getAlpha({ stop, threshold }: { stop: number; threshold: number }): number {\n  return stop < threshold ? 0 : ((stop - threshold) * 0.75) / (1 - threshold);\n}\n","import { useMemo } from 'react';\nimport { getRGBAArray } from '../draw/getRGBAArray';\n\ninterface UseHeatmapScaleImageURIParameters {\n  width: number;\n  height: number;\n  threshold: number;\n}\n\n/**\n * `width x height` 사이즈의 Reactangle Image를 만들어준다. Image는 Data URI 형태로 전달되기 때문에 `<img src={uri}/>`나 `<image xlink:href={uri}/>`로 사용할 수 있다.\n */\nexport function useHeatmapScaleImageURI({\n  width,\n  height,\n  threshold,\n}: UseHeatmapScaleImageURIParameters): string | null {\n  return useMemo<string | null>(() => {\n    const canvas: HTMLCanvasElement | null = document.createElement('canvas');\n    if (!canvas) return null;\n\n    const ratio: number = window.devicePixelRatio;\n    const w: number = width * ratio;\n    const h: number = height * ratio;\n\n    canvas.setAttribute('width', w.toString());\n    canvas.setAttribute('height', h.toString());\n\n    const ctx: CanvasRenderingContext2D | null = canvas.getContext('2d');\n    if (!ctx) return null;\n\n    let i: number = w + 1;\n    while (--i >= 0) {\n      ctx.beginPath();\n      ctx.fillStyle = `rgba(${getRGBAArray({ stop: i / w, threshold })})`;\n      ctx.fillRect(i, 0, 1, h);\n      ctx.closePath();\n    }\n\n    return canvas.toDataURL();\n  }, [threshold, width, height]);\n}\n","import React, { SVGProps } from 'react';\nimport { useHeatmapScaleImageURI } from '../hooks/useHeatmapScaleImageURI';\n\nexport interface HeatmapScaleImageProps extends SVGProps<SVGImageElement> {\n  threshold?: number;\n  width: number;\n  height: number;\n}\n\n/**\n * `width x height` 형태의 Rectangle SVG <image/>. <svg> 내에서 사용할 수 있다.\n */\nexport function HeatmapScaleSVGImage({ threshold = 0, width, height, ...imageProps }: HeatmapScaleImageProps) {\n  const dataUri: string | null = useHeatmapScaleImageURI({ width, height, threshold });\n\n  return dataUri ? <image {...imageProps} xlinkHref={dataUri} width={width} height={height} /> : null;\n}\n","import { getRGBArray } from './getRGBArray';\n\n/**\n * posMap data를 ImageData 객체로 변환한다\n *\n * threshold는 보통 CXR=0.15 MMG=0.1 (개별 프로젝트에 따라 확인 필요)\n */\nexport function posMapToImageData(posMap: number[][], threshold: number): ImageData {\n  const width: number = posMap[0].length;\n  const height: number = posMap.length;\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n  const imageData: ImageData = ctx!.createImageData(width, height);\n  // [r, g, b, a, r, g, b, a, ...]\n  const imageDataRgbaMap: Uint8ClampedArray = imageData.data;\n\n  let y: number = -1;\n  while (++y < height) {\n    let x: number = -1;\n    while (++x < width) {\n      // rgba array index position\n      const pos: number = (y * width + x) * 4;\n      const stop: number = posMap[y][x];\n\n      if (stop < threshold) {\n        imageDataRgbaMap[pos] = 0;\n        imageDataRgbaMap[pos + 1] = 0;\n        imageDataRgbaMap[pos + 2] = 0;\n        imageDataRgbaMap[pos + 3] = 0;\n      } else {\n        // eg. threshold = 0.1 / stop = 0.3\n        // <threshold를 제외한 stop 값>(0.3 - 0.1) / <threshold를 제외한 max 값>(1 - 0.1)\n        // 0.2 / 0.9 = 0.222222222\n        const value: number = (stop - threshold) / (1 - threshold);\n        const [r, g, b] = getRGBArray(value);\n        imageDataRgbaMap[pos] = r;\n        imageDataRgbaMap[pos + 1] = g;\n        imageDataRgbaMap[pos + 2] = b;\n        imageDataRgbaMap[pos + 3] = (value * 196) << 0;\n      }\n    }\n  }\n\n  return imageData;\n}\n","import { ImageLoader, LoadImageParams } from './types';\n\nasync function delay(ms: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\ninterface Options {\n  timeout?: number;\n}\n\nexport class ParallelImageLoader implements ImageLoader {\n  constructor(private readonly options: Options = {}) {}\n\n  loadImage = ({ imageId, options }: LoadImageParams): Promise<cornerstone.Image> => {\n    return typeof this.options.timeout === 'number'\n      ? Promise.race([\n          cornerstone.loadImage(imageId, options),\n          delay(this.options.timeout).then(() => {\n            throw new Error('TIMEOUT');\n          }),\n        ])\n      : cornerstone.loadImage(imageId, options);\n  };\n}\n","import { Observable } from 'rxjs';\n\nexport interface CornerstoneImage {\n  /** cornerstoneImage.image.subscribe() 로 cornerstone.Image를 받을 수 있다 */\n  readonly image: Observable<cornerstone.Image | null>;\n  /** cornerstoneImage.progress.subscribe() 로 로딩 상태를 0 ~ 1의 값으로 얻을 수 있다 */\n  readonly progress: Observable<number>;\n  /** cornerstoneImage.destroy() 로 현재 Image를 Cache에서 삭제한다 */\n  destroy: () => void;\n}\n\nexport interface CornerstoneSequenceImage extends CornerstoneImage {\n  /** 총 이미지 갯수 */\n  length: () => number;\n  /** 현재 보여주고 있는 Image의 index number */\n  getIndex: () => number;\n  /** cornerstoneImage.index.subscribe() 로 현재 보여주고 있는 Image의 index number를 받을 수 있다 */\n  readonly index: Observable<number>;\n  /** 다음 Image 보기 */\n  next: (delta?: number) => void;\n  /** 이전 Image 보기 */\n  prev: (delta?: number) => void;\n  /** 특정 index number의 Image 보기 */\n  goto: (index: number) => void;\n}\n\n/** @deprecated use CornerstoneSequenceImage */\nexport interface CornerstoneBulkImage extends CornerstoneSequenceImage {}\n\nexport interface ProgressEventDetail {\n  url: string;\n  imageId: string;\n  loaded: number;\n  total: number;\n  percentComplete: number; // 0 ~ 100\n}\n\nexport function getProgressEventDetail(event: Event): ProgressEventDetail | undefined {\n  const detail: object | undefined = event['detail'];\n\n  if (\n    detail &&\n    typeof detail['url'] === 'string' &&\n    typeof detail['imageId'] === 'string' &&\n    typeof detail['loaded'] === 'number' &&\n    typeof detail['total'] === 'number' &&\n    typeof detail['percentComplete'] === 'number'\n  ) {\n    return detail as ProgressEventDetail;\n  }\n\n  return undefined;\n}\n\nexport interface LoadImageParams {\n  imageId: string;\n  options?: object;\n}\n\nexport interface ImageLoader {\n  loadImage: (params: LoadImageParams) => Promise<cornerstone.Image>;\n}\n\nexport interface NpyImageInfo {\n  id: string;\n  windowCenter: number;\n  windowWidth: number;\n  sliceSpacing: number;\n  rowPixelSpacing: number;\n  columnPixelSpacing: number;\n  slope?: number;\n  intercept?: number;\n  minPixelValue?: number;\n  maxPixelValue?: number;\n}\n","import { useEffect, useState } from 'react';\nimport { CornerstoneImage } from '../image/types';\n\n/**\n * CornerstoneImage의 Loading 상태를 확인하기 위해 사용한다.\n *\n * @return `number`는 loading이 진행중이고, `null`은 loading이 진행중이 아니다. `null`이 오는 경우 Progress UI를 감추면 된다.\n */\nexport function useImageProgress(image: CornerstoneImage | null | undefined): number | null {\n  const [progress, setProgress] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (image) {\n      const subscription = image.progress.subscribe(nextProgress => {\n        setProgress(nextProgress < 1 ? nextProgress : null);\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    } else {\n      setProgress(null);\n    }\n  }, [image]);\n\n  return progress;\n}\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startAdjustInteraction } from '../components/interactions/startAdjustInteraction';\n\nexport const adjust = ({ element }: { element?: HTMLElement | null } = {}) => ({\n  getElement,\n  getCurrentViewport,\n  updateViewport,\n  getContentWindow,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startAdjustInteraction({\n    element,\n    getCurrentViewport,\n    onMove: (voi: cornerstone.VOI) => updateViewport({ voi }),\n    onEnd: () => {},\n    contentWindow: getContentWindow(),\n  });\n};\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startPanInteraction } from '../components/interactions/startPanInteraction';\n\nexport const pan = ({ element }: { element?: HTMLElement | null } = {}) => ({\n  getElement,\n  getCurrentViewport,\n  getContentWindow,\n  updateViewport,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startPanInteraction({\n    element,\n    getCurrentViewport,\n    onMove: (translation: cornerstone.Vec2) => updateViewport({ translation }),\n    onEnd: () => {},\n    contentWindow: getContentWindow(),\n  });\n};\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startZoomInteraction } from '../components/interactions/startZoomInteraction';\n\nexport const zoom = ({ element }: { element?: HTMLElement | null } = {}) => ({\n  getElement,\n  updateViewport,\n  getCurrentViewport,\n  getContentWindow,\n  getMinScale,\n  getMaxScale,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startZoomInteraction({\n    element,\n    getMinMaxScale: () => [getMinScale(), getMaxScale()],\n    getCurrentViewport,\n    onZoom: (patch) => updateViewport(patch),\n    contentWindow: getContentWindow(),\n  });\n};\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneImage, getProgressEventDetail, ImageLoader, ProgressEventDetail } from './types';\nimport { wadoImageLoaderXHRLoader } from './wadoImageLoaderXHRLoader';\n\ninterface Options {\n  timeout?: number;\n  unload?: (imageId: string) => void;\n  cancelTokenName?: string;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneSingleImage implements CornerstoneImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _progressSubject: BehaviorSubject<number>;\n  private readonly _cancel: (() => void)[] = [];\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private readonly imageId: string, private readonly options: Options = {}) {\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._progressSubject = new BehaviorSubject(0);\n    this._loader = options.loader || defaultLoader;\n\n    cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onProgress);\n    this.loadImage(imageId);\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progressSubject.asObservable();\n  }\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this.imageId);\n    }\n\n    cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this._cancel.forEach(cancel => cancel());\n\n    this._destoyed = true;\n  };\n\n  private onProgress = (event: Event) => {\n    const eventDetail: ProgressEventDetail | undefined = getProgressEventDetail(event);\n\n    if (eventDetail && eventDetail.imageId === this.imageId) {\n      this._progressSubject.next(Math.min(eventDetail.loaded / eventDetail.total, 0.99));\n    }\n  };\n\n  private loadImage = async (imageId: string) => {\n    try {\n      const image = await this._loader.loadImage({\n        imageId,\n        options: { loader: wadoImageLoaderXHRLoader(cancel => this._cancel.push(cancel)) },\n      });\n\n      cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n      if (!this._destoyed) {\n        this._imageSubject.next(image);\n        this._progressSubject.next(1);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${imageId}):`, error);\n        this.loadImage(imageId);\n      }\n    }\n  };\n}\n","import { ColorProperty } from 'csstype';\nimport { css } from 'styled-components';\n\nexport interface InsightViewerCSSProperties {\n  '--contour-viewer-color'?: ColorProperty;\n  '--contour-viewer-focused-color'?: ColorProperty;\n  '--contour-viewer-stroke-width'?: ColorProperty;\n  '--contour-viewer-focused-stroke-width'?: ColorProperty;\n  '--contour-viewer-fill-color'?: ColorProperty;\n  '--contour-viewer-focused-fill-color'?: ColorProperty;\n\n  '--contour-drawer-color'?: ColorProperty;\n  '--contour-drawer-stroke-width'?: ColorProperty;\n  '--contour-drawer-fill-color'?: ColorProperty;\n\n  '--pin-color'?: ColorProperty;\n  '--pin-focused-color'?: ColorProperty;\n}\n\nexport const blockStyle = css`\n  --contour-viewer-color: #ffffff;\n  --contour-viewer-focused-color: rgb(255, 194, 17);\n  --contour-viewer-stroke-width: 3px;\n  --contour-viewer-focused-stroke-width: 6px;\n  --contour-viewer-fill-color: rgba(0, 0, 0, 0.2);\n  --contour-viewer-focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  --contour-drawer-color: rgb(255, 224, 0);\n  --contour-drawer-stroke-width: 4px;\n  --contour-drawer-fill-color: rgba(255, 224, 0, 0.2);\n\n  --pin-color: #ffffff;\n  --pin-focused-color: rgb(255, 194, 17);\n`;\n\nexport const globalStyle = css`\n  :root {\n    ${blockStyle};\n  }\n`;\n","let installed: boolean = false;\n\nexport function installWADOImageLoader() {\n  if (installed) return;\n  installed = true;\n\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\n  // TODO iPad에서 제대로 안되는 이유 확인\n  //cornerstoneWADOImageLoader.webWorkerManager.initialize({\n  //maxWebWorkers: navigator.hardwareConcurrency || 4,\n  //startWebWorkersOnDemand: false,\n  //taskConfiguration: {\n  //  decodeTask: {\n  //    initializeCodecsOnStartup: true,\n  //  },\n  //},\n  //});\n}\n","export function unloadImage(imageId: string | string[] | null) {\n  function unload(id: string) {\n    if (/^wadouri:/.test(id)) {\n      cornerstoneWADOImageLoader?.wadouri?.dataSetCacheManager?.unload(id);\n    }\n  }\n\n  if (Array.isArray(imageId)) {\n    imageId.forEach(id => unload(id));\n  } else if (typeof imageId === 'string') {\n    unload(imageId);\n  }\n}\n\n/** @deprecated use instead of unloadImage() */\nexport const unloadWADOImage = unloadImage;\n","import React, { Component } from 'react';\nimport { Unsubscribable } from 'rxjs';\nimport { FrameConsumer } from '../context/frame';\nimport { InsightViewerHostProps } from '../hooks/useInsightViewerSync';\nimport { CornerstoneImage } from '../image/types';\nimport { CornerstoneRenderData, CornerstoneViewerLike, ViewportTransform, ViewportTransformParams } from '../types';\nimport { startAdjustInteraction } from './interactions/startAdjustInteraction';\nimport { startPanInteraction } from './interactions/startPanInteraction';\nimport { startZoomInteraction } from './interactions/startZoomInteraction';\n\nexport interface InsightViewerProps extends InsightViewerHostProps {\n  width: number;\n  height: number;\n\n  image: CornerstoneImage;\n\n  /**\n   * Pan Action (Mouse Drag)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Pan 기능을 끈다\n   */\n  pan: boolean | HTMLElement | null;\n\n  /**\n   * Adjust Action (Mouse Drag)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Adjust 기능을 끈다\n   */\n  adjust: boolean | HTMLElement | null;\n\n  /**\n   * Zoom Action (Mouse Wheel)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Wheel 기능을 끈다\n   */\n  zoom: boolean | HTMLElement | null;\n\n  /** Invert Color Image */\n  invert: boolean;\n\n  /** Flip Image */\n  flip: boolean;\n\n  /**\n   * Date.now() 로 입력하면 된다.\n   * 값이 변경되는 경우 Pan, Adjust, Zoom 으로 변경된 상태들이 초기화 된다.\n   */\n  resetTime: number;\n\n  /**\n   * Image가 최초 그려지는 순간 변경한다\n   */\n  defaultViewportTransforms?: ViewportTransform[];\n}\n\nconst maxScale: number = 3;\n\n/** @deprecated use <CornerstoneViewer> instead */\nexport class InsightViewer extends Component<InsightViewerProps, {}> implements CornerstoneViewerLike {\n  // ref={}에 의해서 componentDidMount() 이전에 반드시 들어온다\n  private element!: HTMLDivElement;\n\n  // imageLoaded 이후 지연되어 들어오게 된다\n  // setViewport, updateViewport 에 의해서만 접근한다\n  private currentViewport: cornerstone.Viewport | null = null;\n  // props.image.subscribe()를 통해서 지연되어 들어오게 된다\n  private currentImage: cornerstone.Image | null = null;\n\n  // mouse interaction에서 사용한다\n  private teardownPanInteraction: (() => void) | null = null;\n  private teardownAdjustInteraction: (() => void) | null = null;\n  private teardownZoomInteraction: (() => void) | null = null;\n\n  // rx subscriptions\n  private imageSubscription: Unsubscribable | null = null;\n\n  private needImageInitialize: boolean = true;\n\n  private contentWindow: Window = window;\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <div\n          ref={this.elementRef}\n          style={{\n            width: this.props.width,\n            height: this.props.height,\n          }}\n        />\n      </>\n    );\n  }\n\n  // ---------------------------------------------\n  // life cycle\n  // ---------------------------------------------\n  elementRef = (element: HTMLDivElement) => {\n    this.element = element;\n\n    if (!element) return;\n\n    if (this.props.pan === true) {\n      this.startPanInteraction(this.props.pan);\n    }\n\n    if (this.props.adjust === true) {\n      this.startAdjustInteraction(this.props.adjust);\n    }\n\n    if (this.props.zoom === true) {\n      this.startZoomInteraction(this.props.zoom);\n    }\n  };\n\n  componentDidMount() {\n    // cornerstone의 imagernderered event를 받는다\n    // image가 render 될때마다 context로 enabledElement를 배포해주기 위해 필요하다\n    this.element.addEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n\n    this.setCornerstoneImage(this.props.image);\n  }\n\n  initImage = (image: cornerstone.Image) => {\n    cornerstone.disable(this.element);\n    cornerstone.enable(this.element, { renderer: 'webgl' });\n\n    let defaultViewport = this.getDefaultViewport(image, this.element);\n\n    if (!defaultViewport) {\n      throw new Error('defaultViewport는 null일 수 없다.');\n    }\n\n    if (Array.isArray(this.props.defaultViewportTransforms)) {\n      const minScale: number = defaultViewport.scale;\n\n      for (const transform of this.props.defaultViewportTransforms) {\n        const patch = transform({\n          element: this.element,\n          currentViewport: defaultViewport,\n          minScale,\n          maxScale,\n        });\n\n        defaultViewport = {\n          ...defaultViewport,\n          ...patch,\n        };\n      }\n    }\n\n    defaultViewport = {\n      ...defaultViewport,\n      hflip: this.props.flip,\n      invert: this.props.invert,\n    };\n\n    cornerstone.displayImage(this.element, image, defaultViewport);\n\n    this.setImage(image);\n    this.setViewport(defaultViewport);\n    this.startPanInteraction(this.props.pan);\n    this.startAdjustInteraction(this.props.adjust);\n    this.startZoomInteraction(this.props.zoom);\n  };\n\n  componentWillUnmount() {\n    this.element.removeEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n    cornerstone.disable(this.element);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n    }\n\n    if (this.teardownPanInteraction) {\n      this.teardownPanInteraction();\n    }\n\n    if (this.teardownAdjustInteraction) {\n      this.teardownAdjustInteraction();\n    }\n\n    if (this.teardownZoomInteraction) {\n      this.teardownZoomInteraction();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<InsightViewerProps>) {\n    const { width, height, flip, invert, pan, adjust, zoom, resetTime, image } = this.props;\n\n    const defaultViewport: cornerstone.Viewport | null = this.getDefaultViewport(this.currentImage, this.element);\n\n    // 선택된 control 상태에 따라 event를 해제/등록 해준다\n    if (prevProps.pan !== pan) {\n      this.startPanInteraction(pan);\n    }\n\n    if (prevProps.adjust !== adjust) {\n      this.startAdjustInteraction(adjust);\n    }\n\n    if (prevProps.zoom !== zoom) {\n      this.startZoomInteraction(zoom);\n    }\n\n    if (defaultViewport) {\n      if (prevProps.resetTime !== resetTime) {\n        // resetTime이 새로 갱신되면 viewport를 defaultViewport를 사용해서 초기화 해준다\n        this.updateCurrentViewport({\n          ...defaultViewport,\n          //...this.defaultViewport,\n          hflip: flip,\n          invert: defaultViewport.invert ? !invert : invert,\n        });\n      } else {\n        // flip, invert는 resetTime의 부분 집합이기 때문에\n        // resetTime에 의한 갱신이 없는 경우에만 적용한다\n        if (prevProps.flip !== flip || prevProps.invert !== invert) {\n          this.updateCurrentViewport({\n            hflip: flip,\n            invert: defaultViewport.invert ? !invert : invert,\n          });\n        }\n      }\n    }\n\n    if (prevProps.width !== width || prevProps.height !== height) {\n      if (this.currentImage) {\n        // container size가 변경되는 경우 cornerstone resize() 처리를 해준다\n        cornerstone.resize(this.element);\n\n        const viewport = cornerstone.getViewport(this.element);\n\n        if (viewport) {\n          this.setViewport(viewport);\n        } else {\n          throw new Error('getViewport() is returns not a Viewport');\n        }\n      }\n    }\n\n    if (prevProps.image !== image) {\n      this.setCornerstoneImage(image);\n    }\n  }\n\n  subscribeImage = (image: cornerstone.Image | null) => {\n    if (!image) return;\n\n    image.voiLUT = undefined; // remove VOI LUT for 'adjust' functionality\n\n    // props.image의 변경 또는 초기화로 인한 완전한 초기화가 필요할때\n    if (this.needImageInitialize) {\n      this.needImageInitialize = false;\n      this.initImage(image);\n    }\n    // 단순 series image의 변경일 경우에는 화면 표시만 바꿔준다\n    else if (this.currentViewport) {\n      cornerstone.displayImage(this.element, image, this.currentViewport);\n    }\n    // 이건 실행되면 안됨\n    else {\n      throw new Error('어떤 상황인지 확인 필요!!!');\n    }\n  };\n\n  onImageRenderered = (event: cornerstone.CornerstoneEvent) => {\n    const eventData: cornerstone.CornerstoneEventData | undefined = event.detail;\n    if (\n      eventData &&\n      eventData.canvasContext &&\n      eventData.element &&\n      eventData.enabledElement &&\n      eventData.image &&\n      typeof eventData.renderTimeInMs === 'number' &&\n      eventData.viewport\n    ) {\n      this.currentViewport = eventData.viewport;\n      this.props.updateCornerstoneRenderData(eventData as CornerstoneRenderData);\n    } else {\n      console.error('CornerstoneEventData에 없는 정보가 있다???', eventData);\n    }\n  };\n\n  // ---------------------------------------------\n  // event handlers\n  // ---------------------------------------------\n  startPanInteraction = (pan: boolean | HTMLElement | null) => {\n    if (this.teardownPanInteraction) {\n      this.teardownPanInteraction();\n    }\n\n    const element: HTMLElement | null =\n      pan instanceof this.contentWindow['HTMLElement'] ? (pan as HTMLElement) : pan === true ? this.element : null;\n\n    if (element) {\n      this.teardownPanInteraction = startPanInteraction({\n        element,\n        getCurrentViewport: () => this.currentViewport!,\n        onMove: (translation: cornerstone.Vec2) => this.updateCurrentViewport({ translation }),\n        onEnd: () => {},\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  startAdjustInteraction = (adjust: boolean | HTMLElement | null) => {\n    if (this.teardownAdjustInteraction) {\n      this.teardownAdjustInteraction();\n    }\n\n    const element: HTMLElement | null =\n      adjust instanceof this.contentWindow['HTMLElement']\n        ? (adjust as HTMLElement)\n        : adjust === true\n        ? this.element\n        : null;\n\n    if (element) {\n      this.teardownAdjustInteraction = startAdjustInteraction({\n        element,\n        getCurrentViewport: () => this.currentViewport!,\n        onMove: (voi: cornerstone.VOI) => this.updateCurrentViewport({ voi }),\n        onEnd: () => {},\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  startZoomInteraction = (zoom: boolean | HTMLElement | null) => {\n    if (this.teardownZoomInteraction) {\n      this.teardownZoomInteraction();\n    }\n\n    const element: HTMLElement | null =\n      zoom instanceof this.contentWindow['HTMLElement'] ? (zoom as HTMLElement) : zoom === true ? this.element : null;\n\n    if (element) {\n      this.teardownZoomInteraction = startZoomInteraction({\n        element,\n        getMinMaxScale: () => [this.getMinScale(), this.getMaxScale()],\n        getCurrentViewport: () => this.currentViewport!,\n        onZoom: (patch) => this.updateCurrentViewport(patch),\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  // ---------------------------------------------\n  // getters\n  // ---------------------------------------------\n  getElement = () => this.element;\n\n  getContentWindow = () => this.contentWindow;\n\n  getCurrentViewport = () => this.currentViewport!;\n\n  getDefaultViewport = (image: cornerstone.Image | null, element: HTMLElement | null): cornerstone.Viewport | null => {\n    if (!image || !element) return null;\n    return cornerstone.getDefaultViewportForImage(element, image);\n  };\n\n  getMinScale = () => {\n    const viewport = this.getDefaultViewport(this.currentImage, this.element);\n\n    if (!viewport) {\n      throw new Error('viewport가 정상적으로 와야만 한다');\n    }\n\n    return viewport.scale;\n  };\n\n  getMaxScale = () => {\n    return maxScale;\n  };\n\n  // ---------------------------------------------\n  // setters\n  // ---------------------------------------------\n  updateViewport = (patch: Partial<cornerstone.Viewport>) => {\n    if (this.currentViewport) {\n      this.updateCurrentViewport(patch);\n    }\n  };\n\n  getViewportTransformParams = (): ViewportTransformParams => {\n    return {\n      element: this.element,\n      minScale: this.getMinScale(),\n      maxScale: this.getMaxScale(),\n      currentViewport: this.currentViewport,\n    };\n  };\n\n  private setCornerstoneImage = (image: CornerstoneImage) => {\n    this.needImageInitialize = true;\n\n    this.setImage(null);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n      this.imageSubscription = null;\n    }\n\n    this.imageSubscription = image.image.subscribe(this.subscribeImage);\n  };\n\n  private setImage = (image: cornerstone.Image | null) => {\n    this.currentImage = image;\n  };\n\n  private setViewport = (viewport: cornerstone.Viewport) => {\n    this.currentViewport = viewport;\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n\n  private updateCurrentViewport = (\n    update: Partial<cornerstone.Viewport> | ((viewport: cornerstone.Viewport) => Partial<cornerstone.Viewport>),\n  ) => {\n    if (!this.currentViewport) {\n      throw new Error('viewport가 없는 상태에서 실행되면 안된다');\n    }\n\n    const patch: Partial<cornerstone.Viewport> = typeof update === 'function' ? update(this.currentViewport) : update;\n\n    this.currentViewport = {\n      ...this.currentViewport,\n      ...patch,\n    };\n\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n}\n","import { isTouchDevice } from '@lunit/is-touch-device';\n\ninterface AdjustInteractionParams {\n  element: HTMLElement;\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onMove: (voi: cornerstone.VOI) => void;\n  onEnd: () => void;\n  contentWindow: Window;\n}\n\nexport function startAdjustInteraction({\n  element,\n  getCurrentViewport,\n  onMove,\n  onEnd,\n  contentWindow,\n}: AdjustInteractionParams): () => void {\n  let startPageX: number;\n  let startPageY: number;\n  let startWindowCenter: number;\n  let startWindowWidth: number;\n\n  function startTrigger() {\n    element.addEventListener('mousedown', mouseStart);\n    if (isTouchDevice()) {\n      element.addEventListener('touchstart', touchStart);\n    }\n  }\n\n  function stopTrigger() {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n  }\n\n  // ---------------------------------------------\n  // touch handler\n  // ---------------------------------------------\n  function touchStart(event: TouchEvent) {\n    if (event.targetTouches.length > 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n\n      return;\n    }\n\n    if (event.targetTouches.length !== 1) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.targetTouches[0].pageX;\n    startPageY = event.targetTouches[0].pageY;\n    startWindowCenter = viewport.voi.windowCenter;\n    startWindowWidth = viewport.voi.windowWidth;\n\n    contentWindow.addEventListener('touchmove', touchMove);\n    contentWindow.addEventListener('touchend', touchEnd);\n    contentWindow.addEventListener('touchcancel', touchEnd);\n  }\n\n  function touchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n\n      return;\n    }\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = event.targetTouches[0].pageX - startPageX;\n    const dy: number = event.targetTouches[0].pageY - startPageY;\n\n    onMove({\n      windowWidth: Math.max(startWindowWidth + dx, 1),\n      windowCenter: Math.max(startWindowCenter + dy, 1),\n    });\n  }\n\n  function touchEnd(event: TouchEvent) {\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  // ---------------------------------------------\n  // mouse handler\n  // ---------------------------------------------\n  function mouseStart(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.pageX;\n    startPageY = event.pageY;\n    startWindowCenter = viewport.voi.windowCenter;\n    startWindowWidth = viewport.voi.windowWidth;\n\n    contentWindow.addEventListener('mousemove', mouseMove);\n    contentWindow.addEventListener('mouseup', mouseEnd);\n    element.addEventListener('mouseleave', mouseEnd);\n  }\n\n  function mouseMove(event: MouseEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const dx: number = event.pageX - startPageX;\n    const dy: number = event.pageY - startPageY;\n\n    onMove({\n      windowWidth: Math.max(startWindowWidth + dx, 1),\n      windowCenter: Math.max(startWindowCenter + dy, 1),\n    });\n  }\n\n  function mouseEnd(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  // ---------------------------------------------\n  // start\n  // ---------------------------------------------\n  startTrigger();\n\n  // ---------------------------------------------\n  // end\n  // ---------------------------------------------\n  return () => {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n  };\n}\n","import { isTouchDevice } from '@lunit/is-touch-device';\n\ninterface PanInteractionParams {\n  element: HTMLElement;\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onMove: (translation: cornerstone.Vec2) => void;\n  onEnd: () => void;\n  contentWindow: Window;\n}\n\nexport function startPanInteraction({\n  element,\n  getCurrentViewport,\n  onMove,\n  onEnd,\n  contentWindow,\n}: PanInteractionParams): () => void {\n  let startPageX: number;\n  let startPageY: number;\n  let startTranslationX: number;\n  let startTranslationY: number;\n\n  function startTrigger() {\n    element.addEventListener('mousedown', mouseStart);\n    if (isTouchDevice()) {\n      element.addEventListener('touchstart', touchStart);\n    }\n  }\n\n  function stopTrigger() {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n  }\n\n  // ---------------------------------------------\n  // touch handler\n  // ---------------------------------------------\n  function touchStart(event: TouchEvent) {\n    if (event.targetTouches.length > 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n\n      return;\n    }\n\n    if (event.targetTouches.length !== 1) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.targetTouches[0].pageX;\n    startPageY = event.targetTouches[0].pageY;\n    startTranslationX = viewport.translation.x;\n    startTranslationY = viewport.translation.y;\n\n    contentWindow.addEventListener('touchmove', touchMove);\n    contentWindow.addEventListener('touchend', touchEnd);\n    contentWindow.addEventListener('touchcancel', touchEnd);\n  }\n\n  function touchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n\n      return;\n    }\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = (event.targetTouches[0].pageX - startPageX) / viewport.scale;\n    const dy: number = (event.targetTouches[0].pageY - startPageY) / viewport.scale;\n\n    onMove({\n      x: startTranslationX + dx,\n      y: startTranslationY + dy,\n    });\n  }\n\n  function touchEnd(event: TouchEvent) {\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  // ---------------------------------------------\n  // mouse handler\n  // ---------------------------------------------\n  function mouseStart(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.pageX;\n    startPageY = event.pageY;\n    startTranslationX = viewport.translation.x;\n    startTranslationY = viewport.translation.y;\n\n    contentWindow.addEventListener('mousemove', mouseMove);\n    contentWindow.addEventListener('mouseup', mouseEnd);\n    element.addEventListener('mouseleave', mouseEnd);\n  }\n\n  function mouseMove(event: MouseEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = (event.pageX - startPageX) / viewport.scale;\n    const dy: number = (event.pageY - startPageY) / viewport.scale;\n\n    onMove({\n      x: startTranslationX + dx,\n      y: startTranslationY + dy,\n    });\n  }\n\n  function mouseEnd(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  // ---------------------------------------------\n  // start\n  // ---------------------------------------------\n  startTrigger();\n\n  // ---------------------------------------------\n  // end\n  // ---------------------------------------------\n  return () => {\n    element.removeEventListener('mousedown', mouseStart);\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    element.removeEventListener('touchstart', touchStart);\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n  };\n}\n","import { isTouchDevice } from '@lunit/is-touch-device';\nimport { easeQuadInOut } from 'd3-ease';\nimport { timer } from 'd3-timer';\n\ninterface ZoomInteractionParams {\n  element: HTMLElement;\n  getMinMaxScale: () => [number, number];\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onZoom: (patch: { translation: cornerstone.Vec2; scale: number }) => void;\n  contentWindow: Window;\n}\n\ntype Point = { x: number; y: number };\n\nexport function startZoomInteraction({\n  element,\n  getMinMaxScale,\n  getCurrentViewport,\n  onZoom,\n  contentWindow,\n}: ZoomInteractionParams): () => void {\n  // ---------------------------------------------\n  // wheel handler\n  // ---------------------------------------------\n  function wheel(event: WheelEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    const [minScale, maxScale] = getMinMaxScale();\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    // deltaY는 scroll up의 경우 negative 수치로 오고,\n    // scroll down의 경우 positive 수치로 온다\n    // scale의 변환을 정상적인 방향으로 연산하기 위해서는 (scale - delta)로 방향을 전환해줘야 한다\n    const delta: number = event.deltaY > 0 ? 1 : -1;\n\n    const nextScale: number = Math.max(\n      minScale, // 최소 scale 미만으로 떨어지지 않도록 방지\n      Math.min(\n        maxScale, // 최대 scale 이상으로 올라가지 않도록 방지\n        currentViewport.scale - delta * 0.03, // scale을 delta 수치로 보정\n      ),\n    );\n\n    // min, max 등에 의해서 scale 변화가 없다면 viewport 반영을 취소\n    if (currentViewport.scale === nextScale) return;\n\n    // pageX, pageY 는 screen 기준 mouse pointer의 point\n    // bounding rect는 screen 기준 element의 rect\n    const { top, left, width, height } = element.getBoundingClientRect();\n\n    // left + width / 2 는 screen 기준 element의 center\n    // mouse pointer point - window scroll position 으로 scroll 기준 위치를 찾는다\n    // screen 기준 mouse pointer point - element의 center\n    // element center 부터의 mouse 상대 위치의 차를 계산하게 된다\n    // | ------ center ==== mouse - |   = 로 표시된 거리\n    const distanceX: number = event.pageX - contentWindow.scrollX - (left + width / 2);\n    const distanceY: number = event.pageY - contentWindow.scrollY - (top + height / 2);\n\n    // nextScale / currentViewport.scale 으로 scale 변화의 비율을 계산 (확대 시 >1, 축소 시 <1)\n    // 1 - scale 변환 비율로 확대 / 축소 시 size 변화에 따른 위치 변화의 폭을 찾는다\n    // 확대 시 x 위치는 <- 으로 팽창하게 되기 때문에 - 수치가 나오게 되고\n    // 축소 시 x 위치는 -> 으로 수축하게 되기 때문에 + 수치가 나오게 된다\n    // size 변화의 비율 * distanceX 로 이동해야 할 수치를 계산\n    const dx: number = (1 - nextScale / currentViewport.scale) * distanceX;\n    const dy: number = (1 - nextScale / currentViewport.scale) * distanceY;\n\n    onZoom({\n      // dx / nextScale 로 실제적인 이동 수치를 찾고\n      // currentViewport.translation.x + 를 통해서 기존 위치에 이동 수치를 적용한 값을 찾는다\n      translation: {\n        x: currentViewport.translation.x + dx / nextScale,\n        y: currentViewport.translation.y + dy / nextScale,\n      },\n      scale: nextScale,\n    });\n  }\n\n  // ---------------------------------------------\n  // touch handler\n  // ---------------------------------------------\n  let startPagePoints: [Point, Point];\n  let startPixelDistance: number;\n\n  let startViewportPoint: Point;\n  let startViewportScale: number;\n\n  function pinchStart(event: TouchEvent) {\n    if (event.targetTouches.length !== 2) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    // 시작 시점의 viewport를 기록한다\n    startViewportScale = currentViewport.scale;\n    startViewportPoint = currentViewport.translation;\n\n    // p1 과 p2를 기록한다\n    startPagePoints = [\n      { x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\n      { x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY },\n    ];\n\n    // p1과  p2의 거리를 측정한다\n    const a: number = Math.abs(startPagePoints[0].x - startPagePoints[1].x);\n    const b: number = Math.abs(startPagePoints[0].y - startPagePoints[1].y);\n    startPixelDistance = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\n    element.removeEventListener('touchstart', pinchStart);\n\n    element.addEventListener('touchmove', pinchMove);\n    element.addEventListener('touchend', pinchEnd);\n    element.addEventListener('touchcancel', pinchEnd);\n  }\n\n  function pinchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 2 || event.changedTouches.length !== 2) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const pagePoints = [\n      { x: event.changedTouches[0].pageX, y: event.changedTouches[0].pageY },\n      { x: event.changedTouches[1].pageX, y: event.changedTouches[1].pageY },\n    ];\n    const a: number = Math.abs(pagePoints[0].x - pagePoints[1].x);\n    const b: number = Math.abs(pagePoints[0].y - pagePoints[1].y);\n    const pixelDistance: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\n    // 현재 p1, p2의 거리 / 이전 p1, p2의 거리를 구한다 = 확대비\n    // 이전 viewport scale 에 확대비를 곱해서 변동된 viewport scale을 구한다\n    const nextViewportScale: number = startViewportScale * (pixelDistance / startPixelDistance);\n\n    // 현재 center point - 이전 center point = center point의 이동량\n    // center point의 이동량 * viewport scale = image scale 내에서의 이동량\n    const dx: number =\n      ((pagePoints[0].x + pagePoints[1].x) / 2 - (startPagePoints[0].x + startPagePoints[1].x) / 2) / nextViewportScale;\n    const dy: number =\n      ((pagePoints[0].y + pagePoints[1].y) / 2 - (startPagePoints[0].y + startPagePoints[1].y) / 2) / nextViewportScale;\n\n    onZoom({\n      translation: {\n        x: startViewportPoint.x + dx,\n        y: startViewportPoint.y + dy,\n      },\n      scale: nextViewportScale,\n    });\n  }\n\n  function pinchEnd(event: TouchEvent) {\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    const [minScale, maxScale] = getMinMaxScale();\n\n    // mili seconds\n    const duration = 500;\n\n    if (currentViewport.scale < minScale) {\n      const t = timer((elapsed) => {\n        // easing 처리된 시간점 (0~1)을 구한다\n        const d = easeQuadInOut(elapsed / duration);\n        if (elapsed > duration) {\n          // 목표 상태로 설정\n          onZoom({\n            translation: currentViewport.translation,\n            scale: minScale,\n          });\n          t.stop();\n        } else {\n          // 경과 animation 상태로 설정\n          // 시작 viewport scale + ( 목표가 되는 minimum scale - 시작 viewport scale ) * 시간점\n          onZoom({\n            // FIXME translation에 특별한 처리를 하지 않아서 마지막 이동 위치를 기준으로 움직이는데, 부자연스럽다면 scale에 따른 translation 조정이 필요할 수도 있다\n            translation: currentViewport.translation,\n            scale: currentViewport.scale + (minScale - currentViewport.scale) * d,\n          });\n        }\n      });\n    } else if (currentViewport.scale > maxScale) {\n      const t = timer((elapsed) => {\n        const d = easeQuadInOut(elapsed / duration);\n        if (elapsed > duration) {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: maxScale,\n          });\n          t.stop();\n        } else {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: currentViewport.scale + (maxScale - currentViewport.scale) * d,\n          });\n        }\n      });\n    }\n\n    element.removeEventListener('touchmove', pinchMove);\n    element.removeEventListener('touchend', pinchEnd);\n    element.removeEventListener('touchcancel', pinchEnd);\n\n    element.addEventListener('touchstart', pinchStart);\n  }\n\n  // ---------------------------------------------\n  // start\n  // ---------------------------------------------\n  element.addEventListener('wheel', wheel);\n  if (isTouchDevice()) {\n    element.addEventListener('touchstart', pinchStart);\n  }\n\n  // ---------------------------------------------\n  // end\n  // ---------------------------------------------\n  return () => {\n    element.removeEventListener('wheel', wheel);\n    element.removeEventListener('touchstart', pinchStart);\n\n    element.removeEventListener('touchmove', pinchMove);\n    element.removeEventListener('touchend', pinchEnd);\n    element.removeEventListener('touchcancel', pinchEnd);\n  };\n}\n","import polylabel from 'polylabel';\nimport React, { Component, createRef, CSSProperties, Fragment, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface ContourViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** <svg className={}> */\n  className?: string;\n\n  /** <svg style={}> */\n  style?: CSSProperties;\n\n  /**\n   * Line에 외곽을 그려준다\n   * Line을 두 개 그려서 border를 표현하기 때문에,성능에 민감한 상황인 경우 비활성 시킬 수 있다.\n   */\n  border?: boolean;\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): Point[] {\n  return polygon.map(([x, y]) => {\n    const p = cornerstone.pixelToCanvas(element, { x, y });\n    return [p.x, p.y];\n  });\n}\n\nexport class ContourViewerBase<T extends Contour> extends Component<ContourViewerProps<T>, {}> {\n  static defaultProps: Pick<ContourViewerProps<Contour>, 'border'> = {\n    border: true,\n  };\n\n  private svgRef: RefObject<SVGSVGElement> = createRef();\n\n  render() {\n    const { cornerstoneRenderData, contours, focusedContour } = this.props;\n\n    return (\n      <svg\n        ref={this.svgRef}\n        className={this.props.className}\n        style={this.props.style}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {contours.length > 0 &&\n          cornerstoneRenderData &&\n          cornerstoneRenderData.element &&\n          contours.map(contour => {\n            const polygon: number[][] = toLocal(cornerstoneRenderData.element, contour.polygon);\n            const labelCenter: number[] = polylabel([polygon], 1);\n            const focused: boolean = contour === focusedContour;\n            const dataAttrs: { [attr: string]: string } = contour.dataAttrs || {};\n\n            return (\n              <Fragment key={'polygon' + contour.id}>\n                {this.props.border === true && (\n                  <polygon\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    points={polygon.map(([x, y]) => `${x},${y}`).join(' ')}\n                  />\n                )}\n                <polygon\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  points={polygon.map(([x, y]) => `${x},${y}`).join(' ')}\n                />\n                {this.props.border === true && (\n                  <text\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                    x={labelCenter[0]}\n                    y={labelCenter[1]}\n                  >\n                    {contour.label\n                      ? typeof contour.label === 'function'\n                        ? contour.label(contour)\n                        : contour.label\n                      : contour.id}\n                  </text>\n                )}\n                <text\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                  x={labelCenter[0]}\n                  y={labelCenter[1]}\n                >\n                  {contour.label\n                    ? typeof contour.label === 'function'\n                      ? contour.label(contour)\n                      : contour.label\n                    : contour.id}\n                </text>\n              </Fragment>\n            );\n          })}\n      </svg>\n    );\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourViewer: new <T extends Contour>() => ContourViewerBase<T> = styled(ContourViewerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  user-select: none;\n\n  --color: #ffffff;\n  --focused-color: rgb(255, 194, 17);\n  --stroke-width: 3px;\n  --focused-stroke-width: 6px;\n  --fill-color: rgba(0, 0, 0, 0.2);\n  --focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  > polygon {\n    stroke-width: var(--contour-viewer-stroke-width, var(--stroke-width));\n    stroke: var(--contour-viewer-color, var(--color));\n    fill: var(--contour-viewer-fill-color, var(--fill-color));\n    transition: stroke 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      stroke-width: var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width));\n      stroke: var(--contour-viewer-focused-color, var(--focused-color));\n      fill: var(--contour-viewer-focused-fill-color, var(--focused-fill-color));\n    }\n\n    &[data-border] {\n      stroke-width: calc(var(--contour-viewer-stroke-width, var(--stroke-width)) + 2px);\n      stroke: #000000;\n      fill: transparent;\n\n      &[data-focused] {\n        stroke-width: calc(var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width)) + 2px);\n        stroke: #000000;\n      }\n    }\n  }\n\n  > text {\n    fill: var(--contour-viewer-color, var(--color));\n    font-family: proximanova, noto_sans, sans-serif;\n    font-weight: 600;\n    text-anchor: middle;\n    dominant-baseline: central;\n    transition: fill 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      fill: var(--contour-viewer-focused-color, var(--focused-color));\n    }\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n      fill: transparent;\n    }\n  }\n` as any;\n\n/**\n * @deprecated use ContourViewer instead\n */\nexport const UserContourViewer = ContourViewer;\n","import { isTouchDevice } from '@lunit/is-touch-device';\nimport React, { Component, CSSProperties } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestContours } from '../geom/hitTestContours';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { dashStroke } from './animation/dashStroke';\n\nexport interface ContourDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * 그리기 기능 활성화 여부\n   *\n   * HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  draw: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd: (polygon: Point[], event: MouseEvent | TouchEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove: (contour: T) => void;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /** 그리는 과정에서 Line에 표현되는 Animation을 비활성 시킬 수 있다 */\n  animateStroke?: boolean;\n\n  /**\n   * 접근 Device 설정\n   */\n  device?: 'all' | 'mouse-only' | 'touch-only' | 'stylus-only' | 'mouse-and-stylus';\n}\n\ninterface ContourDrawerState {\n  polygon: Point[];\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): string {\n  return polygon\n    .map(([x, y]) => {\n      const p = cornerstone.pixelToCanvas(element, { x, y });\n      return p.x + ',' + p.y;\n    })\n    .join(' ');\n}\n\nexport class ContourDrawerBase<T extends Contour> extends Component<ContourDrawerProps<T>, ContourDrawerState> {\n  static defaultProps: Partial<ContourDrawerProps<Contour>> = {\n    device: 'all',\n  };\n\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private preventClickEvent: boolean = false;\n  private startX: number = 0;\n  private startY: number = 0;\n\n  private contentWindow: Window = window;\n\n  constructor(props: ContourDrawerProps<T>) {\n    super(props);\n\n    this.state = {\n      polygon: [],\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n          style={this.props.style}\n        >\n          {this.props.cornerstoneRenderData && this.state.polygon && this.state.polygon.length > 0 && (\n            <>\n              <polyline points={toLocal(this.props.cornerstoneRenderData.element, this.state.polygon)} />\n              {this.props.animateStroke !== false && (\n                <polyline\n                  points={toLocal(this.props.cornerstoneRenderData.element, this.state.polygon)}\n                  data-highlight=\"highlight\"\n                />\n              )}\n            </>\n          )}\n        </svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateMouseDrawEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<ContourDrawerProps<T>>) {\n    if (prevProps.draw !== this.props.draw) {\n      if (this.element) {\n        this.deactivateInitialEvents();\n        this.deactivateMouseDrawEvents();\n      }\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateMouseDrawEvents();\n    }\n  }\n\n  getElement = ({ draw }: Readonly<ContourDrawerProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return draw instanceof this.contentWindow['HTMLElement'] ? (draw as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ draw }: Readonly<ContourDrawerProps<T>>) => {\n    return draw instanceof this.contentWindow['HTMLElement'] || draw === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (!this.element) return;\n    if (this.props.device !== 'touch-only' && this.props.device !== 'stylus-only') {\n      this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n      this.element.addEventListener('mousedown', this.onMouseDownToStartDraw);\n    }\n    if (isTouchDevice() && this.props.device !== 'mouse-only') {\n      this.element.addEventListener('touchstart', this.onTouchStartToStartDraw);\n    }\n    this.element.addEventListener('click', this.onMouseClickToRemove);\n  };\n\n  deactivateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.removeEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.removeEventListener('touchstart', this.onTouchStartToStartDraw);\n    this.element.removeEventListener('click', this.onMouseClickToRemove);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestContours<T>(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n\n  onMouseClickToRemove = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.focused || this.preventClickEvent) return;\n\n    this.props.onRemove(this.focused);\n  };\n\n  // ---------------------------------------------\n  // touch draw events\n  // ---------------------------------------------\n  onTouchStartToStartDraw = (event: TouchEvent) => {\n    if (\n      (this.props.device === 'stylus-only' || this.props.device === 'mouse-and-stylus') &&\n      event.targetTouches[0].touchType !== 'stylus'\n    ) {\n      return;\n    } else if (event.targetTouches.length > 1) {\n      this.deactivateTouchDrawEvents();\n      this.activateInitialEvents();\n      this.setState((prevState) => ({\n        ...prevState,\n        polygon: [],\n      }));\n      return;\n    } else if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.targetTouches[0].pageX;\n    this.startY = event.targetTouches[0].pageY;\n\n    this.deactivateInitialEvents();\n    this.activateTouchDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.targetTouches[0].pageX, event.targetTouches[0].pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [[x, y]],\n    }));\n  };\n\n  activateTouchDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('touchmove', this.onTouchMoveToDraw);\n    this.element.addEventListener('touchend', this.onTouchEndToEndDraw);\n    this.element.addEventListener('touchcancel', this.onTouchEndToEndDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelTouchDraw);\n  };\n\n  deactivateTouchDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('touchmove', this.onTouchMoveToDraw);\n    this.element.removeEventListener('touchend', this.onTouchEndToEndDraw);\n    this.element.removeEventListener('touchcancel', this.onTouchEndToEndDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelTouchDraw);\n  };\n\n  onTouchMoveToDraw = (event: TouchEvent) => {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      this.deactivateTouchDrawEvents();\n      this.activateInitialEvents();\n      this.setState((prevState) => ({\n        ...prevState,\n        polygon: [],\n      }));\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(\n        Math.abs(event.targetTouches[0].pageX - this.startX),\n        Math.abs(event.targetTouches[0].pageY - this.startY),\n      ) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.targetTouches[0].pageX, event.targetTouches[0].pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [...prevState.polygon, [x, y]],\n    }));\n  };\n\n  onTouchEndToEndDraw = (event: TouchEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.deactivateTouchDrawEvents();\n    this.activateInitialEvents();\n\n    this.props.onAdd(this.state.polygon, event);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n\n  onKeyDownToCancelTouchDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      this.cancelTouchDraw();\n    }\n  };\n\n  cancelTouchDraw = () => {\n    this.deactivateTouchDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n\n  // ---------------------------------------------\n  // mouse draw events\n  // ---------------------------------------------\n  onMouseDownToStartDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n\n    this.deactivateInitialEvents();\n    this.activateMouseDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [[x, y]],\n    }));\n  };\n\n  activateMouseDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.addEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.addEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelMouseDraw);\n  };\n\n  deactivateMouseDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.removeEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.removeEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelMouseDraw);\n  };\n\n  onMouseMoveToDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(Math.abs(event.pageX - this.startX), Math.abs(event.pageY - this.startY)) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [...prevState.polygon, [x, y]],\n    }));\n  };\n\n  onMouseUpToEndDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.deactivateMouseDrawEvents();\n    this.activateInitialEvents();\n\n    this.props.onAdd(this.state.polygon, event);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n\n  onMouseLeaveToCancelDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.cancelMouseDraw();\n  };\n\n  onKeyDownToCancelMouseDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      this.cancelMouseDraw();\n    }\n  };\n\n  cancelMouseDraw = () => {\n    this.deactivateMouseDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState((prevState) => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourDrawer: new <T extends Contour>() => ContourDrawerBase<T> = styled(ContourDrawerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  --color: rgb(255, 224, 0);\n  --stroke-width: 4px;\n  --fill-color: rgba(255, 224, 0, 0.2);\n\n  > polyline:first-child {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: var(--contour-drawer-fill-color, var(--fill-color));\n  }\n\n  > polyline[data-highlight] {\n    stroke: #ffffff;\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: transparent;\n    ${dashStroke}\n  }\n` as any;\n\n/**\n * @deprecated use ContourDrawer instead\n */\nexport const UserContourDrawer = ContourDrawer;\n","import pointInPolygon from 'point-in-polygon';\nimport { Contour, Point } from '../types';\n\nexport function hitTestContours<T extends Contour>(contours: T[], cursor: Point): T | null {\n  const result: T | undefined = contours.find(contour => {\n    return pointInPolygon(cursor, contour.polygon);\n  });\n\n  return result || null;\n}\n","import { css, keyframes } from 'styled-components';\n\nconst dash = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nexport const dashStroke = css`\n  stroke-dasharray: 10, 10;\n  stroke-dashoffset: 1000;\n  animation: ${dash} 10s linear infinite;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestContours } from '../geom/hitTestContours';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface ContourHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * Hover 기능 활성화 여부\n   * HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다.\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n\ninterface ContourHoverState {\n  polygon: Point[];\n}\n\nexport class ContourHoverBase<T extends Contour> extends Component<ContourHoverProps<T>, ContourHoverState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private contentWindow: Window = window;\n\n  constructor(props: ContourHoverProps<T>) {\n    super(props);\n\n    this.state = {\n      polygon: [],\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n        ></svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<ContourHoverProps<T>>) {\n    if (prevProps.hover !== this.props.hover) {\n      if (this.element) this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) this.deactivateInitialEvents();\n  }\n\n  getElement = ({ hover }: Readonly<ContourHoverProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return hover instanceof this.contentWindow['HTMLElement'] ? (hover as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ hover }: Readonly<ContourHoverProps<T>>) => {\n    return hover instanceof this.contentWindow['HTMLElement'] || hover === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (this.element) this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  deactivateInitialEvents = () => {\n    if (this.element) this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestContours<T>(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourHover: new <T extends Contour>() => ContourHoverBase<T> = styled(ContourHoverBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n` as any;\n","import styled from 'styled-components';\n\nexport const InsightViewerContainer = styled.div<{ width: number; height: number }>`\n  background-color: #000000;\n  position: relative;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n`;\n\nexport const LeftTopHolder = styled.div`\n  position: absolute;\n  left: 5px;\n  top: 5px;\n`;\n\nexport const LeftBottomHolder = styled.div`\n  position: absolute;\n  left: 5px;\n  bottom: 5px;\n`;\n\nexport const RightTopHolder = styled.div`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const RightBottomHolder = styled.div`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\n","import { CircularProgress } from '@material-ui/core';\nimport React, {\n  Context,\n  createContext,\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { useImageProgress } from '../hooks/useImageProgress';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface ProgressViewerProps {\n  width: number;\n  height: number;\n  inProgress?: boolean;\n  image?: CornerstoneImage | null | undefined;\n}\n\nlet count: number = 0;\n\nexport function ProgressViewer({ width, height, inProgress, image }: ProgressViewerProps) {\n  const id: number = useMemo(() => ++count, []);\n  const imageProgress = useImageProgress(image);\n  const { setProgress, unsetProgress } = useProgressCollection();\n\n  useEffect(() => {\n    if (inProgress === true || typeof imageProgress === 'number') {\n      setProgress(id, imageProgress || 0);\n    } else {\n      unsetProgress(id);\n    }\n  }, [id, imageProgress, inProgress, setProgress, unsetProgress]);\n\n  return (\n    <>\n      {(inProgress === true || typeof imageProgress === 'number') && (\n        <Div\n          style={{\n            width,\n            height,\n            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n          }}\n        >\n          <CircularProgress size={120} />\n        </Div>\n      )}\n      {typeof imageProgress === 'number' && (\n        <Div\n          style={{\n            width,\n            height,\n          }}\n        >\n          <CircularProgress size={100} variant=\"static\" value={imageProgress * 100} />\n        </Div>\n      )}\n    </>\n  );\n}\n\ninterface ProgressCollectorProps {\n  children: ReactNode;\n}\n\ninterface ProgressCollection {\n  inProgress: boolean;\n  setProgress: (id: number, progress: number) => void;\n  unsetProgress: (id: number) => void;\n}\n\nconst ProgressCollectionContext: Context<ProgressCollection> = createContext<ProgressCollection>({\n  inProgress: false,\n\n  setProgress: () => {\n    // DO NOTHING\n  },\n  unsetProgress: () => {\n    // DO NOTHING\n  },\n});\n\nexport function ProgressCollector({ children }: ProgressCollectorProps) {\n  const [collection, setCollection] = useState<Map<number, number>>(() => new Map());\n\n  const setProgress = useCallback(\n    (id: number, progress: number) => {\n      setCollection(prevCollection => {\n        const nextCollection: Map<number, number> = new Map(prevCollection);\n        nextCollection.set(id, progress);\n        return nextCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const unsetProgress = useCallback(\n    (id: number) => {\n      setCollection(prevCollection => {\n        if (prevCollection.has(id)) {\n          const nextCollection: Map<number, number> = new Map(prevCollection);\n          nextCollection.delete(id);\n          return nextCollection;\n        }\n        return prevCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const inProgress: boolean = useMemo(() => {\n    return collection.size > 0;\n  }, [collection]);\n\n  const state: ProgressCollection = useMemo<ProgressCollection>(() => {\n    return {\n      inProgress,\n      setProgress,\n      unsetProgress,\n    };\n  }, [inProgress, setProgress, unsetProgress]);\n\n  return <ProgressCollectionContext.Provider value={state}>{children}</ProgressCollectionContext.Provider>;\n}\n\nfunction useProgressCollection(): ProgressCollection {\n  return useContext(ProgressCollectionContext);\n}\n\nexport function useProgressViewersActivity(): boolean {\n  return useContext(ProgressCollectionContext).inProgress;\n}\n\nexport function useContainerStyleOfProgressViewersInactivity(\n  style: CSSProperties = { pointerEvents: 'none' },\n): CSSProperties {\n  const { inProgress } = useContext(ProgressCollectionContext);\n  return inProgress ? style : {};\n}\n\nconst Div = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { Component, createRef, CSSProperties, Fragment, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface CircleViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** <svg className={}> */\n  className?: string;\n\n  /** <svg style={}> */\n  style?: CSSProperties;\n\n  /**\n   * Line에 외곽을 그려준다\n   * Line을 두 개 그려서 border를 표현하기 때문에,성능에 민감한 상황인 경우 비활성 시킬 수 있다.\n   */\n  border?: boolean;\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): { cx: number; cy: number; r: number } {\n  const { x: x1, y: y1 } = cornerstone.pixelToCanvas(element, { x: polygon[0][0], y: polygon[0][1] });\n  const { x: x2, y: y2 } = cornerstone.pixelToCanvas(element, { x: polygon[1][0], y: polygon[1][1] });\n  const r: number = Math.sqrt(Math.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2));\n\n  return {\n    cx: x1,\n    cy: y1,\n    r,\n  };\n}\n\nexport class CircleViewerBase<T extends Contour> extends Component<CircleViewerProps<T>, {}> {\n  static defaultProps: Pick<CircleViewerProps<Contour>, 'border'> = {\n    border: true,\n  };\n\n  private svgRef: RefObject<SVGSVGElement> = createRef();\n\n  render() {\n    const { cornerstoneRenderData, contours, focusedContour } = this.props;\n\n    return (\n      <svg\n        ref={this.svgRef}\n        className={this.props.className}\n        style={this.props.style}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {contours.length > 0 &&\n          cornerstoneRenderData &&\n          cornerstoneRenderData.element &&\n          contours.map(contour => {\n            const { cx, cy, r } = toLocal(cornerstoneRenderData.element, contour.polygon);\n            const focused: boolean = contour === focusedContour;\n            const dataAttrs: { [attr: string]: string } = contour.dataAttrs || {};\n\n            return (\n              <Fragment key={'circle' + contour.id}>\n                {this.props.border === true && (\n                  <circle\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    cx={cx}\n                    cy={cy}\n                    r={r}\n                  />\n                )}\n                <circle {...dataAttrs} data-id={contour.id} data-focused={focused || undefined} cx={cx} cy={cy} r={r} />\n                {this.props.border === true && (\n                  <text\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                    x={cx}\n                    y={cy}\n                  >\n                    {contour.label\n                      ? typeof contour.label === 'function'\n                        ? contour.label(contour)\n                        : contour.label\n                      : contour.id}\n                  </text>\n                )}\n                <text\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                  x={cx}\n                  y={cy}\n                >\n                  {contour.label\n                    ? typeof contour.label === 'function'\n                      ? contour.label(contour)\n                      : contour.label\n                    : contour.id}\n                </text>\n              </Fragment>\n            );\n          })}\n      </svg>\n    );\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleViewer: new <T extends Contour>() => CircleViewerBase<T> = styled(CircleViewerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  user-select: none;\n\n  --color: #ffffff;\n  --focused-color: rgb(255, 194, 17);\n  --stroke-width: 3px;\n  --focused-stroke-width: 6px;\n  --fill-color: rgba(0, 0, 0, 0.2);\n  --focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  > circle {\n    stroke-width: var(--contour-viewer-stroke-width, var(--stroke-width));\n    stroke: var(--contour-viewer-color, var(--color));\n    fill: var(--contour-viewer-fill-color, var(--fill-color));\n    transition: stroke 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      stroke-width: var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width));\n      stroke: var(--contour-viewer-focused-color, var(--focused-color));\n      fill: var(--contour-viewer-focused-fill-color, var(--focused-fill-color));\n    }\n\n    &[data-border] {\n      stroke-width: calc(var(--contour-viewer-stroke-width, var(--stroke-width)) + 2px);\n      stroke: #000000;\n      fill: transparent;\n\n      &[data-focused] {\n        stroke-width: calc(var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width)) + 2px);\n        stroke: #000000;\n      }\n    }\n  }\n\n  > text {\n    fill: var(--contour-viewer-color, var(--color));\n    font-family: proximanova, noto_sans, sans-serif;\n    font-weight: 600;\n    text-anchor: middle;\n    dominant-baseline: central;\n    transition: fill 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      fill: var(--contour-viewer-focused-color, var(--focused-color));\n    }\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n      fill: transparent;\n    }\n  }\n` as any;\n\n/**\n * @deprecated use CircleViewer instead\n */\nexport const UserCircleViewer = CircleViewer;\n","import { isTouchDevice } from '@lunit/is-touch-device';\nimport React, { Component, CSSProperties } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestCircles } from '../geom/hitTestCircles';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { dashStroke } from './animation/dashStroke';\n\nexport interface CircleDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * 그리기 기능 활성화 여부\n   *\n   * HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  draw: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd: (polygon: Point[], event: MouseEvent | TouchEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove: (contour: T) => void;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /** 그리는 과정에서 Line에 표현되는 Animation을 비활성 시킬 수 있다 */\n  animateStroke?: boolean;\n\n  /**\n   * 접근 Device 설정\n   */\n  device?: 'all' | 'mouse-only' | 'touch-only' | 'stylus-only' | 'mouse-and-stylus';\n}\n\ninterface CircleDrawerState {\n  p1: Point | null;\n  p2: Point | null;\n}\n\nexport class CircleDrawerBase<T extends Contour> extends Component<CircleDrawerProps<T>, CircleDrawerState> {\n  static defaultProps: Partial<CircleDrawerProps<Contour>> = {\n    device: 'all',\n  };\n\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private preventClickEvent: boolean = false;\n  private startX: number = 0;\n  private startY: number = 0;\n\n  private contentWindow: Window = window;\n\n  constructor(props: CircleDrawerProps<T>) {\n    super(props);\n\n    this.state = {\n      p1: null,\n      p2: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n          style={this.props.style}\n        >\n          {this.props.cornerstoneRenderData &&\n            this.state.p1 &&\n            this.state.p2 &&\n            (() => {\n              const { x: x1, y: y1 } = cornerstone.pixelToCanvas(this.props.cornerstoneRenderData.element, {\n                x: this.state.p1[0],\n                y: this.state.p1[1],\n              });\n              const { x: x2, y: y2 } = cornerstone.pixelToCanvas(this.props.cornerstoneRenderData.element, {\n                x: this.state.p2[0],\n                y: this.state.p2[1],\n              });\n              const r: number = Math.sqrt(Math.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2));\n\n              return (\n                <>\n                  <circle cx={x1} cy={y1} r={r} />\n                  {this.props.animateStroke !== false && <circle cx={x1} cy={y1} r={r} data-highlight=\"highlight\" />}\n                  <line x1={x1} y1={y1} x2={x2} y2={y2} />\n                </>\n              );\n            })()}\n        </svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateMouseDrawEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CircleDrawerProps<T>>) {\n    if (prevProps.draw !== this.props.draw) {\n      if (this.element) {\n        this.deactivateInitialEvents();\n        this.deactivateMouseDrawEvents();\n      }\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateMouseDrawEvents();\n    }\n  }\n\n  getElement = ({ draw }: Readonly<CircleDrawerProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return draw instanceof this.contentWindow['HTMLElement'] ? (draw as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ draw }: Readonly<CircleDrawerProps<T>>) => {\n    return draw instanceof this.contentWindow['HTMLElement'] || draw === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (!this.element) return;\n    if (this.props.device !== 'touch-only' && this.props.device !== 'stylus-only') {\n      this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n      this.element.addEventListener('mousedown', this.onMouseDownToStartDraw);\n    }\n    if (isTouchDevice() && this.props.device !== 'mouse-only') {\n      this.element.addEventListener('touchstart', this.onTouchStartToStartDraw);\n    }\n    this.element.addEventListener('click', this.onMouseClickToRemove);\n  };\n\n  deactivateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.removeEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.removeEventListener('touchstart', this.onTouchStartToStartDraw);\n    this.element.removeEventListener('click', this.onMouseClickToRemove);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestCircles(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n\n  onMouseClickToRemove = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.focused || this.preventClickEvent) return;\n\n    this.props.onRemove(this.focused);\n  };\n\n  // ---------------------------------------------\n  // touch draw events\n  // ---------------------------------------------\n  onTouchStartToStartDraw = (event: TouchEvent) => {\n    if (\n      (this.props.device === 'stylus-only' || this.props.device === 'mouse-and-stylus') &&\n      event.targetTouches[0].touchType !== 'stylus'\n    ) {\n      return;\n    } else if (event.targetTouches.length > 1) {\n      this.deactivateTouchDrawEvents();\n      this.activateInitialEvents();\n      this.setState((prevState) => ({\n        ...prevState,\n        p1: null,\n        p2: null,\n      }));\n      return;\n    } else if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.targetTouches[0].pageX;\n    this.startY = event.targetTouches[0].pageY;\n\n    this.deactivateInitialEvents();\n    this.activateTouchDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.targetTouches[0].pageX, event.targetTouches[0].pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: [x, y],\n    }));\n  };\n\n  activateTouchDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('touchmove', this.onTouchMoveToDraw);\n    this.element.addEventListener('touchend', this.onTouchEndToEndDraw);\n    this.element.addEventListener('touchcancel', this.onTouchEndToEndDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelTouchDraw);\n  };\n\n  deactivateTouchDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('touchmove', this.onTouchMoveToDraw);\n    this.element.removeEventListener('touchend', this.onTouchEndToEndDraw);\n    this.element.removeEventListener('touchcancel', this.onTouchEndToEndDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelTouchDraw);\n  };\n\n  onTouchMoveToDraw = (event: TouchEvent) => {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      this.deactivateTouchDrawEvents();\n      this.activateInitialEvents();\n      this.setState((prevState) => ({\n        ...prevState,\n        p1: null,\n        p2: null,\n      }));\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(\n        Math.abs(event.targetTouches[0].pageX - this.startX),\n        Math.abs(event.targetTouches[0].pageY - this.startY),\n      ) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.targetTouches[0].pageX, event.targetTouches[0].pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p2: [x, y],\n    }));\n  };\n\n  onTouchEndToEndDraw = (event: TouchEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.deactivateTouchDrawEvents();\n    this.activateInitialEvents();\n\n    if (this.state.p1 && this.state.p2) {\n      this.props.onAdd([this.state.p1, this.state.p2], event);\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n\n  onKeyDownToCancelTouchDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      this.cancelTouchDraw();\n    }\n  };\n\n  cancelTouchDraw = () => {\n    this.deactivateTouchDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n\n  // ---------------------------------------------\n  // mouse draw events\n  // ---------------------------------------------\n  onMouseDownToStartDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n\n    this.deactivateInitialEvents();\n    this.activateMouseDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: [x, y],\n    }));\n  };\n\n  activateMouseDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.addEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.addEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelMouseDraw);\n  };\n\n  deactivateMouseDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.removeEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.removeEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelMouseDraw);\n  };\n\n  onMouseMoveToDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(Math.abs(event.pageX - this.startX), Math.abs(event.pageY - this.startY)) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p2: [x, y],\n    }));\n  };\n\n  onMouseUpToEndDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.deactivateMouseDrawEvents();\n    this.activateInitialEvents();\n\n    if (this.state.p1 && this.state.p2) {\n      this.props.onAdd([this.state.p1, this.state.p2], event);\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n\n  onMouseLeaveToCancelDraw = (event: MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.cancelMouseDraw();\n  };\n\n  onKeyDownToCancelMouseDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      this.cancelMouseDraw();\n    }\n  };\n\n  cancelMouseDraw = () => {\n    this.deactivateMouseDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState((prevState) => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleDrawer: new <T extends Contour>() => CircleDrawerBase<T> = styled(CircleDrawerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  --color: rgb(255, 224, 0);\n  --stroke-width: 4px;\n  --fill-color: rgba(255, 224, 0, 0.2);\n\n  > circle:first-child {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: var(--contour-drawer-fill-color, var(--fill-color));\n  }\n\n  > circle[data-highlight] {\n    stroke: #ffffff;\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: transparent;\n    ${dashStroke}\n  }\n\n  > line {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n  }\n` as any;\n\n/**\n * @deprecated use CircleDrawer instead\n */\nexport const UserCircleDrawer = CircleDrawer;\n","import { Contour, Point } from '../types';\n\nexport function hitTestCircles<T extends Contour>(contours: T[], cursor: Point): T | null {\n  const result: T | undefined = contours.find(contour => {\n    const [[cx, cy], [x1, y1]] = contour.polygon;\n    const [x2, y2] = cursor;\n\n    const r1: number = Math.sqrt(Math.pow(Math.abs(x1 - cx), 2) + Math.pow(Math.abs(y1 - cy), 2));\n    const r2: number = Math.sqrt(Math.pow(Math.abs(x2 - cx), 2) + Math.pow(Math.abs(y2 - cy), 2));\n\n    return r2 <= r1;\n  });\n\n  return result || null;\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestCircles } from '../geom/hitTestCircles';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface CircleHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * Hover 기능 활성화 여부\n   * HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n\ninterface CircleHoverState {\n  p1: Point | null;\n  p2: Point | null;\n}\n\nexport class CircleHoverBase<T extends Contour> extends Component<CircleHoverProps<T>, CircleHoverState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n\n  private contentWindow: Window = window;\n\n  constructor(props: CircleHoverProps<T>) {\n    super(props);\n\n    this.state = {\n      p1: null,\n      p2: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n        ></svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CircleHoverProps<T>>) {\n    if (prevProps.hover !== this.props.hover) {\n      if (this.element) this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) this.deactivateInitialEvents();\n  }\n\n  getElement = ({ hover }: Readonly<CircleHoverProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return hover instanceof this.contentWindow['HTMLElement'] ? (hover as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ hover }: Readonly<CircleHoverProps<T>>) => {\n    return hover instanceof this.contentWindow['HTMLElement'] || hover === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (this.element) this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  deactivateInitialEvents = () => {\n    if (this.element) this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestCircles(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleHover: new <T extends Contour>() => CircleHoverBase<T> = styled(CircleHoverBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n` as any;\n","import React, { useEffect, useRef } from 'react';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface DCMImageProps {\n  cornerstoneImage: CornerstoneImage;\n  width: number;\n  height: number;\n}\n\nexport function DCMImage({ cornerstoneImage, width, height }: DCMImageProps) {\n  const element = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const subscription = cornerstoneImage.image.subscribe(image => {\n      if (!element.current) return;\n\n      cornerstone.disable(element.current);\n      cornerstone.enable(element.current);\n\n      if (image) {\n        const defaultViewport = cornerstone.getDefaultViewportForImage(element.current, image);\n        cornerstone.displayImage(element.current, image, defaultViewport);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [cornerstoneImage]);\n\n  return (\n    <div\n      ref={element}\n      style={{\n        width,\n        height,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface ThumbnailImageProps {\n  width: number;\n  height: number;\n  src: string;\n}\n\nexport function ThumbnailImage({ width, height, src }: ThumbnailImageProps) {\n  return (\n    <Thumbnail\n      style={{\n        width,\n        height,\n        backgroundImage: `url(${src})`,\n      }}\n    />\n  );\n}\n\nconst Thumbnail = styled.div`\n  display: inline-block;\n  background-color: #000000;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n","import { CornerstoneViewerInteractions, useViewerInteractions } from '@lunit/insight-viewer';\nimport { Control } from '@lunit/use-opt-control';\nimport { Box, Button, FormControlLabel, Radio, RadioGroup, Slider, Switch, Typography } from '@material-ui/core';\nimport React, { Fragment, ReactNode, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nexport type Wheel = 'none' | 'zoom' | 'scroll';\n\nexport interface InsightViewerControllerOptions {\n  width: [number, number, number] | number;\n  height: [number, number, number] | number;\n  control: [Control, Control[]] | Control;\n  wheel: [Wheel, Wheel[]] | Wheel;\n  invert: [boolean] | boolean;\n  flip: [boolean] | boolean;\n}\n\nexport interface InsightViewerControllerProps {\n  children: (controllerState: InsightViewerControllerState) => ReactNode;\n  options: InsightViewerControllerOptions;\n}\n\nexport interface InsightViewerControllerState {\n  options: InsightViewerControllerOptions;\n\n  width: number;\n  height: number;\n  control: Control;\n  wheel: Wheel;\n  invert: boolean;\n  flip: boolean;\n  resetTime: number;\n\n  element: HTMLElement | null;\n  setElement: <E extends HTMLElement>(element: E | null) => void;\n  interactions: CornerstoneViewerInteractions;\n\n  updateWidth: (value: number) => void;\n  updateHeight: (value: number) => void;\n  updateControl: (value: Control) => void;\n  updateWheel: (value: Wheel) => void;\n  updateInvert: (value: boolean) => void;\n  updateFlip: (value: boolean) => void;\n  updateResetTime: (value: number) => void;\n}\n\nexport function InsightViewerTestController({ children, options }: InsightViewerControllerProps) {\n  const [width, setWidth] = useState<number>(() => (Array.isArray(options.width) ? options.width[0] : options.width));\n  const [height, setHeight] = useState<number>(() =>\n    Array.isArray(options.height) ? options.height[0] : options.height,\n  );\n  const [control, setControl] = useState<Control>(() =>\n    Array.isArray(options.control) ? options.control[0] : options.control,\n  );\n  const [wheel, setWheel] = useState<Wheel>(() => (Array.isArray(options.wheel) ? options.wheel[0] : options.wheel));\n  const [invert, setInvert] = useState(() => (Array.isArray(options.invert) ? options.invert[0] : options.invert));\n  const [flip, setFlip] = useState(() => (Array.isArray(options.flip) ? options.flip[0] : options.flip));\n  const [resetTime, setResetTime] = useState(Date.now());\n\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const interactions = useViewerInteractions([control, wheel], { element });\n\n  const state: InsightViewerControllerState = useMemo<InsightViewerControllerState>(\n    () => ({\n      options,\n      width,\n      height,\n      control,\n      wheel,\n      invert,\n      flip,\n      resetTime,\n      updateWidth: setWidth,\n      updateHeight: setHeight,\n      updateControl: setControl,\n      updateWheel: setWheel,\n      updateInvert: setInvert,\n      updateFlip: setFlip,\n      updateResetTime: setResetTime,\n\n      element,\n      setElement,\n      interactions,\n    }),\n    [options, width, height, control, wheel, invert, flip, resetTime, element, interactions],\n  );\n\n  return (\n    <Fragment>\n      {children(state)}\n      <Controller {...state} />\n    </Fragment>\n  );\n}\n\nfunction Controller({\n  options,\n  width,\n  height,\n  control,\n  wheel,\n  invert,\n  flip,\n  resetTime,\n  updateWidth,\n  updateHeight,\n  updateControl,\n  updateWheel,\n  updateInvert,\n  updateFlip,\n  updateResetTime,\n}: InsightViewerControllerState) {\n  return (\n    <FloatingBox>\n      {Array.isArray(options.width) && (\n        <>\n          <Typography gutterBottom>Width</Typography>\n          <Slider\n            color=\"primary\"\n            value={width}\n            min={options.width[1]}\n            max={options.width[2]}\n            onChange={(event, nextValue) => updateWidth(nextValue as number)}\n          />\n        </>\n      )}\n\n      {Array.isArray(options.height) && (\n        <>\n          <Typography gutterBottom>Height</Typography>\n          <Slider\n            color=\"primary\"\n            value={height}\n            min={options.height[1]}\n            max={options.height[2]}\n            onChange={(event, nextValue) => updateHeight(nextValue as number)}\n          />\n        </>\n      )}\n\n      {Array.isArray(options.control) && (\n        <>\n          <Typography gutterBottom>Control</Typography>\n          <RadioGroup value={control} onChange={(event, nextValue) => updateControl(nextValue as Control)}>\n            {options.control[1].map((value) => (\n              <FormControlLabel\n                color=\"primary\"\n                key={value}\n                value={value}\n                control={<Radio color=\"primary\" />}\n                label={value.toUpperCase()}\n              />\n            ))}\n          </RadioGroup>\n        </>\n      )}\n\n      {Array.isArray(options.wheel) && (\n        <>\n          <Typography gutterBottom>Wheel</Typography>\n          <RadioGroup value={wheel} onChange={(event, nextValue) => updateWheel(nextValue as Wheel)}>\n            {options.wheel[1].map((value) => (\n              <FormControlLabel\n                color=\"primary\"\n                key={value}\n                value={value}\n                control={<Radio color=\"primary\" />}\n                label={value.toUpperCase()}\n              />\n            ))}\n          </RadioGroup>\n        </>\n      )}\n\n      {Array.isArray(options.invert) && (\n        <>\n          <Typography gutterBottom>Invert</Typography>\n          <Switch checked={invert} color=\"primary\" onChange={(event, nextValue) => updateInvert(nextValue)} />\n        </>\n      )}\n\n      {Array.isArray(options.flip) && (\n        <>\n          <Typography gutterBottom>Flip</Typography>\n          <Switch checked={flip} color=\"primary\" onChange={(event, nextValue) => updateFlip(nextValue)} />\n        </>\n      )}\n\n      <Typography gutterBottom>Reset</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => updateResetTime(Date.now())}>\n        Reset\n      </Button>\n    </FloatingBox>\n  );\n}\n\nconst FloatingBox = styled(Box)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 200px;\n`;\n","import React, { cloneElement, ReactElement, SVGProps, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nexport interface StrokeTextProps {\n  fontFamily?: string;\n  fontSize?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  children: ReactElement<SVGProps<SVGTextElement>>;\n}\n\nexport function StrokeText({\n  fontFamily = 'proximanova,noto_sanslight,sans-serif',\n  fontSize = 12,\n  strokeWidth = 6,\n  strokeColor = '#000000',\n  children,\n}: StrokeTextProps) {\n  const [width, setWidth] = useState<number>(100);\n  const height = useMemo<number>(() => fontSize + strokeWidth * 2, [fontSize, strokeWidth]);\n  const textRef = useRef<SVGTextElement>(null);\n\n  const text = useMemo(() => {\n    return (\n      <>\n        {cloneElement(children, {\n          ref: textRef,\n          x: strokeWidth,\n          y: strokeWidth,\n          stroke: strokeColor,\n          strokeWidth,\n          strokeLinejoin: 'round',\n          strokeLinecap: 'round',\n          dominantBaseline: 'mathematical',\n          fontFamily,\n        })}\n        {cloneElement(children, {\n          x: strokeWidth,\n          y: strokeWidth,\n          dominantBaseline: 'mathematical',\n          fontFamily,\n        })}\n      </>\n    );\n  }, [children, fontFamily, strokeColor, strokeWidth]);\n\n  useLayoutEffect(() => {\n    const rect = textRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    setWidth(rect.width + strokeWidth * 2);\n  }, [strokeWidth, text]);\n\n  return (\n    <svg width={width} height={height} style={{ pointerEvents: 'none', userSelect: 'none', fontSize }}>\n      {text}\n    </svg>\n  );\n}\n","import React, { Component } from 'react';\nimport { Unsubscribable } from 'rxjs';\nimport { FrameConsumer } from '../context/frame';\nimport { InsightViewerHostProps } from '../hooks/useInsightViewerSync';\nimport { CornerstoneImage } from '../image/types';\nimport {\n  CornerstoneRenderData,\n  CornerstoneViewerLike,\n  Interaction,\n  ViewportTransform,\n  ViewportTransformParams,\n} from '../types';\n\nexport type CornerstoneViewerInteractions = (Interaction | false | null | undefined)[];\n\nexport interface CornerstoneViewerProps extends InsightViewerHostProps {\n  width: number;\n  height: number;\n\n  image: CornerstoneImage;\n\n  interactions?: CornerstoneViewerInteractions;\n\n  /** Invert Color Image */\n  invert: boolean;\n\n  /** Flip Image */\n  flip: boolean;\n\n  /**\n   * Date.now() 로 입력하면 된다.\n   * 값이 변경되는 경우 Pan, Adjust, Zoom 으로 변경된 상태들이 초기화 된다.\n   */\n  resetTime: number;\n\n  /**\n   * Image가 최초 그려지는 순간 변경한다\n   */\n  defaultViewportTransforms?: ViewportTransform[];\n}\n\nconst maxScale: number = 3;\n\nexport class CornerstoneViewer extends Component<CornerstoneViewerProps, {}> implements CornerstoneViewerLike {\n  // ref={}에 의해서 componentDidMount() 이전에 반드시 들어온다\n  private element!: HTMLDivElement;\n\n  // imageLoaded 이후 지연되어 들어오게 된다\n  // setViewport, updateViewport 에 의해서만 접근한다\n  private currentViewport: cornerstone.Viewport | null = null;\n  // props.image.subscribe()를 통해서 지연되어 들어오게 된다\n  private currentImage: cornerstone.Image | null = null;\n\n  // mouse interaction에서 사용한다\n  private teardownInteraction: (() => void)[] | null = null;\n\n  // rx subscriptions\n  private imageSubscription: Unsubscribable | null = null;\n\n  private needImageInitialize: boolean = true;\n\n  private contentWindow: Window = window;\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <div\n          ref={this.elementRef}\n          style={{\n            width: this.props.width,\n            height: this.props.height,\n          }}\n        />\n      </>\n    );\n  }\n\n  // ---------------------------------------------\n  // life cycle\n  // ---------------------------------------------\n  elementRef = (element: HTMLDivElement) => {\n    this.element = element;\n\n    if (!element) return;\n\n    this.startInteraction(this.props.interactions);\n  };\n\n  componentDidMount() {\n    // cornerstone의 imagernderered event를 받는다\n    // image가 render 될때마다 context로 enabledElement를 배포해주기 위해 필요하다\n    this.element.addEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n\n    this.setCornerstoneImage(this.props.image);\n  }\n\n  initImage = (image: cornerstone.Image) => {\n    cornerstone.disable(this.element);\n    cornerstone.enable(this.element, { renderer: 'webgl' });\n\n    let defaultViewport = this.getDefaultViewport(image, this.element);\n\n    if (!defaultViewport) {\n      throw new Error('defaultViewport는 null일 수 없다.');\n    }\n\n    if (Array.isArray(this.props.defaultViewportTransforms)) {\n      const minScale: number = defaultViewport.scale;\n\n      for (const transform of this.props.defaultViewportTransforms) {\n        const patch = transform({\n          element: this.element,\n          currentViewport: defaultViewport,\n          minScale,\n          maxScale,\n        });\n\n        defaultViewport = {\n          ...defaultViewport,\n          ...patch,\n        };\n      }\n    }\n\n    defaultViewport = {\n      ...defaultViewport,\n      hflip: this.props.flip,\n      invert: this.props.invert,\n    };\n\n    cornerstone.displayImage(this.element, image, defaultViewport);\n\n    this.setImage(image);\n    this.setViewport(defaultViewport);\n    this.startInteraction(this.props.interactions);\n  };\n\n  componentWillUnmount() {\n    this.element.removeEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n    cornerstone.disable(this.element);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n    }\n\n    if (this.teardownInteraction) {\n      this.teardownInteraction.forEach((teardown) => teardown());\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CornerstoneViewerProps>) {\n    const { width, height, flip, invert, interactions, resetTime, image } = this.props;\n\n    const defaultViewport: cornerstone.Viewport | null = this.getDefaultViewport(this.currentImage, this.element);\n\n    // 선택된 control 상태에 따라 event를 해제/등록 해준다\n    if (prevProps.interactions !== interactions) {\n      this.startInteraction(interactions);\n    }\n\n    if (defaultViewport) {\n      if (prevProps.resetTime !== resetTime) {\n        // resetTime이 새로 갱신되면 viewport를 defaultViewport를 사용해서 초기화 해준다\n        this.updateCurrentViewport({\n          ...defaultViewport,\n          //...this.defaultViewport,\n          hflip: flip,\n          invert: defaultViewport.invert ? !invert : invert,\n        });\n      } else {\n        // flip, invert는 resetTime의 부분 집합이기 때문에\n        // resetTime에 의한 갱신이 없는 경우에만 적용한다\n        if (prevProps.flip !== flip || prevProps.invert !== invert) {\n          this.updateCurrentViewport({\n            hflip: flip,\n            invert: defaultViewport.invert ? !invert : invert,\n          });\n        }\n      }\n    }\n\n    if (prevProps.width !== width || prevProps.height !== height) {\n      if (this.currentImage) {\n        // container size가 변경되는 경우 cornerstone resize() 처리를 해준다\n        cornerstone.resize(this.element);\n\n        const viewport = cornerstone.getViewport(this.element);\n\n        if (viewport) {\n          this.setViewport(viewport);\n        } else {\n          throw new Error('getViewport() is returns not a Viewport');\n        }\n      }\n    }\n\n    if (prevProps.image !== image) {\n      this.setCornerstoneImage(image);\n    }\n  }\n\n  subscribeImage = (image: cornerstone.Image | null) => {\n    if (!image) return;\n\n    image.voiLUT = undefined; // remove VOI LUT for 'adjust' functionality\n\n    // props.image의 변경 또는 초기화로 인한 완전한 초기화가 필요할때\n    if (this.needImageInitialize) {\n      this.needImageInitialize = false;\n      this.initImage(image);\n    }\n    // 단순 series image의 변경일 경우에는 화면 표시만 바꿔준다\n    else if (this.currentViewport) {\n      cornerstone.displayImage(this.element, image, this.currentViewport);\n    }\n    // 이건 실행되면 안됨\n    else {\n      throw new Error('어떤 상황인지 확인 필요!!!');\n    }\n  };\n\n  onImageRenderered = (event: cornerstone.CornerstoneEvent) => {\n    const eventData: cornerstone.CornerstoneEventData | undefined = event.detail;\n    if (\n      eventData &&\n      eventData.canvasContext &&\n      eventData.element &&\n      eventData.enabledElement &&\n      eventData.image &&\n      typeof eventData.renderTimeInMs === 'number' &&\n      eventData.viewport\n    ) {\n      this.currentViewport = eventData.viewport;\n      this.props.updateCornerstoneRenderData(eventData as CornerstoneRenderData);\n    } else {\n      console.error('CornerstoneEventData에 없는 정보가 있다???', eventData);\n    }\n  };\n\n  // ---------------------------------------------\n  // event handlers\n  // ---------------------------------------------\n  startInteraction = (interactions: CornerstoneViewerInteractions | undefined) => {\n    if (this.teardownInteraction) {\n      this.teardownInteraction.forEach((teardown) => teardown());\n    }\n\n    if (Array.isArray(interactions) && interactions.length > 0) {\n      this.teardownInteraction = interactions\n        .filter((interaction): interaction is Interaction => typeof interaction === 'function')\n        .map((interaction) => interaction(this));\n    }\n  };\n\n  // ---------------------------------------------\n  // getters\n  // ---------------------------------------------\n  getElement = () => this.element;\n\n  getContentWindow = () => this.contentWindow;\n\n  getCurrentViewport = () => this.currentViewport!;\n\n  getDefaultViewport = (image: cornerstone.Image | null, element: HTMLElement | null): cornerstone.Viewport | null => {\n    if (!image || !element) return null;\n    return cornerstone.getDefaultViewportForImage(element, image);\n  };\n\n  getMinScale = () => {\n    const viewport = this.getDefaultViewport(this.currentImage, this.element);\n\n    if (!viewport) {\n      throw new Error('viewport가 정상적으로 와야만 한다');\n    }\n\n    return viewport.scale;\n  };\n\n  getMaxScale = () => {\n    return maxScale;\n  };\n\n  // ---------------------------------------------\n  // setters\n  // ---------------------------------------------\n  updateViewport = (patch: Partial<cornerstone.Viewport>) => {\n    if (this.currentViewport) {\n      this.updateCurrentViewport(patch);\n    }\n  };\n\n  getViewportTransformParams = (): ViewportTransformParams => {\n    return {\n      element: this.element,\n      minScale: this.getMinScale(),\n      maxScale: this.getMaxScale(),\n      currentViewport: this.currentViewport,\n    };\n  };\n\n  private setCornerstoneImage = (image: CornerstoneImage) => {\n    this.needImageInitialize = true;\n\n    this.setImage(null);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n      this.imageSubscription = null;\n    }\n\n    this.imageSubscription = image.image.subscribe(this.subscribeImage);\n  };\n\n  private setImage = (image: cornerstone.Image | null) => {\n    this.currentImage = image;\n  };\n\n  private setViewport = (viewport: cornerstone.Viewport) => {\n    this.currentViewport = viewport;\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n\n  private updateCurrentViewport = (\n    update: Partial<cornerstone.Viewport> | ((viewport: cornerstone.Viewport) => Partial<cornerstone.Viewport>),\n  ) => {\n    if (!this.currentViewport) {\n      throw new Error('viewport가 없는 상태에서 실행되면 안된다');\n    }\n\n    const patch: Partial<cornerstone.Viewport> = typeof update === 'function' ? update(this.currentViewport) : update;\n\n    this.currentViewport = {\n      ...this.currentViewport,\n      ...patch,\n    };\n\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n}\n","import { useMemo } from 'react';\nimport { adjust } from './adjust';\nimport { pan } from './pan';\nimport { zoom } from './zoom';\n\nexport function useViewerInteractions(\n  interactions: ('pan' | 'adjust' | 'zoom' | string)[],\n  { element }: { element?: HTMLElement | null } = {},\n) {\n  return useMemo(\n    () => {\n      return interactions.map((interactionName) => {\n        switch (interactionName) {\n          case 'pan':\n            return pan({ element });\n          case 'adjust':\n            return adjust({ element });\n          case 'zoom':\n            return zoom({ element });\n          default:\n            return undefined;\n        }\n      });\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [element, ...interactions],\n  );\n}\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { useEffect, useState } from 'react';\n\ninterface SeriesImagePosition {\n  /** 현재 Image 위치 */\n  current: number;\n\n  /** 총 Image 갯수 */\n  end: number;\n}\n\nexport function useSeriesImagePosition(image: CornerstoneSequenceImage): SeriesImagePosition {\n  const [result, setResult] = useState<{ current: number; end: number }>(() => ({\n    current: image.getIndex(),\n    end: image.length() - 1,\n  }));\n\n  useEffect(() => {\n    const subscription = image.index.subscribe((current: number) => {\n      setResult(prevResult => {\n        return {\n          ...prevResult,\n          current,\n          end: image.length() - 1,\n        };\n      });\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [image]);\n\n  return result;\n}\n\n/** @deprecated use useSeriesImagePosition() */\nexport const useBulkImagePosition = useSeriesImagePosition;\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { isTouchDevice } from '@lunit/is-touch-device';\nimport { useEffect } from 'react';\n\ninterface SeriesImageScrollParams {\n  image: CornerstoneSequenceImage;\n\n  /** Wheel Event를 처리할 EventTarget */\n  element: HTMLElement | null;\n\n  /** User Interaction 활성화 여부 */\n  enabled?: boolean;\n\n  /** Touch Direction */\n  touchDirection?: 'horizontal' | 'vertical';\n}\n\nexport function useSeriesImageScroll({\n  image,\n  element,\n  enabled = true,\n  touchDirection = 'vertical',\n}: SeriesImageScrollParams) {\n  useEffect(() => {\n    if (!element || enabled !== true) {\n      return () => {};\n    }\n\n    // ---------------------------------------------\n    // wheel handler\n    // ---------------------------------------------\n    function wheel(event: WheelEvent) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      if (event.deltaY > 0) {\n        image.prev();\n      } else if (event.deltaY < 0) {\n        image.next();\n      }\n    }\n\n    // ---------------------------------------------\n    // touch handler\n    // ---------------------------------------------\n    let startIndex: number = -1;\n    let startPoint: { x: number; y: number } | null = null;\n\n    function touchStart(event: TouchEvent) {\n      if (event.targetTouches.length !== 2) return;\n\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      startIndex = image.getIndex();\n\n      startPoint = {\n        x: event.targetTouches[0].pageX,\n        y: event.targetTouches[0].pageY,\n      };\n\n      if (!element) {\n        throw new Error(`undefined element!!!`);\n      }\n\n      element.removeEventListener('touchstart', touchStart);\n\n      element.addEventListener('touchmove', touchMove);\n      element.addEventListener('touchend', touchEnd);\n      element.addEventListener('touchcancel', touchEnd);\n    }\n\n    function touchMove(event: TouchEvent) {\n      if (event.targetTouches.length !== 2 || event.changedTouches.length !== 2 || !startPoint) return;\n\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      const dx: number = event.targetTouches[0].pageX - startPoint.x;\n      const dy: number = event.targetTouches[0].pageY - startPoint.y;\n      const d: number = touchDirection === 'vertical' ? dy : dx;\n\n      image.goto(startIndex + Math.floor(d / 10));\n    }\n\n    function touchEnd(event: TouchEvent) {\n      if (!element) {\n        throw new Error(`undefined element!!!`);\n      }\n\n      element.removeEventListener('touchmove', touchMove);\n      element.removeEventListener('touchend', touchEnd);\n      element.removeEventListener('touchcancel', touchEnd);\n\n      element.addEventListener('touchstart', touchStart);\n    }\n\n    // ---------------------------------------------\n    // start\n    // ---------------------------------------------\n    element.addEventListener('wheel', wheel);\n\n    if (isTouchDevice()) {\n      element.addEventListener('touchstart', touchStart);\n    }\n\n    // ---------------------------------------------\n    // end\n    // ---------------------------------------------\n    return () => {\n      element.removeEventListener('wheel', wheel);\n\n      element.removeEventListener('touchstart', touchStart);\n\n      element.removeEventListener('touchmove', touchMove);\n      element.removeEventListener('touchend', touchEnd);\n      element.removeEventListener('touchcancel', touchEnd);\n    };\n  }, [image, element, enabled, touchDirection]);\n}\n\n/** @deprecated use useSeriesImageScroll */\nexport const useBulkImageScroll = useSeriesImageScroll;\n","import { useState } from 'react';\nimport { CornerstoneRenderData } from '../types';\n\nexport interface InsightViewerHostProps {\n  updateCornerstoneRenderData: (renderData: CornerstoneRenderData) => void;\n}\n\nexport interface InsightViewerGuestProps {\n  cornerstoneRenderData: CornerstoneRenderData | null;\n}\n\ninterface InsightViewerSyncProps {\n  cornerstoneRenderData: CornerstoneRenderData | null;\n  updateCornerstoneRenderData: (eventData: CornerstoneRenderData) => void;\n}\n\nexport function useInsightViewerSync(): InsightViewerSyncProps {\n  const [cornerstoneRenderData, setCornerstoneRenderData] = useState<CornerstoneRenderData | null>(null);\n\n  return {\n    cornerstoneRenderData,\n    updateCornerstoneRenderData: setCornerstoneRenderData,\n  };\n}\n","import { isComplexPolygon } from '@lunit/is-complex-polygon';\nimport { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\nimport { RefObject, useCallback, useState } from 'react';\nimport { Contour, Point } from '../types';\n\nexport interface UseContourParams<T extends Contour> {\n  /**\n   * 다음 contour id를 결정하는데 사용될 수 있다.\n   * MMG와 같이 여러개의 useContour()가 동시에 사용되는 경우 nextId를 일치 시키기 위해 사용된다.\n   */\n  nextId?: number | RefObject<number>;\n\n  /**\n   * 초기화 데이터\n   */\n  initialContours?: Omit<T, 'id'>[];\n\n  /**\n   * Contour Mode\n   * Contour Validation에 영향을 준다. (e.g. polygon 최소 면적 판단)\n   */\n  mode?: 'contour' | 'point' | 'circle';\n}\n\nexport interface ContourDrawingState<T extends Contour> {\n  /** 현재 Contours */\n  contours: T[];\n\n  /** User Interaction 등으로 인해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** 새로운 Contour를 만들어준다 */\n  addContour: (polygon: Point[], contourInfo?: Omit<T, 'id' | 'polygon'>) => T | null;\n\n  /** 여러개의 Contour들을 일괄 추가한다. */\n  addContours: (contours: Omit<T, 'id'>[]) => void;\n\n  /** 특정 Contour를 Focus 하거나, Focus 된 Contour를 제거한다 */\n  focusContour: (contour: T | null) => void;\n\n  /** 특정 Contour의 정보를 Update 한다 */\n  updateContour: (contour: T, patch: Partial<T>) => void;\n\n  /** 특정 Contour를 삭제한다 */\n  removeContour: (contour: T) => void;\n\n  /** 모든 Contour들을 삭제한다 */\n  removeAllContours: () => void;\n\n  /** Contour 데이터를 초기화한다 */\n  reset: (config?: { initialContours?: Omit<T, 'id'>[] }) => void;\n}\n\nexport function useContour<T extends Contour>({\n  nextId,\n  initialContours,\n  mode = 'contour',\n}: UseContourParams<T> = {}): ContourDrawingState<T> {\n  const [contours, setContours] = useState<T[]>(() => {\n    if (initialContours) {\n      const startId: number =\n        typeof nextId === 'number' ? nextId : nextId && typeof nextId.current === 'number' ? nextId.current : 1;\n\n      return initialContours.map<T>((addedContour, i) => {\n        return {\n          ...addedContour,\n          id: startId + i,\n        } as T;\n      });\n    }\n    return [];\n  });\n\n  const [focusedContour, setFocusedContour] = useState<T | null>(null);\n\n  const addContour = useCallback(\n    (polygon: Point[], contourInfo: Partial<Omit<T, 'id' | 'polygon'>> = {}): T | null => {\n      if (mode === 'contour' && (!isPolygonAreaGreaterThanArea(polygon) || isComplexPolygon(polygon))) return null;\n\n      const { dataAttrs } = contourInfo;\n\n      if (dataAttrs) {\n        validateDataAttrs(dataAttrs);\n      }\n\n      let contour: T | null = null;\n\n      setContours(prevContours => {\n        contour = {\n          ...contourInfo,\n          id:\n            typeof nextId === 'number'\n              ? nextId\n              : nextId && typeof nextId.current === 'number'\n              ? nextId.current\n              : Math.max(...prevContours.map(({ id }) => id), 0) + 1,\n          polygon,\n          dataAttrs,\n        } as T;\n\n        return [...prevContours, contour];\n      });\n\n      return contour;\n    },\n    [nextId, mode],\n  );\n\n  const addContours = useCallback(\n    (added: Omit<T, 'id'>[]) => {\n      for (const contour of added) {\n        if (contour.dataAttrs) {\n          validateDataAttrs(contour.dataAttrs);\n        }\n      }\n\n      setContours(prevContours => {\n        const startId: number =\n          typeof nextId === 'number'\n            ? nextId\n            : nextId && typeof nextId.current === 'number'\n            ? nextId.current\n            : Math.max(...prevContours.map(({ id }) => id), 0) + 1;\n\n        return [\n          ...prevContours,\n          ...added.map((addedContour, i) => {\n            return {\n              ...addedContour,\n              id: startId + i,\n            } as T;\n          }),\n        ];\n      });\n    },\n    [nextId],\n  );\n\n  const updateContour = useCallback(\n    (contour: T, patch: Partial<Omit<T, 'id'>>) => {\n      if (\n        patch.polygon &&\n        mode === 'contour' &&\n        (!isPolygonAreaGreaterThanArea(patch.polygon) || isComplexPolygon(patch.polygon))\n      )\n        return;\n\n      if (patch.dataAttrs) {\n        validateDataAttrs(patch.dataAttrs);\n      }\n\n      const nextContour: T = {\n        ...contour,\n        ...patch,\n        id: contour.id,\n      };\n\n      setContours(prevContours => {\n        const nextContours = [...prevContours];\n        const index: number = nextContours.findIndex(({ id }) => nextContour.id === id);\n\n        if (index > -1) {\n          nextContours[index] = nextContour;\n\n          setFocusedContour(prevFocusedContour => {\n            return contour === prevFocusedContour ? nextContour : prevFocusedContour;\n          });\n        }\n\n        return nextContours;\n      });\n\n      return nextContour;\n    },\n    [mode],\n  );\n\n  const focusContour = useCallback((contour: T | null) => {\n    setFocusedContour(prevFocusedContour => {\n      return contour !== prevFocusedContour ? contour : prevFocusedContour;\n    });\n  }, []);\n\n  const removeAllContours = useCallback(() => {\n    setContours([]);\n    setFocusedContour(null);\n  }, []);\n\n  const removeContour = useCallback((contour: T) => {\n    setContours(prevContours => {\n      const index = prevContours.findIndex(({ id }) => id === contour.id);\n\n      if (index > -1) {\n        const nextContours = [...prevContours];\n        nextContours.splice(index, 1);\n        return nextContours;\n      }\n\n      return prevContours;\n    });\n    setFocusedContour(null);\n  }, []);\n\n  const reset = useCallback(\n    ({ initialContours }: { initialContours?: Omit<T, 'id'>[] } = {}) => {\n      setContours(() => {\n        if (initialContours) {\n          const startId: number =\n            typeof nextId === 'number' ? nextId : nextId && typeof nextId.current === 'number' ? nextId.current : 1;\n\n          return initialContours.map<T>((addedContour, i) => {\n            return {\n              ...addedContour,\n              id: startId + i,\n            } as T;\n          });\n        }\n        return [];\n      });\n    },\n    [nextId],\n  );\n\n  return {\n    contours,\n    addContour,\n    addContours,\n    updateContour,\n    removeContour,\n    removeAllContours,\n    focusContour,\n    focusedContour,\n    reset,\n  };\n}\n\nfunction validateDataAttrs(dataAttrs?: { [attr: string]: string }) {\n  if (!dataAttrs) return;\n\n  Object.keys(dataAttrs).forEach(attr => {\n    if (!/^data-/.test(attr)) {\n      throw new Error(`Contour.dataAttrs 속성은 data-* 형태의 이름으로 입력되어야 합니다 (${attr})`);\n    }\n  });\n}\n\n/** @deprecated use useContour() */\nexport const useUserContour = useContour;\n","export function isPolygonAreaGreaterThanArea(polygon: [number, number][], isGreaterThanArea: number = 100): boolean {\n  // https://stackoverflow.com/questions/16285134/calculating-polygon-area\n  // polygon의 면적을 계산해서 최소 면적 이상인 경우를 검증한다\n\n  let total: number = 0;\n\n  for (let i = 0, l = polygon.length; i < l; i++) {\n    const addX: number = polygon[i][0];\n    const addY: number = polygon[i === polygon.length - 1 ? 0 : i + 1][1];\n    const subX: number = polygon[i === polygon.length - 1 ? 0 : i + 1][0];\n    const subY: number = polygon[i][1];\n\n    total += addX * addY * 0.5;\n    total -= subX * subY * 0.5;\n  }\n\n  return Math.abs(total) > isGreaterThanArea;\n}\n","import { RefObject, useCallback, useMemo } from 'react';\nimport { InsightViewer } from '../components/InsightViewer';\nimport { CornerstoneRenderData, CornerstoneViewerLike } from '../types';\n\ninterface ViewportMirroring {\n  /** <CornerstoneViewer updateCornerstoneRenderData={}> 에 사용한다 */\n  updateMasterRenderData: (renderData: CornerstoneRenderData) => void;\n}\n\n/**\n * 여러개의 <CornerstoneViewer>를 동기화 시키기 위해 사용된다\n */\nexport function useViewportMirroring(\n  ...destinations: (\n    | InsightViewer\n    | RefObject<InsightViewer>\n    | CornerstoneViewerLike\n    | RefObject<CornerstoneViewerLike>\n  )[]\n): ViewportMirroring {\n  const updateMasterRenderData = useCallback(\n    ({ viewport }: CornerstoneRenderData) => {\n      const { hflip, vfilip, translation, scale } = viewport;\n\n      for (const dest of destinations) {\n        if ('updateViewport' in dest) {\n          dest.updateViewport({\n            hflip,\n            vfilip,\n            translation,\n            scale,\n          });\n        } else if ('current' in dest && dest.current) {\n          dest.current.updateViewport({\n            hflip,\n            vfilip,\n            translation,\n            scale,\n          });\n        }\n      }\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [...destinations],\n  );\n\n  return useMemo<ViewportMirroring>(\n    () => ({\n      updateMasterRenderData,\n    }),\n    [updateMasterRenderData],\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Progress가 완료된 시간을 찾기 위해 사용된다.\n *\n * (A. Task 시작)\n * → User가 행동할 수 없는 Image Loading 시간\n * → (B. Image가 로딩되어 Task가 시작된 시간)\n * → Task 진행\n * → (C. Task 완료 시점)\n *\n * User가 Task를 진행한 시간을 좀 더 정확하게 계산하기 위해 사용된다.\n *\n * C - A = User가 행동할 수 없는 Image Loading 시간 때문에 부정확\n * B - A = C - A 보다 좀 더 User가 행동할 수 있는 시간을 기준으로 계산\n *\n * ```ts\n * const progress = useMemo(() => [image.progress], [image]);\n * const imageLoadedTime = useImageLoadedTime(progress);\n * ```\n *\n * 여기서 `imageLoadedTime`은 Image가 최종적으로 Load된 시간이다.\n */\nexport function useImageLoadedTime(progresses: Observable<number>[] | null): Date | null {\n  const [time, setTime] = useState<Date | null>(null);\n\n  useEffect(() => {\n    if (progresses) {\n      const subscription = combineLatest(progresses)\n        .pipe(map((numbers: number[]) => numbers.reduce((t, x) => t + x, 0) / numbers.length))\n        .subscribe(value => {\n          if (value >= 1) {\n            setTime(new Date());\n            subscription.unsubscribe();\n          }\n        });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }, [progresses]);\n\n  return time;\n}\n","import React, {\n  Consumer,\n  Context,\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { CornerstoneSingleImage } from '../image/CornerstoneSingleImage';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface ImageStoreProviderProps {\n  children: ReactNode;\n\n  /** 최대 Cache 갯수 - 높을수록 Memory에 영향을 미치게 된다. */\n  cacheImages?: number;\n\n  /** CornerstoneImage factory */\n  factory?: (imageId: string) => CornerstoneImage;\n}\n\nexport interface ImageStoreState {\n  /** CornerstoneImage를 Load 한다 */\n  fetch: (imageId: string) => CornerstoneImage;\n\n  /** Cache를 지운다 */\n  purge: (imageId: string) => void;\n}\n\n// @ts-ignore\nconst ImageStoreContext: Context<ImageStoreState> = createContext<ImageStoreState>();\n\nfunction defaultFactory(imageId: string): CornerstoneImage {\n  return new CornerstoneSingleImage(imageId);\n}\n\nexport function ImageStoreProvider({ cacheImages = 10, factory = defaultFactory, children }: ImageStoreProviderProps) {\n  const [cache] = useState<[string, CornerstoneImage][]>(() => []);\n\n  const fetch = useCallback(\n    (imageId: string) => {\n      let item = cache.find(([itemImageId]) => itemImageId === imageId);\n\n      if (!item) {\n        item = [imageId, factory(imageId)];\n        cache.push(item);\n\n        if (cache.length > cacheImages) {\n          const deleteCount: number = cache.length - cacheImages;\n          const deleteItems = cache.splice(0, deleteCount);\n\n          for (const deleteItem of deleteItems) {\n            deleteItem[1].destroy();\n          }\n        }\n      }\n\n      return item[1];\n    },\n    [cache, cacheImages, factory],\n  );\n\n  const purge = useCallback(\n    (imageId: string) => {\n      const index = cache.findIndex(([itemImageId]) => itemImageId === imageId);\n\n      if (index > -1) {\n        const deleteItems = cache.splice(index, 1);\n\n        for (const deleteItem of deleteItems) {\n          deleteItem[1].destroy();\n        }\n      }\n    },\n    [cache],\n  );\n\n  useEffect(() => {\n    return () => {\n      for (const deleteItem of cache) {\n        deleteItem[1].destroy();\n      }\n    };\n  }, [cache]);\n\n  return <ImageStoreContext.Provider value={{ fetch, purge }}>{children}</ImageStoreContext.Provider>;\n}\n\nexport function useImageStore(): ImageStoreState {\n  return useContext(ImageStoreContext);\n}\n\nexport const ImageStoreConsumer: Consumer<ImageStoreState> = ImageStoreContext.Consumer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\ninterface Params {\n  deferred?: {\n    resolve: (xhrResponse: any) => void;\n    reject: (error: Error) => void;\n  };\n\n  url?: string;\n  imageId?: string;\n}\n\nexport const wadoImageLoaderXHRLoader = (getCancel?: (cancel: () => void) => void) => (\n  url: string,\n  imageId: string,\n  headers: { [key: string]: string } = {},\n  params: Params = {},\n) => {\n  const { cornerstone } = cornerstoneWADOImageLoader.external;\n  const xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  return new Promise<any>((resolve: (xhrResponse: any) => void, reject: (error: Error) => void) => {\n    xhr.open('get', url, true);\n    xhr.responseType = 'arraybuffer';\n\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve,\n      reject,\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    function cancel() {\n      try {\n        xhr.abort();\n      } catch (error) {}\n    }\n\n    if (typeof getCancel === 'function') {\n      getCancel(cancel);\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        resolve(xhr.response);\n      }\n    };\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = () => {\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      if (cornerstone) {\n        cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadstart', eventData);\n      }\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = () => {\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadend', eventData);\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n      let percentComplete;\n\n      if (lengthComputable) {\n        percentComplete = Math.round((loaded / total) * 100);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n        loaded,\n        total,\n        percentComplete,\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadprogress', eventData);\n    };\n\n    xhr.send();\n  });\n};\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneSequenceImage, getProgressEventDetail, ImageLoader, ProgressEventDetail } from './types';\nimport { wadoImageLoaderXHRLoader } from './wadoImageLoaderXHRLoader';\n\nfunction isImage(image: cornerstone.Image | null): image is cornerstone.Image {\n  return image !== null;\n}\n\ninterface Options {\n  unload?: (imageIds: string[]) => void;\n  initialIndex?: number;\n  cancelTokenName?: string;\n  timeout?: number;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneSeriesImage implements CornerstoneSequenceImage {\n  private readonly _images: (cornerstone.Image | null)[];\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _progressSubject: BehaviorSubject<number[]>;\n  private readonly _indexSubject: BehaviorSubject<number>;\n  private readonly _cancel: (() => void)[] = [];\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private readonly imageIds: string[], private readonly options: Options = {}) {\n    this._images = imageIds.map(() => null);\n\n    const { initialIndex = 0 } = options;\n\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._indexSubject = new BehaviorSubject<number>(initialIndex);\n    this._progressSubject = new BehaviorSubject(imageIds.map(() => 0));\n    this._loader = options.loader || defaultLoader;\n\n    cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this.loadImage(imageIds[initialIndex], initialIndex).then(() => {\n      // 최초 image를 next로 보내준다\n      this.change(this._indexSubject.getValue());\n\n      imageIds.forEach((imageId, i) => {\n        // initialDisplayIndex는 이미 로딩했으므로 pass한다\n        if (i !== initialIndex) {\n          this.loadImage(imageId, i).then(() => {\n            // 현재 시점의 displayIndex이면 (displayIndex의 교체 -> loadImage의 순서로 실행되었다면)\n            // next로 보내준다\n            if (i === this._indexSubject.getValue()) {\n              this.change(this._indexSubject.getValue());\n            }\n          });\n        }\n      });\n    });\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progressSubject.pipe<number>(\n      map<number[], number>(progress => progress.reduce((t, x) => t + x, 0) / progress.length),\n    );\n  }\n\n  get index(): Observable<number> {\n    return this._indexSubject.asObservable();\n  }\n\n  onProgress = (event: Event) => {\n    const eventDetail: ProgressEventDetail | undefined = getProgressEventDetail(event);\n\n    if (eventDetail) {\n      const imageIndex: number = this.imageIds.indexOf(eventDetail.imageId);\n\n      if (imageIndex > -1) {\n        const nextProgress: number[] = [...this._progressSubject.getValue()];\n        nextProgress[imageIndex] = eventDetail.loaded / eventDetail.total;\n        this._progressSubject.next(nextProgress);\n      }\n    }\n  };\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this.imageIds);\n    }\n\n    this._imageSubject.unsubscribe();\n\n    cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this._cancel.forEach(cancel => cancel());\n\n    this._destoyed = true;\n  };\n\n  length = (): number => {\n    return this._images.length;\n  };\n\n  getIndex = (): number => {\n    return this._indexSubject.getValue();\n  };\n\n  goto = (value: number) => {\n    this.change(Math.max(0, Math.min(this._images.length - 1, value)));\n  };\n\n  next = (delta: number = 1) => {\n    this.change(Math.min(this._images.length - 1, this._indexSubject.getValue() + delta));\n  };\n\n  prev = (delta: number = 1) => {\n    this.change(Math.max(0, this._indexSubject.getValue() - delta));\n  };\n\n  private change = (index: number) => {\n    this._indexSubject.next(index);\n\n    // 해당 image가 load 되었으면 보여준다\n    if (this._images[index]) {\n      this._imageSubject.next(this._images[index]);\n      return;\n    }\n\n    // load되지 않은 image를 보려하는 경우 가까운 index의 이미지를 먼저 보여준다\n\n    const before: cornerstone.Image[] = this._images\n      .slice(0, index - 1)\n      .filter<cornerstone.Image>(isImage)\n      .reverse();\n\n    if (before.length > 0) {\n      this._imageSubject.next(before[0]);\n      return;\n    }\n\n    const after: cornerstone.Image[] = this._images.slice(index + 1).filter<cornerstone.Image>(isImage);\n\n    if (after.length > 0) {\n      this._imageSubject.next(after[0]);\n      return;\n    }\n\n    console.warn('대체할 Image를 찾을 수 없음');\n  };\n\n  private loadImage = async (imageId: string, index: number) => {\n    try {\n      this._images[index] = await this._loader.loadImage({\n        imageId: imageId,\n        options: { loader: wadoImageLoaderXHRLoader(cancel => this._cancel.push(cancel)) },\n      });\n\n      const nextProgress: number[] = [...this._progressSubject.getValue()];\n      nextProgress[index] = 1;\n\n      const total: number = nextProgress.reduce((t, n) => t + n, 0);\n      if (total >= 1) {\n        cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n      }\n\n      if (!this._destoyed) {\n        this._progressSubject.next(nextProgress);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${imageId}):`, error);\n        this.loadImage(imageId, index);\n      }\n    }\n  };\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\n\ninterface Params {\n  url: string;\n  signal?: AbortSignal;\n  headers?: Headers | [string, string][] | { [key: string]: string };\n}\n\nexport function fetchBuffer({ url, signal, headers }: Params): Observable<number | ArrayBuffer> {\n  const subject = new BehaviorSubject<number | ArrayBuffer>(0);\n\n  const xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  xhr.open('get', url, true);\n  xhr.responseType = 'arraybuffer';\n\n  if (headers instanceof Headers || Array.isArray(headers)) {\n    for (const [k, v] of headers) {\n      xhr.setRequestHeader(k, v);\n    }\n  } else if (headers) {\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n  }\n\n  const abort = () => {\n    try {\n      xhr.abort();\n    } catch (error) {}\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  signal?.addEventListener('abort', abort);\n\n  xhr.onloadstart = () => {\n    subject.next(0);\n  };\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      subject.next(xhr.response);\n\n      signal?.removeEventListener('abort', abort);\n    }\n  };\n\n  xhr.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n    if (lengthComputable) {\n      subject.next(loaded / total);\n    }\n  };\n\n  xhr.send();\n\n  return subject.asObservable();\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\n\ninterface Params {\n  blob: Blob;\n  signal?: AbortSignal;\n}\n\nexport function fileToBuffer({ blob, signal }: Params): Observable<number | ArrayBufferLike> {\n  const subject = new BehaviorSubject<number | ArrayBufferLike>(0);\n\n  const reader = new FileReader();\n\n  const abort = () => {\n    try {\n      reader.abort();\n    } catch (error) {}\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  signal?.addEventListener('abort', abort);\n\n  reader.onloadstart = () => {\n    subject.next(0);\n  };\n\n  reader.onloadend = () => {\n    subject.next(reader.result as ArrayBufferLike);\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  reader.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n    if (lengthComputable) {\n      subject.next(loaded / total);\n    }\n  };\n\n  reader.readAsArrayBuffer(blob);\n\n  return subject.asObservable();\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneImage, ImageLoader } from './types';\n\ninterface Options {\n  unload?: (imageId: string) => void;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneFileSingleImage implements CornerstoneImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _imageId: string;\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private file: File, private readonly options: Options = {}) {\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._loader = options.loader || defaultLoader;\n\n    this._imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file);\n\n    this.loadImage();\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._imageSubject.pipe(map(image => (image ? 1 : 0)));\n  }\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this._imageId);\n    }\n\n    this._destoyed = true;\n  };\n\n  private loadImage = async () => {\n    try {\n      const image = await this._loader.loadImage({\n        imageId: this._imageId,\n      });\n\n      if (!this._destoyed) {\n        this._imageSubject.next(image);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${this._imageId}):`, error);\n        this.loadImage();\n      }\n    }\n  };\n}\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nexport class CornerstoneStaticSeriesImage implements CornerstoneSequenceImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _indexSubject: BehaviorSubject<number>;\n  private readonly _imagesSubscription: Subscription;\n  private readonly _progress: Observable<number>;\n  private _images: cornerstone.Image[] | null = null;\n\n  constructor({\n    progress,\n    images,\n    initialIndex = 'center',\n  }: {\n    progress: Observable<number>;\n    images: Observable<cornerstone.Image[]>;\n    initialIndex?: number | 'start' | 'center' | 'end';\n  }) {\n    this._imagesSubscription = images.subscribe(images => {\n      this._images = images;\n\n      let index: number;\n\n      if (initialIndex === 'start') {\n        index = 0;\n      } else if (initialIndex === 'center') {\n        index = Math.round(images.length / 2);\n      } else if (initialIndex === 'end') {\n        index = images.length - 1;\n      } else {\n        index = initialIndex;\n      }\n\n      this._imageSubject.next(images[index]);\n      this._indexSubject.next(index);\n\n      // subscribe once\n      this._imagesSubscription.unsubscribe();\n    });\n\n    this._progress = progress;\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._indexSubject = new BehaviorSubject<number>(0);\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progress;\n  }\n\n  get index(): Observable<number> {\n    return this._indexSubject.asObservable();\n  }\n\n  length = (): number => {\n    return this._images?.length || 0;\n  };\n\n  getIndex = (): number => {\n    return this._indexSubject.getValue();\n  };\n\n  goto = (value: number) => {\n    if (!this._images) return;\n    const index: number = Math.max(0, Math.min(this._images.length - 1, value));\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  next = (delta: number = 1) => {\n    if (!this._images) return;\n    const index: number = Math.min(this._images.length - 1, this._indexSubject.getValue() + delta);\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  prev = (delta: number = 1) => {\n    if (!this._images) return;\n    const index: number = Math.max(0, this._indexSubject.getValue() - delta);\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  destroy = () => {\n    this._imagesSubscription.unsubscribe();\n    this._imageSubject.unsubscribe();\n    this._indexSubject.unsubscribe();\n  };\n}\n","import { DecoratorFunction } from '@storybook/addons';\nimport React, { createElement, isValidElement } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { globalStyle } from './style';\n\nconst StorybookGlobalStyle = createGlobalStyle`\n  html {\n    font-size: 14px;\n    box-sizing: border-box;\n  }\n  \n  ${globalStyle}\n`;\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withInsightViewerStorybookGlobalStyle: DecoratorFunction<any> = storyFn => {\n  const story = storyFn();\n\n  return (\n    <>\n      <StorybookGlobalStyle />\n      {typeof story === 'function' ? (\n        createElement(story)\n      ) : isValidElement(story) ? (\n        story\n      ) : (\n        <div>story is not valid element</div>\n      )}\n    </>\n  );\n};\n","function asciiDecode(buf: ArrayBufferLike): string {\n  const arr: Uint8Array = new Uint8Array(buf);\n  //@ts-ignore\n  return String.fromCharCode.apply(null, arr);\n}\n\nfunction readUint16LE(buffer: ArrayBufferLike): number {\n  let view: DataView = new DataView(buffer);\n  let val: number = view.getUint8(0);\n  val |= view.getUint8(1) << 8;\n  return val;\n}\n\nexport function npy(\n  buf: ArrayBufferLike,\n): {\n  shape: [number, number, number, number];\n  isFortranOrder: boolean;\n  data: Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n} {\n  // Check the magic number\n  let magic: string = asciiDecode(buf.slice(0, 6));\n  if (magic.slice(1, 6) !== 'NUMPY') {\n    throw new Error('unknown file type');\n  }\n\n  // var version = new Uint8Array(buf.slice(6, 8));\n  let headerLength: number = readUint16LE(buf.slice(8, 10));\n  let headerStr: string = asciiDecode(buf.slice(10, 10 + headerLength));\n  let offsetBytes: number = 10 + headerLength;\n  //rest = buf.slice(10+headerLength);  XXX -- This makes a copy!!! https://www.khronos.org/registry/typedarray/specs/latest/#5\n\n  // Hacky conversion of dict literal string to JS Object\n  let header: string = headerStr\n    .toLowerCase()\n    .replace(/\\(/g, '[')\n    .replace(/\\)/g, ']')\n    .replace(/'/g, '\"')\n    .replace(', }', '}');\n  let info: { descr: string; shape: [number, number, number, number]; fortran_order: boolean } = JSON.parse(header);\n\n  // Intepret the bytes according to the specified dtype\n  let data: Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n  if (info.descr === '|u1') {\n    data = new Uint8Array(buf, offsetBytes);\n  } else if (info.descr === '|i1') {\n    data = new Int8Array(buf, offsetBytes);\n  } else if (info.descr === '<u2') {\n    data = new Uint16Array(buf, offsetBytes);\n  } else if (info.descr === '<i2') {\n    data = new Int16Array(buf, offsetBytes);\n  } else if (info.descr === '<u4') {\n    data = new Uint32Array(buf, offsetBytes);\n  } else if (info.descr === '<i4') {\n    data = new Int32Array(buf, offsetBytes);\n  } else if (info.descr === '<f4') {\n    data = new Float32Array(buf, offsetBytes);\n  } else if (info.descr === '<f8') {\n    data = new Float64Array(buf, offsetBytes);\n  } else {\n    throw new Error('unknown numeric dtype');\n  }\n\n  return {\n    shape: info.shape,\n    isFortranOrder: info.fortran_order,\n    data: data,\n  };\n}\n","import { Observable, OperatorFunction, Subscription } from 'rxjs';\nimport { npy } from './npy';\nimport { NpyImageInfo } from './types';\n\nexport interface NpyCornerstoneImages {\n  axial: cornerstone.Image[];\n  coronal: cornerstone.Image[];\n  sagittal: cornerstone.Image[];\n}\n\nexport const mapNpyBufferToImages = ({\n  id,\n  windowCenter,\n  windowWidth,\n  sliceSpacing,\n  rowPixelSpacing,\n  columnPixelSpacing,\n  slope = 1.0,\n  intercept = 0.0,\n  minPixelValue = -2048,\n  maxPixelValue = 3096,\n}: NpyImageInfo): OperatorFunction<ArrayBufferLike, NpyCornerstoneImages> => (\n  observable: Observable<ArrayBufferLike>,\n) =>\n  new Observable<NpyCornerstoneImages>(observer => {\n    const subscription: Subscription = observable.subscribe(\n      buffer => {\n        const {\n          shape: [, slices, rows, columns],\n          data,\n        } = npy(buffer);\n\n        const axialImages: cornerstone.Image[] = [];\n        const coronalImages: cornerstone.Image[] = [];\n        const sagittalImages: cornerstone.Image[] = [];\n\n        const axialImageDataLength: number = columns * rows;\n        for (let i = 0; i < slices; i++) {\n          const axialImageData: Int16Array = new Int16Array(axialImageDataLength);\n          for (let j = 0; j < axialImageDataLength; j++) {\n            axialImageData[j] = data[i * axialImageDataLength + j];\n          }\n          axialImages.push({\n            imageId: id + '_axial_' + i,\n            minPixelValue,\n            maxPixelValue,\n            slope,\n            intercept,\n            //@ts-ignore\n            windowCenter,\n            //@ts-ignore\n            windowWidth,\n            getPixelData: () => axialImageData,\n            rows: rows,\n            columns,\n            height: rows,\n            width: columns,\n            color: false,\n            columnPixelSpacing,\n            rowPixelSpacing,\n            invert: false,\n            sizeInBytes: columns * rows * Int16Array.BYTES_PER_ELEMENT,\n            //@ts-ignore\n            sliceSpacing,\n          });\n        }\n\n        const coronalRows: number = slices;\n        const coronalColumns: number = columns;\n        for (let i = 0; i < rows; i++) {\n          const coronalImageData: Int16Array = new Int16Array(coronalRows * coronalColumns);\n          for (let x = 0; x < coronalColumns; x++) {\n            for (let y = 0; y < coronalRows; y++) {\n              // WARNING! row reversed\n              coronalImageData[x + (coronalRows - y - 1) * coronalColumns] =\n                data[x + y * axialImageDataLength + i * coronalColumns];\n            }\n          }\n          coronalImages.push({\n            imageId: id + '_coronal_' + i,\n            minPixelValue,\n            maxPixelValue,\n            slope,\n            intercept,\n            //@ts-ignore\n            windowCenter,\n            //@ts-ignore\n            windowWidth,\n            getPixelData: () => coronalImageData,\n            rows: coronalRows,\n            columns: coronalColumns,\n            height: coronalRows,\n            width: coronalColumns,\n            color: false,\n            columnPixelSpacing: columnPixelSpacing,\n            rowPixelSpacing: sliceSpacing,\n            invert: false,\n            sizeInBytes: coronalRows * coronalColumns * Int16Array.BYTES_PER_ELEMENT,\n            //@ts-ignore\n            sliceSpacing: rowPixelSpacing,\n          });\n\n          const sagittalRows = slices;\n          const sagittalColumns = rows;\n          const sagittalImageData = new Int16Array(sagittalRows * sagittalColumns);\n          for (let x = 0; x < sagittalColumns; x++) {\n            for (let y = 0; y < sagittalRows; y++) {\n              // WARNING! row reversed\n              sagittalImageData[x + (sagittalRows - y - 1) * sagittalColumns] =\n                data[x * columns + y * axialImageDataLength + i];\n            }\n          }\n          sagittalImages.push({\n            imageId: id + '_sagittal_' + i,\n            minPixelValue,\n            maxPixelValue,\n            slope,\n            intercept,\n            //@ts-ignore\n            windowCenter,\n            //@ts-ignore\n            windowWidth,\n            getPixelData: () => sagittalImageData,\n            rows: sagittalRows,\n            columns: sagittalColumns,\n            height: sagittalRows,\n            width: sagittalColumns,\n            color: false,\n            columnPixelSpacing: rowPixelSpacing,\n            rowPixelSpacing: sliceSpacing,\n            invert: false,\n            sizeInBytes: sagittalRows * sagittalColumns * Int16Array.BYTES_PER_ELEMENT,\n            //@ts-ignore\n            sliceSpacing: columnPixelSpacing,\n          });\n        }\n\n        observer.next({\n          axial: axialImages,\n          coronal: coronalImages,\n          sagittal: sagittalImages,\n        });\n\n        return () => {\n          subscription.unsubscribe();\n        };\n      },\n      error => observer.error(error),\n      () => observer.complete(),\n    );\n  });\n","import { posMapToImageData } from '@lunit/heatmap';\nimport React, { Component, createRef, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { cleanCanvas } from './draw/cleanCanvas';\n\nexport interface HeatmapViewerProps extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** AI 결과로 나오는 Heatmap 데이터 형식 */\n  posMap: number[][];\n\n  /** Threshold 값 (CXR = 0.15, MMG = 0.1) */\n  threshold: number;\n}\n\nexport class HeatmapViewer extends Component<HeatmapViewerProps, {}> {\n  private canvasRef: RefObject<HTMLCanvasElement> = createRef();\n  private ctx: CanvasRenderingContext2D | null = null;\n  private imageData: ImageData | null = null;\n  private imageResourceCanvas: HTMLCanvasElement | null = null;\n\n  render() {\n    return (\n      <Canvas\n        ref={this.canvasRef}\n        width={this.props.width}\n        height={this.props.height}\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.imageResourceCanvas = document.createElement('canvas');\n\n    if (!this.canvasRef.current) throw new Error('<canvas> is not initialized');\n\n    this.ctx = this.canvasRef.current.getContext('2d');\n\n    if (!this.ctx) throw new Error('<canvas> context 2d is not initialized');\n\n    this.imageData = posMapToImageData(this.props.posMap, this.props.threshold);\n\n    this.drawHeatmap(this.props);\n  }\n\n  componentDidUpdate(prevProps: Readonly<HeatmapViewerProps>) {\n    const { width, height, posMap, threshold, cornerstoneRenderData } = this.props;\n\n    if (prevProps.posMap !== posMap || prevProps.threshold !== threshold) {\n      this.imageData = posMapToImageData(posMap, threshold);\n    }\n\n    if (\n      prevProps.posMap !== posMap ||\n      prevProps.threshold !== threshold ||\n      prevProps.cornerstoneRenderData !== cornerstoneRenderData\n    ) {\n      cleanCanvas(this.ctx!, width, height);\n\n      this.drawHeatmap(this.props);\n    }\n  }\n\n  drawHeatmap = ({ cornerstoneRenderData }: Readonly<HeatmapViewerProps>) => {\n    if (!this.imageData || !this.imageResourceCanvas || !this.ctx || !cornerstoneRenderData) {\n      return;\n    }\n\n    try {\n      this.ctx.save();\n\n      this.imageResourceCanvas.width = this.imageData.width;\n      this.imageResourceCanvas.height = this.imageData.height;\n      this.imageResourceCanvas.getContext('2d')!.putImageData(this.imageData, 0, 0);\n\n      cornerstone.setToPixelCoordinateSystem(cornerstoneRenderData.enabledElement, this.ctx);\n\n      const imageWidth: number = cornerstoneRenderData.image.width;\n      const imageHeight: number = cornerstoneRenderData.image.height;\n\n      this.ctx.drawImage(\n        this.imageResourceCanvas,\n        0,\n        0,\n        this.imageResourceCanvas.width,\n        this.imageResourceCanvas.height,\n        0,\n        0,\n        imageWidth,\n        imageHeight,\n      );\n\n      this.ctx.restore();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nconst Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n`;\n\n/**\n * @deprecated use HeatmapViewer instead\n */\nexport const MachineHeatmapViewer = HeatmapViewer;\n","// enabledElement로 transform된 canvas의 좌표계를 1:1로 돌린 다음\n// pixel을 지우고 다시 원래의 transform 상태로 되돌린다\nexport function cleanCanvas(ctx: CanvasRenderingContext2D, width: number, height: number) {\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.clearRect(0, 0, width, height);\n  ctx.restore();\n}\n","type Point = [number, number];\n\n/**\n * ab 와 cd 가 교차하는지 판정\n * @param a line 1 start\n * @param b line 1 end\n * @param c line 2 start\n * @param d line 2 end\n */\nexport function isIntersection(a: Point, b: Point, c: Point, d: Point): boolean {\n  if (Math.max(a[0], b[0]) <= Math.min(c[0], d[0])) return false;\n  if (Math.min(a[0], b[0]) >= Math.max(c[0], d[0])) return false;\n  if (Math.max(a[1], b[1]) <= Math.min(c[1], d[1])) return false;\n  if (Math.min(a[1], b[1]) >= Math.max(c[1], d[1])) return false;\n\n  const sign1: number = (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n  const sign2: number = (b[0] - a[0]) * (d[1] - a[1]) - (d[0] - a[0]) * (b[1] - a[1]);\n  const sign3: number = (d[0] - c[0]) * (a[1] - c[1]) - (a[0] - c[0]) * (d[1] - c[1]);\n  const sign4: number = (d[0] - c[0]) * (b[1] - c[1]) - (b[0] - c[0]) * (d[1] - c[1]);\n\n  if (sign1 === 0 && sign2 === 0 && sign3 === 0 && sign4 === 0) return true;\n  return sign1 * sign2 < 0 && sign3 * sign4 < 0;\n}\n","import { isIntersection } from '@lunit/is-intersection';\n\ntype Point = [number, number];\n\n/**\n * polygon이 교차점을 가진 complex polygon인지 확인\n * @param polygon Array<[number, number]>\n */\nexport function isComplexPolygon(polygon: Point[]): boolean {\n  // 끝점으로 최초점을 추가해서 닫힌 polygon을 만들어준다\n  const closedPolygon: Point[] = [...polygon, polygon[0]];\n  const max: number = closedPolygon.length;\n\n  // 0 ->\n  let i: number = -1;\n  while (++i < max - 2) {\n    // i + 1 ->\n    // 현재 i 지점의 이전은 검색할 필요가 없기 때문에 i 이후 지점부터 검색한다\n    let n: number = i + 2;\n    while (++n < max - 1) {\n      // line a -> b 와 line c -> d 가 교차하는지 체크한다\n      // i 가 point a 가 되고, i + 1 이 point b 가 된다\n      // i + 2 가 c, i + 3 이 d가 된다\n      // i + 1 -> i + 2 은 i -> i + 1 과 맞닿아있어 교차될 수 없으므로 제외한다\n      if (isIntersection(closedPolygon[i], closedPolygon[i + 1], closedPolygon[n], closedPolygon[n + 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","import React, { ComponentType, MouseEvent, SVGProps, useCallback } from 'react';\nimport styled from 'styled-components';\n\nexport interface PointPinProps extends SVGProps<SVGGElement> {\n  x: number;\n  y: number;\n  label: string | null;\n  onEnter: () => void;\n  onLeave: () => void;\n  onRemove: () => void;\n}\n\nfunction PointPinBase({ x, y, label, onEnter, onLeave, onRemove, ...gProps }: PointPinProps) {\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n      event.preventDefault();\n\n      onRemove();\n    },\n    [onRemove],\n  );\n\n  return (\n    <g {...gProps} transform={`translate(${x} ${y})`} onMouseEnter={onEnter} onMouseLeave={onLeave} onClick={onClick}>\n      <circle cx={0} cy={0} r={4} />\n\n      <path\n        d=\"M8,16c0,0,6-5.582,6-10s-2.686-6-6-6S2,1.582,2,6S8,16,8,16z M5,5c0-1.657,1.343-3,3-3s3,1.343,3,3S9.657,8,8,8S5,6.657,5,5  z\"\n        transform=\"translate(-8 -16)\"\n        data-border=\"border\"\n      />\n\n      <path\n        d=\"M8,16c0,0,6-5.582,6-10s-2.686-6-6-6S2,1.582,2,6S8,16,8,16z M5,5c0-1.657,1.343-3,3-3s3,1.343,3,3S9.657,8,8,8S5,6.657,5,5  z\"\n        transform=\"translate(-8 -16)\"\n      />\n\n      {label && (\n        <g transform=\"translate(0 -25)\">\n          <text>{label}</text>\n          <text>{label}</text>\n        </g>\n      )}\n    </g>\n  );\n}\n\nexport const PointPin: ComponentType<PointPinProps> = styled(PointPinBase)`\n  cursor: pointer;\n\n  color: var(--pin-color, #ffffff);\n\n  &[data-focused] {\n    color: var(--pin-focused-color, rgb(255, 194, 17));\n  }\n\n  > circle {\n    fill: #000000;\n  }\n\n  > path {\n    fill: currentColor;\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n    }\n  }\n\n  > g {\n    text {\n      text-anchor: middle;\n      font-size: 14px;\n      font-weight: bold;\n    }\n\n    text:first-child {\n      stroke-width: 4px;\n      stroke: #000000;\n    }\n\n    text:last-child {\n      fill: currentColor;\n    }\n  }\n` as ComponentType<PointPinProps>;\n","import React, { Component, ComponentType, MouseEvent } from 'react';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { PointPin, PointPinProps } from './PointPin';\n\nexport interface PointDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** Draw / Focus / Remove 와 같은 User Interaction을 활성 / 비활성 한다 */\n  interact?: boolean;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus?: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd?: (polygon: Point[], event: MouseEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove?: (contour: T) => void;\n\n  className?: string;\n\n  /** Pin의 모양을 변경하는데 사용할 수 있다 */\n  pointPinComponent?: ComponentType<PointPinProps>;\n\n  /** Contour 데이터에 따라 Pin을 다르게 하고 싶은 경우 사용할 수 있다 */\n  pointPinFunction?: (contour: T) => ComponentType<PointPinProps>;\n}\n\nfunction toLocal(element: HTMLElement, point: Point): { x: number; y: number } {\n  return cornerstone.pixelToCanvas(element, { x: point[0], y: point[1] });\n}\n\nexport class PointViewer<T extends Contour> extends Component<PointDrawerProps<T>, {}> {\n  render() {\n    return (\n      <svg\n        role=\"figure\"\n        width={this.props.width}\n        height={this.props.height}\n        className={this.props.className}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: this.props.width,\n          height: this.props.height,\n          userSelect: 'none',\n          pointerEvents: this.props.interact === true ? 'auto' : 'none',\n        }}\n        onClick={this.onPointAdd}\n      >\n        {this.props.cornerstoneRenderData &&\n          this.props.contours &&\n          this.props.contours.length > 0 &&\n          this.props.contours.map(contour => {\n            const { id, polygon, dataAttrs = {}, label } = contour;\n\n            const Pin: ComponentType<PointPinProps> =\n              typeof this.props.pointPinFunction === 'function'\n                ? this.props.pointPinFunction(contour)\n                : this.props.pointPinComponent || PointPin;\n\n            const text: string =\n              typeof label === 'function' ? label(contour) : typeof label === 'string' ? label : id.toString();\n\n            return (\n              <Pin\n                key={id}\n                {...toLocal(this.props.cornerstoneRenderData!.element, polygon[0])}\n                {...dataAttrs}\n                data-id={id}\n                data-focused={contour === this.props.focusedContour || undefined}\n                label={text}\n                onEnter={() => this.onPointEnter(contour)}\n                onLeave={() => this.onPointLeave()}\n                onRemove={() => this.onPointRemove(contour)}\n              />\n            );\n          })}\n      </svg>\n    );\n  }\n\n  private onPointAdd = (event: MouseEvent<SVGSVGElement>) => {\n    if (\n      typeof this.props.onAdd === 'function' &&\n      this.props.cornerstoneRenderData &&\n      this.props.cornerstoneRenderData.element\n    ) {\n      const element: HTMLElement = this.props.cornerstoneRenderData.element;\n      const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n      this.props.onAdd([[x, y]], event);\n    }\n  };\n\n  private onPointEnter = (contour: T) => {\n    if (typeof this.props.onFocus === 'function') {\n      this.props.onFocus(contour);\n    }\n  };\n\n  private onPointLeave = () => {\n    if (typeof this.props.onFocus === 'function') {\n      this.props.onFocus(null);\n    }\n  };\n\n  private onPointRemove = (contour: T) => {\n    if (typeof this.props.onRemove === 'function') {\n      this.props.onRemove(contour);\n    }\n  };\n}\n\n/**\n * @deprecated use PointViewer instead\n */\nexport const UserPointViewer = PointViewer;\n"],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{865:function(e,n,t){"use strict";t.r(n),n.default="import { DialogTemplate, OpenDialog, useDialog } from '@lunit/use-dialog';\nimport React, { ReactNode } from 'react';\nimport { Button } from './Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from './Dialog';\n\n/**\n * const [openAlert, alertElement] = useAlert()\n *\n * \ud544\uc694\ud560 \ub54c `openAlert({description: '...'})` \ud615\ud0dc\ub85c \ud638\ucd9c\ud558\uba74 Alert\uc774 \uc5f4\ub9b0\ub2e4\n *\n * `<div>{alertElement}</div>` \uc640 \uac19\uc774 `alertElement`\ub294 \ud654\uba74\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4.\n */\nexport function useAlert(): [OpenDialog<AlertParams, void>, ReactNode] {\n  return useDialog(AlertDialogTemplate);\n}\n\nexport interface AlertParams {\n  title?: ReactNode;\n  description: ReactNode;\n  agree?: string;\n}\n\nexport const AlertDialogTemplate: DialogTemplate<AlertParams, void> = ({\n  closeDialog,\n  title,\n  description,\n  agree = 'Agree',\n}) => {\n  return (\n    <Dialog\n      open\n      onClose={() => closeDialog()}\n      disableBackdropClick\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText>\n      </DialogContent>\n\n      <DialogActions>\n        <Button autoFocus layout=\"center\" label={agree} style={{ width: 150 }} onClick={() => closeDialog()} />\n      </DialogActions>\n    </Dialog>\n  );\n};\n"},866:function(e,n,t){"use strict";t.r(n),n.default="import { DialogTemplate, OpenDialog, useDialog } from '@lunit/use-dialog';\nimport React, { ReactNode } from 'react';\nimport { Button } from './Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from './Dialog';\n\nexport function useConfirm(): [OpenDialog<ConfirmParams, boolean>, ReactNode] {\n  return useDialog(ConfirmDialogTemplate);\n}\n\nexport interface ConfirmParams {\n  title?: ReactNode;\n  description: ReactNode;\n  agree?: string;\n  disagree?: string;\n}\n\nexport const ConfirmDialogTemplate: DialogTemplate<ConfirmParams, boolean> = ({\n  closeDialog,\n  title,\n  description,\n  agree = 'Agree',\n  disagree = 'Disagree',\n}) => {\n  return (\n    <Dialog\n      open\n      onClose={() => closeDialog(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText>\n      </DialogContent>\n\n      <DialogActions>\n        <Button layout=\"center\" label={disagree} style={{ width: 150 }} onClick={() => closeDialog(false)} />\n        <Button autoFocus layout=\"center\" label={agree} style={{ width: 150 }} onClick={() => closeDialog(true)} />\n      </DialogActions>\n    </Dialog>\n  );\n};\n"},867:function(e,n,t){"use strict";t.r(n);var o=t(641),l=t(696),a=t(0),i=t.n(a);n.default=()=>{const[e,n]=Object(l.h)(),[t,r]=Object(l.i)(),c=Object(a.useCallback)(async()=>{await e({description:"ALERT COMPONENT"})},[e]),s=Object(a.useCallback)(async()=>{const n=await t({description:"CONFIRM COMPONENT"});await e({description:`CONFIRM RESULT IS ${n}`})},[t,e]);return i.a.createElement("div",null,i.a.createElement(o.a,{onClick:c},"Open Alert"),i.a.createElement(o.a,{onClick:s},"Open Confirm"),n,r)}},868:function(e,n,t){"use strict";t.r(n),n.default="import { useAlert, useConfirm } from '@lunit/opt-components';\nimport { Button } from '@material-ui/core';\nimport React, { useCallback } from 'react';\n\nexport default () => {\n  const [openAlert, alertElement] = useAlert();\n  const [openConfirm, confirmElement] = useConfirm();\n\n  const onAlert = useCallback(async () => {\n    await openAlert({\n      description: 'ALERT COMPONENT',\n    });\n  }, [openAlert]);\n\n  const onConfirm = useCallback(async () => {\n    const result: boolean = await openConfirm({\n      description: 'CONFIRM COMPONENT',\n    });\n\n    await openAlert({\n      description: `CONFIRM RESULT IS ${result}`,\n    });\n  }, [openConfirm, openAlert]);\n\n  return (\n    <div>\n      <Button onClick={onAlert}>Open Alert</Button>\n\n      <Button onClick={onConfirm}>Open Confirm</Button>\n\n      {alertElement}\n      {confirmElement}\n    </div>\n  );\n};\n"},869:function(e,n,t){"use strict";t.r(n);var o=t(641),l=t(652),a=t(696),i=t(697),r=t(0),c=t.n(r);const s=e=>c.a.createElement(u,e);function u({initialValue:e="",closeDialog:n}){const[t,o]=Object(r.useState)(()=>e);return c.a.createElement(a.b,{open:!0,onClose:()=>n(null),"aria-labelledby":"alert-dialog-title","aria-describedby":"alert-dialog-description"},c.a.createElement(a.d,null,c.a.createElement(a.e,{id:"alert-dialog-description"},c.a.createElement(l.a,{inputProps:{style:{color:"black"}},fullWidth:!0,value:t,onChange:({target:e})=>o(e.value)}))),c.a.createElement(a.c,null,c.a.createElement(a.a,{layout:"center",label:"Cancel",style:{width:150},onClick:()=>n(null)}),c.a.createElement(a.a,{autoFocus:!0,layout:"center",label:"OK",style:{width:150},disabled:t.trim()===e.trim()||0===t.trim().length,onClick:()=>n({value:t})})))}n.default=()=>{const[e,n]=Object(r.useState)(""),[t,l]=Object(i.a)(s),a=Object(r.useCallback)(async()=>{const o=await t({initialValue:e});o&&n(o.value)},[e,t]);return c.a.createElement("div",null,c.a.createElement(o.a,{onClick:a},"Open Form"),c.a.createElement("div",{style:{marginTop:20}},e),l)}},870:function(e,n,t){"use strict";t.r(n),n.default="import { Button, Dialog, DialogActions, DialogContent, DialogContentText } from '@lunit/opt-components';\nimport { DialogProps, DialogTemplate, OpenDialog, useDialog } from '@lunit/use-dialog';\nimport { Button as MuiButton, TextField } from '@material-ui/core';\nimport React, { ReactNode, useCallback, useState } from 'react';\n\ninterface FormParams {\n  initialValue?: string;\n}\n\ntype FormReturn = { value: string } | null;\n\nfunction useForm(): [OpenDialog<FormParams, FormReturn>, ReactNode] {\n  return useDialog(FormTemplate);\n}\n\n// \ub0b4\ubd80\uc801\uc73c\ub85c State (e.g. useState()) \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\uba74 useAlert() \uacfc \uac19\uc774\n// FormTemplate \uc5d0\uc11c \ubc14\ub85c JSX Template\uc744 \uad6c\uc131\ud558\uba74 \ub418\uc9c0\ub9cc,\nconst FormTemplate: DialogTemplate<FormParams, FormReturn> = props => {\n  return <FormComponent {...props} />;\n};\n\n// \uc544\ub798\uc640 \uac19\uc774 useState()\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d4 \uc774\ub807\uac8c \ud55c \ub2e8\uacc4 \ub354 \ub9cc\ub4e4\uc5b4\uc8fc\ub3c4\ub85d \ud55c\ub2e4.\nfunction FormComponent({ initialValue = '', closeDialog }: DialogProps<FormParams, FormReturn>) {\n  const [value, setValue] = useState<string>(() => initialValue);\n\n  return (\n    <Dialog\n      open\n      onClose={() => closeDialog(null)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <TextField\n            inputProps={{\n              style: {\n                color: 'black',\n              },\n            }}\n            fullWidth\n            value={value}\n            onChange={({ target }) => setValue(target.value)}\n          />\n        </DialogContentText>\n      </DialogContent>\n\n      <DialogActions>\n        <Button layout=\"center\" label=\"Cancel\" style={{ width: 150 }} onClick={() => closeDialog(null)} />\n        <Button\n          autoFocus\n          layout=\"center\"\n          label=\"OK\"\n          style={{ width: 150 }}\n          disabled={value.trim() === initialValue.trim() || value.trim().length === 0}\n          onClick={() => closeDialog({ value })}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default () => {\n  const [value, setValue] = useState<string>('');\n\n  const [openForm, formElement] = useForm();\n\n  const onFormOpen = useCallback(async () => {\n    // await\ub97c \uc0ac\uc6a9\ud574\uc11c Dialog\uc758 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9b0\ub2e4\n    const result: FormReturn = await openForm({\n      initialValue: value,\n    });\n\n    // null\uc774 \uc544\ub2cc \uacbd\uc6b0\n    if (result) {\n      // \uc5bb\uc5b4\ub0b8 result data\ub97c \ucc98\ub9ac\ud55c\ub2e4\n      setValue(result.value);\n    }\n  }, [value, openForm]);\n\n  return (\n    <div>\n      <MuiButton onClick={onFormOpen}>Open Form</MuiButton>\n\n      <div style={{ marginTop: 20 }}>{value}</div>\n\n      {/* Element\ub294 \ubc18\ub4dc\uc2dc Binding \uc2dc\ucf1c\uc918\uc57c \ud55c\ub2e4 */}\n      {formElement}\n    </div>\n  );\n};\n"},923:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));t(0);var o=t(62),l=t(7),a=t(89),i=t(667);const r={};function c({components:e,...n}){return Object(o.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",null,Object(o.b)("inlineCode",{parentName:"h1"},"@lunit/use-dialog")),Object(o.b)("p",null,"React Hook \ud615\ud0dc\uc758 Dialog\ub97c \ub9cc\ub4e4\uae30 \uc704\ud55c Wrapper."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Dialog Hook\uc744 \ub9cc\ub4e4\uae30 \uc704\ud55c Wrapper, \uc9c1\uc811\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 Component\ub294 \uc544\ub2c8\ub2e4.")),Object(o.b)("h1",null,Object(o.b)("inlineCode",{parentName:"h1"},"useAlert()"),", ",Object(o.b)("inlineCode",{parentName:"h1"},"useConfirm()")),Object(o.b)("p",null,"\uc544\ub798\uc640 \uac19\uc774 ",Object(o.b)("inlineCode",{parentName:"p"},"DialogTemplate<ParamType, RetrunType>")," \ud615\uc2dd\uc758 Template\uc744 \ub9cc\ub4e0 \ub2e4\uc74c,",Object(o.b)("br",{parentName:"p"}),"\n",Object(o.b)("inlineCode",{parentName:"p"},"useDialog()"),"\ub97c \uc0ac\uc6a9\ud574\uc11c \uc0c8\ub85c\uc6b4 Dialog Hook\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4."),Object(o.b)(a.Example,{example:Object(l.d)("@lunit/opt-components/components/useAlert",{source:t(865),filename:"src/_packages/@lunit/opt-components/components/useAlert.tsx"}),mdxType:"Example"}),Object(o.b)(a.Example,{example:Object(l.d)("@lunit/opt-components/components/useConfirm",{source:t(866),filename:"src/_packages/@lunit/opt-components/components/useConfirm.tsx"}),mdxType:"Example"}),Object(o.b)("p",null,"\ub9cc\ub4e4\uc5b4\uc9c4 Dialog Hook\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4."),Object(o.b)(a.Example,{example:Object(l.b)("./Samples/Basic",{component:t(867),source:t(868),filename:"src/_packages/@lunit/use-dialog/__pages__/Samples/Basic.tsx"}),mdxType:"Example"},Object(o.b)(i.a,{height:100,mdxType:"InsightViewerPreview"})),Object(o.b)("h1",null,"Custom Dialog \uc608\uc81c"),Object(o.b)(a.Example,{example:Object(l.b)("./Samples/FormDialog",{component:t(869),source:t(870),filename:"src/_packages/@lunit/use-dialog/__pages__/Samples/FormDialog.tsx"}),mdxType:"Example"},Object(o.b)(i.a,{height:100,mdxType:"InsightViewerPreview"})))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=17.b3bebe6416a8c80c8f15.js.map
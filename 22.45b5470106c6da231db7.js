(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{674:function(e,n,t){"use strict";function o(e){return`Annotation(${e.id})`}t.d(n,"b",(function(){return o})),t.d(n,"a",(function(){return r}));const r=[{polygon:[[340.48,232.95999999999998],[265.38666666666666,232.10666666666668]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[173.2266666666667,381.44],[276.48,400.21333333333337]],label:o,dataAttrs:{"data-category":"abnormal"}},{polygon:[[419.84000000000003,448.85333333333335],[361.81333333333333,407.04]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[174.93333333333334,88.74666666666668],[215.89333333333335,129.70666666666665]],label:o,dataAttrs:{"data-category":"abnormal"}}]},700:function(e,n,t){"use strict";t.r(n),n.default="import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestContours } from '../geom/hitTestContours';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface ContourHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour \ub370\uc774\ud130\ub97c \uc0c1\uc18d\ubc1b\uc740 Annotation \ub370\uc774\ud130 */\n  contours: T[];\n\n  /**\n   * Hover \uae30\ub2a5 \ud65c\uc131\ud654 \uc5ec\ubd80\n   * HTMLElement\ub85c \uc785\ub825\ud560 \uacbd\uc6b0 MouseEvent\ub97c \ud574\ub2f9 HTMLElement\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc98\ub9ac\ud55c\ub2e4.\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * \ud2b9\uc815 Contour\uc5d0 Mouse Over \ub418\uc5c8\uc744 \ub54c\n   * focusedContour\ub97c \uacb0\uc815\ud558\ub294\ub370 \ud544\uc694\ud558\ub2e4\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n\ninterface ContourHoverState {\n  polygon: Point[];\n}\n\nexport class ContourHoverBase<T extends Contour> extends Component<ContourHoverProps<T>, ContourHoverState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private contentWindow: Window = window;\n\n  constructor(props: ContourHoverProps<T>) {\n    super(props);\n\n    this.state = {\n      polygon: [],\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n        ></svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<ContourHoverProps<T>>) {\n    if (prevProps.hover !== this.props.hover) {\n      if (this.element) this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) this.deactivateInitialEvents();\n  }\n\n  getElement = ({ hover }: Readonly<ContourHoverProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return hover instanceof this.contentWindow['HTMLElement'] ? (hover as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ hover }: Readonly<ContourHoverProps<T>>) => {\n    return hover instanceof this.contentWindow['HTMLElement'] || hover === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (this.element) this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  deactivateInitialEvents = () => {\n    if (this.element) this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestContours<T>(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourHover: new <T extends Contour>() => ContourHoverBase<T> = styled(ContourHoverBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n` as any;\n"},701:function(e,n,t){"use strict";t.r(n);var o=t(666),r=t(0),i=t.n(r),s=t(674);Object(o.installWADOImageLoader)();const a={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]};n.default=()=>{const e=Object(r.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),{cornerstoneRenderData:n,updateCornerstoneRenderData:t}=Object(o.useInsightViewerSync)(),{contours:l,focusedContour:c,focusContour:u}=Object(o.useContour)({mode:"circle",initialContours:s.a});return i.a.createElement(o.InsightViewerTestController,{options:a},({width:r,height:s,invert:a,flip:h,control:p,wheel:m,resetTime:d,element:g,setElement:v,interactions:C})=>i.a.createElement(o.InsightViewerContainer,{ref:v,width:r,height:s},i.a.createElement(o.CornerstoneViewer,{width:r,height:s,invert:a,flip:h,interactions:C,resetTime:d,image:e,updateCornerstoneRenderData:t}),l&&l.length>0&&n&&i.a.createElement(i.a.Fragment,null,i.a.createElement(o.CircleViewer,{width:r,height:s,contours:l,focusedContour:c,cornerstoneRenderData:n}),i.a.createElement(o.CircleHover,{hover:g,width:r,height:s,contours:l,onFocus:u,cornerstoneRenderData:n}))))}},702:function(e,n,t){"use strict";t.r(n),n.default="import {\n  CircleHover,\n  CircleViewer,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  CornerstoneViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\nimport { initialContours } from '../../../__fixtures__/circle';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'circle',\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime, element, setElement, interactions }) => (\n        <InsightViewerContainer ref={setElement} width={width} height={height}>\n          <CornerstoneViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            interactions={interactions}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CircleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <CircleHover\n                hover={element}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},937:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return l}));t(0);var o=t(62),r=t(7),i=t(89),s=t(667);const a={};function l({components:e,...n}){return Object(o.b)("wrapper",Object.assign({},a,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",null,Object(o.b)("inlineCode",{parentName:"h1"},"<CircleHover>")),Object(o.b)("p",null,"Contour\uc758 Mouse Over Event\ub97c \uc704\ud574 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleDrawer>"),"\uc5d0\uc11c Drawing \uae30\ub2a5\ub9cc \ube80 Component\uc774\ub2e4."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\ub294 Mouse Over Event\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleHover>"),"\uc640 \uaf2d \uac19\uc774 \uc368\uc918\uc57c \ud55c\ub2e4."),Object(o.b)("p",null,"Focused Color\ub97c \ubcc0\uacbd\ud558\uace0\uc790 \ud55c\ub2e4\uba74 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\uc5d0 Contour\uac00 \uadf8\ub824\uc9c0\uae30 \ub54c\ubb38\uc5d0 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\ub97c \ud1b5\ud574 \ubcc0\uacbd\ud558\uc5ec\uc57c \ud55c\ub2e4."),Object(o.b)("h1",null,"API"),Object(o.b)(i.Example,{example:Object(r.d)("@lunit/insight-viewer/components/ContourHover",{source:t(700),filename:"src/_packages/@lunit/insight-viewer/components/ContourHover.tsx"}),api:!0,mdxType:"Example"}),Object(o.b)("h1",null,"Sample"),Object(o.b)(i.Example,{example:Object(r.b)("./CircleViewer/Basic",{component:t(701),source:t(702),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/CircleViewer/Basic.tsx"}),mdxType:"Example"},Object(o.b)(s.a,{height:720,mdxType:"InsightViewerPreview"})))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=22.45b5470106c6da231db7.js.map
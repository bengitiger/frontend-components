{"version":3,"sources":["webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/StrokeText/Basic.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/StrokeText/Basic.tsx?2794","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/StrokeText/WithHolders.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/StrokeText/WithHolders.tsx?a7e4","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/StrokeText.mdx"],"names":["style","listStyle","fill","installWADOImageLoader","controllerOptions","width","height","control","wheel","flip","invert","image","useMemo","CornerstoneSingleImage","unload","unloadImage","options","resetTime","element","setElement","interactions","ref","updateCornerstoneRenderData","layoutProps","MDXContent","components","props","mdxType","parentName","example","component","isMDXComponent"],"mappings":"2FAAA,oCAGe,cACb,wBAAIA,MAAO,CAAEC,UAAW,SACtB,4BACE,kBAAC,aAAD,KACE,0BAAMC,KAAK,WAAX,YAGJ,4BACE,kBAAC,aAAD,KACE,8BACE,2BAAOA,KAAK,WAAZ,UADF,YAGE,2BAAOA,KAAK,WAAZ,KAHF,YAKE,2BAAOA,KAAK,WAAZ,Y,iCCjBV,OAAe,qjB,iCCAf,oCAiBAC,mCAEA,MAAMC,EAAoD,CACxDC,MAAO,CAAC,IAAK,IAAK,KAClBC,OAAQ,CAAC,IAAK,IAAK,KACnBC,QAAS,CAAC,MAAO,CAAC,OAAQ,MAAO,WACjCC,MAAO,CAAC,OAAQ,CAAC,OAAQ,SACzBC,KAAM,EAAC,GACPC,OAAQ,EAAC,IAGI,eACb,MAAMC,EAA0BC,kBAC9B,IACE,IAAIC,yBAAwB,wEAAwE,CAClGC,OAAQC,gBAEZ,IAGF,OACE,kBAAC,8BAAD,CAA6BC,QAASZ,GACnC,EAAGC,QAAOC,SAAQI,SAAQD,OAAMF,UAASC,QAAOS,YAAWC,UAASC,aAAYC,kBAC/E,kBAAC,yBAAD,CAAwBC,IAAKF,EAAYd,MAAOA,EAAOC,OAAQA,GAC7D,kBAAC,oBAAD,CACED,MAAOA,EACPC,OAAQA,EACRI,OAAQA,EACRD,KAAMA,EACNW,aAAcA,EACdH,UAAWA,EACXN,MAAOA,EACPW,4BAA6B,SAG/B,kBAAC,gBAAD,KACE,kBAAC,aAAD,KACE,8BACE,2BAAOpB,KAAK,WAAZ,QADF,YAGE,2BAAOA,KAAK,WAAZ,KAHF,YAKE,2BAAOA,KAAK,WAAZ,UAKN,kBAAC,iBAAD,KACE,kBAAC,aAAD,KACE,8BACE,2BAAOA,KAAK,WAAZ,SADF,YAGE,2BAAOA,KAAK,WAAZ,KAHF,YAKE,2BAAOA,KAAK,WAAZ,UAKN,kBAAC,mBAAD,KACE,kBAAC,aAAD,KACE,8BACE,2BAAOA,KAAK,WAAZ,QADF,YAGE,2BAAOA,KAAK,WAAZ,KAHF,YAKE,2BAAOA,KAAK,WAAZ,aAKN,kBAAC,oBAAD,KACE,kBAAC,aAAD,KACE,8BACE,2BAAOA,KAAK,WAAZ,SADF,YAGE,2BAAOA,KAAK,WAAZ,KAHF,YAKE,2BAAOA,KAAK,WAAZ,iB,iCC/FhB,OAAe,oiG,iCCCf,wFAQA,MAKMqB,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sBAAI,0BAAYC,WAAW,MAAO,iBAClC,qBAAK,mNACL,qBAAK,4CAAkB,+BAAGA,WAAW,KAAQ,CACzC,KAAQ,oDACL,oDACP,YAAC,UAAD,CAASC,QAASC,YAAU,qBAAD,aAAC,KAAD,SAAC,KAAD,2FAAwBH,QAAQ,WAC7D,YAAC,UAAD,CAASrB,OAAQ,IAAKqB,QAAQ,aAE5B,sBAAI,0BAAYC,WAAW,MAAO,uBAAoC,6DACtE,YAAC,UAAD,CAASC,QAASC,YAAU,2BAAD,aAAC,KAAD,SAAC,KAAD,iGAA8BH,QAAQ,WACnE,YAAC,IAAD,CAAsBrB,OAAQ,IAAKqB,QAAQ,2BAM7CH,EAAWO,gBAAiB","file":"22.bf2dc38371b16c0ea093.js","sourcesContent":["import { StrokeText } from '@lunit/insight-viewer';\nimport React from 'react';\n\nexport default () => (\n  <ul style={{ listStyle: 'none' }}>\n    <li>\n      <StrokeText>\n        <text fill=\"#ffffff\">SIMPLE</text>\n      </StrokeText>\n    </li>\n    <li>\n      <StrokeText>\n        <text>\n          <tspan fill=\"#ffffff\">SINGLE</tspan>\n          &nbsp; &nbsp;\n          <tspan fill=\"#8694B1\">/</tspan>\n          &nbsp; &nbsp;\n          <tspan fill=\"#ffffff\">TOP</tspan>\n        </text>\n      </StrokeText>\n    </li>\n  </ul>\n);\n","export default \"import { StrokeText } from '@lunit/insight-viewer';\\nimport React from 'react';\\n\\nexport default () => (\\n  <ul style={{ listStyle: 'none' }}>\\n    <li>\\n      <StrokeText>\\n        <text fill=\\\"#ffffff\\\">SIMPLE</text>\\n      </StrokeText>\\n    </li>\\n    <li>\\n      <StrokeText>\\n        <text>\\n          <tspan fill=\\\"#ffffff\\\">SINGLE</tspan>\\n          &nbsp; &nbsp;\\n          <tspan fill=\\\"#8694B1\\\">/</tspan>\\n          &nbsp; &nbsp;\\n          <tspan fill=\\\"#ffffff\\\">TOP</tspan>\\n        </text>\\n      </StrokeText>\\n    </li>\\n  </ul>\\n);\\n\"","import {\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  CornerstoneViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  LeftBottomHolder,\n  LeftTopHolder,\n  RightBottomHolder,\n  RightTopHolder,\n  StrokeText,\n  unloadImage,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime, element, setElement, interactions }) => (\n        <InsightViewerContainer ref={setElement} width={width} height={height}>\n          <CornerstoneViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            interactions={interactions}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={() => {}}\n          />\n\n          <LeftTopHolder>\n            <StrokeText>\n              <text>\n                <tspan fill=\"#ffffff\">LEFT</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#8694B1\">/</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#ffffff\">TOP</tspan>\n              </text>\n            </StrokeText>\n          </LeftTopHolder>\n\n          <RightTopHolder>\n            <StrokeText>\n              <text>\n                <tspan fill=\"#ffffff\">RIGHT</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#8694B1\">/</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#ffffff\">TOP</tspan>\n              </text>\n            </StrokeText>\n          </RightTopHolder>\n\n          <LeftBottomHolder>\n            <StrokeText>\n              <text>\n                <tspan fill=\"#ffffff\">LEFT</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#8694B1\">/</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#ffffff\">BOTTOM</tspan>\n              </text>\n            </StrokeText>\n          </LeftBottomHolder>\n\n          <RightBottomHolder>\n            <StrokeText>\n              <text>\n                <tspan fill=\"#ffffff\">RIGHT</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#8694B1\">/</tspan>\n                &nbsp; &nbsp;\n                <tspan fill=\"#ffffff\">BOTTOM</tspan>\n              </text>\n            </StrokeText>\n          </RightBottomHolder>\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  CornerstoneViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  LeftBottomHolder,\\n  LeftTopHolder,\\n  RightBottomHolder,\\n  RightTopHolder,\\n  StrokeText,\\n  unloadImage,\\n} from '@lunit/insight-viewer';\\nimport React, { useMemo } from 'react';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n        unload: unloadImage,\\n      }),\\n    [],\\n  );\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime, element, setElement, interactions }) => (\\n        <InsightViewerContainer ref={setElement} width={width} height={height}>\\n          <CornerstoneViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            interactions={interactions}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={() => {}}\\n          />\\n\\n          <LeftTopHolder>\\n            <StrokeText>\\n              <text>\\n                <tspan fill=\\\"#ffffff\\\">LEFT</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#8694B1\\\">/</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#ffffff\\\">TOP</tspan>\\n              </text>\\n            </StrokeText>\\n          </LeftTopHolder>\\n\\n          <RightTopHolder>\\n            <StrokeText>\\n              <text>\\n                <tspan fill=\\\"#ffffff\\\">RIGHT</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#8694B1\\\">/</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#ffffff\\\">TOP</tspan>\\n              </text>\\n            </StrokeText>\\n          </RightTopHolder>\\n\\n          <LeftBottomHolder>\\n            <StrokeText>\\n              <text>\\n                <tspan fill=\\\"#ffffff\\\">LEFT</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#8694B1\\\">/</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#ffffff\\\">BOTTOM</tspan>\\n              </text>\\n            </StrokeText>\\n          </LeftBottomHolder>\\n\\n          <RightBottomHolder>\\n            <StrokeText>\\n              <text>\\n                <tspan fill=\\\"#ffffff\\\">RIGHT</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#8694B1\\\">/</tspan>\\n                &nbsp; &nbsp;\\n                <tspan fill=\\\"#ffffff\\\">BOTTOM</tspan>\\n              </text>\\n            </StrokeText>\\n          </RightBottomHolder>\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { component, source } from '@handbook/source';\nimport { Example, Preview } from '@handbook/components';\nimport { InsightViewerPreview } from '@lunit/handbook';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1><inlineCode parentName=\"h1\">{`<StrokeText>`}</inlineCode></h1>\n    <p>{`명암 차이로 인한 가독성 저하를 방지하기 위한 좀 더 뚜렷한 외곽선을 가진 Text Component.`}</p>\n    <p>{`SVG Text를 사용한다. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/graphics/svg_text.asp\"\n      }}>{`https://www.w3schools.com/graphics/svg_text.asp`}</a></p>\n    <Example example={component('./StrokeText/Basic')} mdxType=\"Example\">\n  <Preview height={200} mdxType=\"Preview\" />\n    </Example>\n    <h1><inlineCode parentName=\"h1\">{`<CornerstoneViewer>`}</inlineCode>{`에 Holder를 사용해서 배치`}</h1>\n    <Example example={component('./StrokeText/WithHolders')} mdxType=\"Example\">\n  <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/index.ts?fb94","webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/__pages__/Sample.tsx","webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/__pages__/Sample.tsx?402a","webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/__tests__/isPolygonAreaGreaterThanArea.test.ts","webpack:///./src/_packages/@lunit/is-polygon-area-greater-than-area/__pages__/Basic.mdx"],"names":["installWADOImageLoader","image","useMemo","CornerstoneSingleImage","unload","unloadImage","divElement","setDivElement","useState","cornerstoneRenderData","updateCornerstoneRenderData","useInsightViewerSync","checkResult","setCheckResult","onAdd","useCallback","polygon","result","isPolygonAreaGreaterThanArea","role","aria-label","JSON","stringify","style","display","ref","width","height","invert","flip","pan","adjust","zoom","resetTime","contours","draw","onFocus","onRemove","layoutProps","MDXContent","components","props","mdxType","parentName","example","source","component","isMDXComponent"],"mappings":"2FAAA,OAAe,oyB,iCCAf,6CAcAA,mCAOe,eACb,MAAMC,EAA0BC,kBAAQ,IAC/B,IAAIC,yBAAwB,wEAAwE,CACzGC,OAAQC,gBAET,KAEIC,EAAYC,GAAiBC,mBAA6B,OAE3D,sBAAEC,EAAF,4BAAyBC,GAAgCC,kCAExDC,EAAaC,GAAkBL,mBAAoB,MAEpDM,EAAQC,sBAAaC,IACzB,MAAMC,EAAkBC,YAA6BF,EAhBvB,KAkB9BH,EACE,6BACE,4BACE,0BAAMM,KAAK,MAAMC,aAAW,WAA5B,gBAEQ,IAHV,WAMA,6BAAMC,KAAKC,UAAUN,IACrB,2BACE,0BAAMG,KAAK,MAAMC,aAAW,YAA5B,kCAEQ,IAHV,wBA3B0B,IA2B1B,aAIgDH,EAAS,MAAQ,SAIpE,IAEH,OACE,yBAAKM,MAAO,CAAEC,QAAS,SACrB,kBAAC,yBAAD,CAAwBC,IAAKlB,EAAemB,MA1C5B,IA0C0CC,OAzCzC,KA0Cf,kBAAC,gBAAD,CACED,MA5CY,IA6CZC,OA5Ca,IA6CbC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,MAAM,EACNC,UAAW,EACXhC,MAAOA,EACPS,4BAA6BA,IAE9BD,GACC,kBAAC,gBAAD,CACEiB,MAzDU,IA0DVC,OAzDW,IA0DXO,SAAU,GACVC,KAAM7B,EACN8B,QAAS,OACTtB,MAAOA,EACPuB,SAAU,OACV5B,sBAAuBA,KAI7B,6BAAMG,M,iCCpFZ,OAAe,0gF,iCCAf,OAAe,swS,iCCCf,wFAQA,MAKM0B,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sBAAI,0BAAYC,WAAW,MAAO,6CAClC,qBAAK,YAAW,0BAAYA,WAAW,KAAM,sBAAmC,8FAChF,qBAAK,0HAAmD,kBAAIA,WAAW,MAAW,KAClF,yIACA,YAAC,UAAD,CAASC,QAASC,YAAO,WAAD,UAAC,KAAD,6EAAcH,QAAQ,YAC9C,sBAAM,QACN,YAAC,UAAD,CAASE,QAASE,YAAU,WAAD,aAAC,KAAD,SAAC,KAAD,yFAAcJ,QAAQ,WACnD,YAAC,IAAD,CAAsBf,OAAQ,IAAKe,QAAQ,0BAEzC,YAAC,UAAD,CAASE,QAASC,YAAO,iDAAD,UAAC,KAAD,mHAAoDH,QAAQ,aAKxFH,EAAWQ,gBAAiB","file":"23.75eed94a5c6a537f186f.js","sourcesContent":["export default \"export function isPolygonAreaGreaterThanArea(polygon: [number, number][], isGreaterThanArea: number = 100): boolean {\\n  // https://stackoverflow.com/questions/16285134/calculating-polygon-area\\n  // polygonÏùò Î©¥Ï†ÅÏùÑ Í≥ÑÏÇ∞Ìï¥ÏÑú ÏµúÏÜå Î©¥Ï†Å Ïù¥ÏÉÅÏù∏ Í≤ΩÏö∞Î•º Í≤ÄÏ¶ùÌïúÎã§\\n\\n  let total: number = 0;\\n\\n  for (let i = 0, l = polygon.length; i < l; i++) {\\n    const addX: number = polygon[i][0];\\n    const addY: number = polygon[i === polygon.length - 1 ? 0 : i + 1][1];\\n    const subX: number = polygon[i === polygon.length - 1 ? 0 : i + 1][0];\\n    const subY: number = polygon[i][1];\\n\\n    total += addX * addY * 0.5;\\n    total -= subX * subY * 0.5;\\n  }\\n\\n  return Math.abs(total) > isGreaterThanArea;\\n}\\n\"","import {\n  ContourDrawer,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  installWADOImageLoader,\n  Point,\n  unloadImage,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\nimport React, { ReactNode, useCallback, useMemo, useState } from 'react';\n\ninstallWADOImageLoader();\n\nconst width: number = 400;\nconst height: number = 500;\n\nconst isGreaterThanArea: number = 100;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(() => {\n    return new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n      unload: unloadImage,\n    });\n  }, []);\n\n  const [divElement, setDivElement] = useState<HTMLElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  const [checkResult, setCheckResult] = useState<ReactNode>(null);\n\n  const onAdd = useCallback((polygon: Point[]) => {\n    const result: boolean = isPolygonAreaGreaterThanArea(polygon, isGreaterThanArea);\n\n    setCheckResult(\n      <div>\n        <h3>\n          <span role=\"img\" aria-label=\"polygon\">\n            üß¨\n          </span>{' '}\n          POLYGON\n        </h3>\n        <div>{JSON.stringify(polygon)}</div>\n        <p>\n          <span role=\"img\" aria-label=\"question\">\n            ü§∑‚Äç‚ôÇÔ∏è\n          </span>{' '}\n          IS GREATER THAN AREA({isGreaterThanArea})? ‚Üí {result ? 'YES' : 'NO'}\n        </p>\n      </div>,\n    );\n  }, []);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n        <InsightViewer\n          width={width}\n          height={height}\n          invert={false}\n          flip={false}\n          pan={false}\n          adjust={false}\n          zoom={false}\n          resetTime={0}\n          image={image}\n          updateCornerstoneRenderData={updateCornerstoneRenderData}\n        />\n        {cornerstoneRenderData && (\n          <ContourDrawer\n            width={width}\n            height={height}\n            contours={[]}\n            draw={divElement}\n            onFocus={() => {}}\n            onAdd={onAdd}\n            onRemove={() => {}}\n            cornerstoneRenderData={cornerstoneRenderData}\n          />\n        )}\n      </InsightViewerContainer>\n      <div>{checkResult}</div>\n    </div>\n  );\n};\n","export default \"import {\\n  ContourDrawer,\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  InsightViewer,\\n  InsightViewerContainer,\\n  installWADOImageLoader,\\n  Point,\\n  unloadImage,\\n  useInsightViewerSync,\\n} from '@lunit/insight-viewer';\\nimport { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\\nimport React, { ReactNode, useCallback, useMemo, useState } from 'react';\\n\\ninstallWADOImageLoader();\\n\\nconst width: number = 400;\\nconst height: number = 500;\\n\\nconst isGreaterThanArea: number = 100;\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(() => {\\n    return new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n      unload: unloadImage,\\n    });\\n  }, []);\\n\\n  const [divElement, setDivElement] = useState<HTMLElement | null>(null);\\n\\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\\n\\n  const [checkResult, setCheckResult] = useState<ReactNode>(null);\\n\\n  const onAdd = useCallback((polygon: Point[]) => {\\n    const result: boolean = isPolygonAreaGreaterThanArea(polygon, isGreaterThanArea);\\n\\n    setCheckResult(\\n      <div>\\n        <h3>\\n          <span role=\\\"img\\\" aria-label=\\\"polygon\\\">\\n            üß¨\\n          </span>{' '}\\n          POLYGON\\n        </h3>\\n        <div>{JSON.stringify(polygon)}</div>\\n        <p>\\n          <span role=\\\"img\\\" aria-label=\\\"question\\\">\\n            ü§∑‚Äç‚ôÇÔ∏è\\n          </span>{' '}\\n          IS GREATER THAN AREA({isGreaterThanArea})? ‚Üí {result ? 'YES' : 'NO'}\\n        </p>\\n      </div>,\\n    );\\n  }, []);\\n\\n  return (\\n    <div style={{ display: 'flex' }}>\\n      <InsightViewerContainer ref={setDivElement} width={width} height={height}>\\n        <InsightViewer\\n          width={width}\\n          height={height}\\n          invert={false}\\n          flip={false}\\n          pan={false}\\n          adjust={false}\\n          zoom={false}\\n          resetTime={0}\\n          image={image}\\n          updateCornerstoneRenderData={updateCornerstoneRenderData}\\n        />\\n        {cornerstoneRenderData && (\\n          <ContourDrawer\\n            width={width}\\n            height={height}\\n            contours={[]}\\n            draw={divElement}\\n            onFocus={() => {}}\\n            onAdd={onAdd}\\n            onRemove={() => {}}\\n            cornerstoneRenderData={cornerstoneRenderData}\\n          />\\n        )}\\n      </InsightViewerContainer>\\n      <div>{checkResult}</div>\\n    </div>\\n  );\\n};\\n\"","export default \"import { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\\n\\ndescribe('isPolygonAreaGreaterThanArea()', () => {\\n  test('the polygon area is bigger than 100', () => {\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [293.12, 344.32],\\n        [293.12, 344.32],\\n        [290.56, 345.6],\\n        [288, 348.16],\\n        [285.44, 350.72],\\n        [282.88, 353.28000000000003],\\n        [280.32, 357.12],\\n        [273.92, 362.24],\\n        [270.08, 367.36],\\n        [264.96, 371.2],\\n        [262.4, 373.76],\\n        [257.28000000000003, 377.6],\\n        [254.72, 380.16],\\n        [252.16, 382.72],\\n        [250.88, 384],\\n        [249.6, 385.28000000000003],\\n        [248.32, 385.28000000000003],\\n        [248.32, 385.28000000000003],\\n        [247.04, 386.56],\\n        [245.76, 386.56],\\n        [243.20000000000002, 386.56],\\n        [240.64000000000001, 386.56],\\n        [235.52, 385.28000000000003],\\n        [231.68, 384],\\n        [227.84, 381.44],\\n        [224, 377.6],\\n        [218.88, 375.04],\\n        [217.6, 373.76],\\n        [215.04, 371.2],\\n        [212.48000000000002, 368.64],\\n        [211.20000000000002, 366.08],\\n        [209.92000000000002, 362.24],\\n        [209.92000000000002, 360.96000000000004],\\n        [209.92000000000002, 358.40000000000003],\\n        [209.92000000000002, 355.84000000000003],\\n        [209.92000000000002, 354.56],\\n        [211.20000000000002, 350.72],\\n        [212.48000000000002, 348.16],\\n        [213.76, 346.88],\\n        [213.76, 344.32],\\n        [215.04, 343.04],\\n        [216.32, 340.48],\\n        [216.32, 340.48],\\n        [217.6, 339.2],\\n        [217.6, 337.92],\\n        [218.88, 337.92],\\n        [218.88, 337.92],\\n        [220.16, 336.64],\\n        [221.44, 336.64],\\n        [224, 335.36],\\n        [226.56, 334.08],\\n        [234.24, 332.8],\\n        [239.36, 330.24],\\n        [247.04, 327.68],\\n        [253.44, 326.40000000000003],\\n        [259.84000000000003, 325.12],\\n        [263.68, 323.84000000000003],\\n        [267.52, 322.56],\\n        [271.36, 321.28000000000003],\\n        [273.92, 321.28000000000003],\\n        [276.48, 321.28000000000003],\\n        [276.48, 321.28000000000003],\\n        [277.76, 321.28000000000003],\\n        [280.32, 321.28000000000003],\\n        [282.88, 321.28000000000003],\\n      ]),\\n    ).toBeTruthy();\\n\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [322.56, 71.68],\\n        [322.56, 71.68],\\n        [316.16, 74.24000000000001],\\n        [309.76, 75.52000000000001],\\n        [302.08, 78.08000000000001],\\n        [295.68, 80.64000000000001],\\n        [288, 84.47999999999999],\\n        [284.16, 87.03999999999999],\\n        [279.04, 90.88],\\n        [272.64, 96],\\n        [270.08, 99.84],\\n        [267.52, 102.4],\\n        [267.52, 107.52000000000001],\\n        [267.52, 110.08000000000001],\\n        [268.8, 112.64000000000001],\\n        [272.64, 116.47999999999999],\\n        [282.88, 121.6],\\n        [293.12, 125.44],\\n        [302.08, 128],\\n        [312.32, 129.28],\\n        [321.28000000000003, 129.28],\\n        [334.08, 129.28],\\n        [339.2, 130.56],\\n        [349.44, 129.28],\\n        [357.12, 128],\\n        [360.96, 126.72],\\n        [366.08, 125.44],\\n        [371.2, 124.16],\\n        [372.48, 122.88],\\n        [375.04, 120.32],\\n        [377.6, 117.75999999999999],\\n        [377.6, 115.20000000000002],\\n        [377.6, 112.64000000000001],\\n        [377.6, 107.52000000000001],\\n        [377.6, 104.96000000000001],\\n        [376.32, 101.12],\\n        [373.76, 98.56],\\n        [372.48, 94.72],\\n        [371.2, 92.16],\\n        [368.64, 89.6],\\n        [367.36, 88.32],\\n        [367.36, 87.03999999999999],\\n        [366.08, 85.75999999999999],\\n        [366.08, 85.75999999999999],\\n        [364.8, 84.47999999999999],\\n      ]),\\n    ).toBeTruthy();\\n\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [408.32, 177.92000000000002],\\n        [408.32, 177.92000000000002],\\n        [407.04, 177.92000000000002],\\n        [405.76, 179.20000000000002],\\n        [404.48, 180.48000000000002],\\n        [401.92, 181.76],\\n        [400.64, 183.04],\\n        [399.36, 185.6],\\n        [396.8, 186.88],\\n        [396.8, 190.72],\\n        [395.52, 194.56],\\n        [395.52, 195.84000000000003],\\n        [395.52, 198.39999999999998],\\n        [395.52, 200.95999999999998],\\n        [396.8, 200.95999999999998],\\n        [398.08, 203.51999999999998],\\n        [399.36, 204.8],\\n        [401.92, 204.8],\\n        [404.48, 206.07999999999998],\\n        [405.76, 206.07999999999998],\\n        [409.6, 206.07999999999998],\\n        [413.44, 206.07999999999998],\\n        [416, 204.8],\\n        [417.28000000000003, 204.8],\\n        [421.12, 203.51999999999998],\\n        [422.40000000000003, 202.24],\\n        [423.68, 200.95999999999998],\\n        [424.96000000000004, 200.95999999999998],\\n        [426.24, 200.95999999999998],\\n        [426.24, 199.68],\\n        [426.24, 199.68],\\n        [427.52, 199.68],\\n        [427.52, 198.39999999999998],\\n        [427.52, 198.39999999999998],\\n        [427.52, 197.12],\\n        [427.52, 197.12],\\n        [427.52, 195.84000000000003],\\n        [427.52, 195.84000000000003],\\n        [427.52, 194.56],\\n        [427.52, 193.28000000000003],\\n        [427.52, 193.28000000000003],\\n        [427.52, 193.28000000000003],\\n        [427.52, 192],\\n        [427.52, 192],\\n        [427.52, 192],\\n        [427.52, 190.72],\\n        [427.52, 190.72],\\n        [427.52, 189.44],\\n        [427.52, 189.44],\\n        [427.52, 188.16],\\n        [427.52, 186.88],\\n        [427.52, 186.88],\\n        [427.52, 186.88],\\n        [427.52, 185.6],\\n        [427.52, 185.6],\\n        [427.52, 185.6],\\n        [427.52, 185.6],\\n        [427.52, 184.32],\\n        [427.52, 184.32],\\n        [426.24, 183.04],\\n      ]),\\n    ).toBeTruthy();\\n\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [62.72, 371.2],\\n        [62.72, 371.2],\\n        [62.72, 371.2],\\n        [61.44, 371.2],\\n        [60.160000000000004, 371.2],\\n        [60.160000000000004, 371.2],\\n        [58.88, 371.2],\\n        [57.6, 372.48],\\n        [56.32, 373.76],\\n        [55.04, 375.04],\\n        [55.04, 376.32],\\n        [53.76, 376.32],\\n        [53.76, 377.6],\\n        [53.76, 378.88],\\n        [53.76, 380.16],\\n        [53.76, 381.44],\\n        [53.76, 381.44],\\n        [53.76, 382.72],\\n        [55.04, 382.72],\\n        [56.32, 384],\\n        [57.6, 384],\\n        [58.88, 384],\\n        [60.160000000000004, 384],\\n        [61.44, 384],\\n        [62.72, 384],\\n        [62.72, 384],\\n        [64, 384],\\n        [65.28, 384],\\n        [65.28, 384],\\n        [65.28, 384],\\n        [65.28, 384],\\n        [66.56, 384],\\n        [66.56, 382.72],\\n        [66.56, 382.72],\\n        [66.56, 382.72],\\n        [66.56, 382.72],\\n        [67.84, 382.72],\\n        [67.84, 382.72],\\n        [67.84, 381.44],\\n        [67.84, 381.44],\\n        [67.84, 380.16],\\n        [67.84, 378.88],\\n        [67.84, 378.88],\\n        [66.56, 377.6],\\n        [66.56, 376.32],\\n        [66.56, 376.32],\\n        [65.28, 375.04],\\n        [65.28, 375.04],\\n        [65.28, 375.04],\\n        [65.28, 375.04],\\n      ]),\\n    ).toBeTruthy();\\n  });\\n\\n  test('the polygon area is smaller than 100', () => {\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [407.04, 336.64],\\n        [407.04, 336.64],\\n        [407.04, 337.92],\\n        [407.04, 339.2],\\n        [407.04, 339.2],\\n        [407.04, 340.48],\\n        [407.04, 340.48],\\n        [407.04, 341.76],\\n        [407.04, 341.76],\\n        [407.04, 341.76],\\n        [408.32, 341.76],\\n        [409.6, 343.04],\\n        [410.88, 343.04],\\n        [410.88, 343.04],\\n        [412.16, 343.04],\\n        [412.16, 343.04],\\n        [413.44, 343.04],\\n        [413.44, 343.04],\\n        [413.44, 343.04],\\n        [413.44, 343.04],\\n        [414.72, 343.04],\\n      ]),\\n    ).toBeFalsy();\\n\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [404.48, 350.72],\\n        [404.48, 352],\\n        [404.48, 352],\\n        [404.48, 352],\\n        [404.48, 352],\\n        [404.48, 353.28000000000003],\\n        [404.48, 353.28000000000003],\\n        [404.48, 353.28000000000003],\\n        [404.48, 353.28000000000003],\\n        [404.48, 353.28000000000003],\\n        [405.76, 354.56],\\n        [405.76, 354.56],\\n        [405.76, 354.56],\\n        [405.76, 354.56],\\n        [405.76, 354.56],\\n        [405.76, 354.56],\\n        [407.04, 354.56],\\n      ]),\\n    ).toBeFalsy();\\n\\n    expect(\\n      isPolygonAreaGreaterThanArea([\\n        [180.48, 453.12],\\n        [179.20000000000002, 453.12],\\n        [179.20000000000002, 453.12],\\n        [177.92000000000002, 453.12],\\n        [176.64000000000001, 453.12],\\n        [176.64000000000001, 453.12],\\n        [175.36, 453.12],\\n        [175.36, 454.4],\\n        [175.36, 454.4],\\n        [175.36, 455.68000000000006],\\n        [175.36, 455.68000000000006],\\n        [175.36, 456.96000000000004],\\n        [175.36, 456.96000000000004],\\n        [175.36, 456.96000000000004],\\n        [175.36, 458.24],\\n        [175.36, 458.24],\\n        [175.36, 458.24],\\n        [175.36, 459.52],\\n        [175.36, 459.52],\\n        [175.36, 459.52],\\n        [176.64000000000001, 459.52],\\n        [176.64000000000001, 459.52],\\n        [176.64000000000001, 459.52],\\n        [176.64000000000001, 458.24],\\n      ]),\\n    ).toBeFalsy();\\n  });\\n});\\n\"","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { component, source } from '@handbook/source';\nimport { Example, Preview } from '@handbook/components';\nimport { InsightViewerPreview } from '@lunit/handbook';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1><inlineCode parentName=\"h1\">{`@lunit/is-polygon-area-greater-than-area`}</inlineCode></h1>\n    <p>{`Polygon (`}<inlineCode parentName=\"p\">{`[number, number][]`}</inlineCode>{`)Ïùò Î©¥Ï†ÅÏù¥ ÏùºÏ†ï Ïù¥ÌïòÏù∏ÏßÄ Í≤ÄÏ¶ùÌïúÎã§.`}</p>\n    <p>{`Annotation Tool, OPTÏôÄ Í∞ôÏù¥ ÏÇ¨Ïö©ÏûêÏóêÍ≤å AnnotationÏùÑ ÏûÖÎ†• Î∞õÏùÑÎïå`}<br parentName=\"p\"></br>{`\n`}{`ÏûòÎ™ªÎêú PolygonÏù¥ ÏûÖÎ†•ÎêòÏßÄ ÏïäÎèÑÎ°ù Î∞©ÏßÄÌïòÎäîÎç∞ ÏÇ¨Ïö©ÌïúÎã§.`}</p>\n    <Example example={source('../index')} mdxType=\"Example\" />\n    <h1>{`Test`}</h1>\n    <Example example={component('./Sample')} mdxType=\"Example\">\n  <InsightViewerPreview height={520} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    <Example example={source('../__tests__/isPolygonAreaGreaterThanArea.test')} mdxType=\"Example\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
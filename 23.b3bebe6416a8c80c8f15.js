(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{856:function(n,e,t){"use strict";t.r(e),e.default="export function isPolygonAreaGreaterThanArea(polygon: [number, number][], isGreaterThanArea: number = 100): boolean {\n  // https://stackoverflow.com/questions/16285134/calculating-polygon-area\n  // polygon\uc758 \uba74\uc801\uc744 \uacc4\uc0b0\ud574\uc11c \ucd5c\uc18c \uba74\uc801 \uc774\uc0c1\uc778 \uacbd\uc6b0\ub97c \uac80\uc99d\ud55c\ub2e4\n\n  let total: number = 0;\n\n  for (let i = 0, l = polygon.length; i < l; i++) {\n    const addX: number = polygon[i][0];\n    const addY: number = polygon[i === polygon.length - 1 ? 0 : i + 1][1];\n    const subX: number = polygon[i === polygon.length - 1 ? 0 : i + 1][0];\n    const subY: number = polygon[i][1];\n\n    total += addX * addY * 0.5;\n    total -= subX * subY * 0.5;\n  }\n\n  return Math.abs(total) > isGreaterThanArea;\n}\n"},857:function(n,e,t){"use strict";t.r(e);var a=t(666),r=t(729),o=t(0),i=t.n(o);Object(a.installWADOImageLoader)();e.default=()=>{const n=Object(o.useMemo)(()=>new a.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:a.unloadImage}),[]),[e,t]=Object(o.useState)(null),{cornerstoneRenderData:l,updateCornerstoneRenderData:s}=Object(a.useInsightViewerSync)(),[u,c]=Object(o.useState)(null),g=Object(o.useCallback)(n=>{const e=Object(r.a)(n,100);c(i.a.createElement("div",null,i.a.createElement("h3",null,i.a.createElement("span",{role:"img","aria-label":"polygon"},"\ud83e\uddec")," ","POLYGON"),i.a.createElement("div",null,JSON.stringify(n)),i.a.createElement("p",null,i.a.createElement("span",{role:"img","aria-label":"question"},"\ud83e\udd37\u200d\u2642\ufe0f")," ","IS GREATER THAN AREA(",100,")? \u2192 ",e?"YES":"NO")))},[]);return i.a.createElement("div",{style:{display:"flex"}},i.a.createElement(a.InsightViewerContainer,{ref:t,width:400,height:500},i.a.createElement(a.InsightViewer,{width:400,height:500,invert:!1,flip:!1,pan:!1,adjust:!1,zoom:!1,resetTime:0,image:n,updateCornerstoneRenderData:s}),l&&i.a.createElement(a.ContourDrawer,{width:400,height:500,contours:[],draw:e,onFocus:()=>{},onAdd:g,onRemove:()=>{},cornerstoneRenderData:l})),i.a.createElement("div",null,u))}},858:function(n,e,t){"use strict";t.r(e),e.default="import {\n  ContourDrawer,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  installWADOImageLoader,\n  Point,\n  unloadImage,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\nimport React, { ReactNode, useCallback, useMemo, useState } from 'react';\n\ninstallWADOImageLoader();\n\nconst width: number = 400;\nconst height: number = 500;\n\nconst isGreaterThanArea: number = 100;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(() => {\n    return new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n      unload: unloadImage,\n    });\n  }, []);\n\n  const [divElement, setDivElement] = useState<HTMLElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  const [checkResult, setCheckResult] = useState<ReactNode>(null);\n\n  const onAdd = useCallback((polygon: Point[]) => {\n    const result: boolean = isPolygonAreaGreaterThanArea(polygon, isGreaterThanArea);\n\n    setCheckResult(\n      <div>\n        <h3>\n          <span role=\"img\" aria-label=\"polygon\">\n            \ud83e\uddec\n          </span>{' '}\n          POLYGON\n        </h3>\n        <div>{JSON.stringify(polygon)}</div>\n        <p>\n          <span role=\"img\" aria-label=\"question\">\n            \ud83e\udd37\u200d\u2642\ufe0f\n          </span>{' '}\n          IS GREATER THAN AREA({isGreaterThanArea})? \u2192 {result ? 'YES' : 'NO'}\n        </p>\n      </div>,\n    );\n  }, []);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n        <InsightViewer\n          width={width}\n          height={height}\n          invert={false}\n          flip={false}\n          pan={false}\n          adjust={false}\n          zoom={false}\n          resetTime={0}\n          image={image}\n          updateCornerstoneRenderData={updateCornerstoneRenderData}\n        />\n        {cornerstoneRenderData && (\n          <ContourDrawer\n            width={width}\n            height={height}\n            contours={[]}\n            draw={divElement}\n            onFocus={() => {}}\n            onAdd={onAdd}\n            onRemove={() => {}}\n            cornerstoneRenderData={cornerstoneRenderData}\n          />\n        )}\n      </InsightViewerContainer>\n      <div>{checkResult}</div>\n    </div>\n  );\n};\n"},859:function(n,e,t){"use strict";t.r(e),e.default="import { isPolygonAreaGreaterThanArea } from '@lunit/is-polygon-area-greater-than-area';\n\ndescribe('isPolygonAreaGreaterThanArea()', () => {\n  test('the polygon area is bigger than 100', () => {\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [293.12, 344.32],\n        [293.12, 344.32],\n        [290.56, 345.6],\n        [288, 348.16],\n        [285.44, 350.72],\n        [282.88, 353.28000000000003],\n        [280.32, 357.12],\n        [273.92, 362.24],\n        [270.08, 367.36],\n        [264.96, 371.2],\n        [262.4, 373.76],\n        [257.28000000000003, 377.6],\n        [254.72, 380.16],\n        [252.16, 382.72],\n        [250.88, 384],\n        [249.6, 385.28000000000003],\n        [248.32, 385.28000000000003],\n        [248.32, 385.28000000000003],\n        [247.04, 386.56],\n        [245.76, 386.56],\n        [243.20000000000002, 386.56],\n        [240.64000000000001, 386.56],\n        [235.52, 385.28000000000003],\n        [231.68, 384],\n        [227.84, 381.44],\n        [224, 377.6],\n        [218.88, 375.04],\n        [217.6, 373.76],\n        [215.04, 371.2],\n        [212.48000000000002, 368.64],\n        [211.20000000000002, 366.08],\n        [209.92000000000002, 362.24],\n        [209.92000000000002, 360.96000000000004],\n        [209.92000000000002, 358.40000000000003],\n        [209.92000000000002, 355.84000000000003],\n        [209.92000000000002, 354.56],\n        [211.20000000000002, 350.72],\n        [212.48000000000002, 348.16],\n        [213.76, 346.88],\n        [213.76, 344.32],\n        [215.04, 343.04],\n        [216.32, 340.48],\n        [216.32, 340.48],\n        [217.6, 339.2],\n        [217.6, 337.92],\n        [218.88, 337.92],\n        [218.88, 337.92],\n        [220.16, 336.64],\n        [221.44, 336.64],\n        [224, 335.36],\n        [226.56, 334.08],\n        [234.24, 332.8],\n        [239.36, 330.24],\n        [247.04, 327.68],\n        [253.44, 326.40000000000003],\n        [259.84000000000003, 325.12],\n        [263.68, 323.84000000000003],\n        [267.52, 322.56],\n        [271.36, 321.28000000000003],\n        [273.92, 321.28000000000003],\n        [276.48, 321.28000000000003],\n        [276.48, 321.28000000000003],\n        [277.76, 321.28000000000003],\n        [280.32, 321.28000000000003],\n        [282.88, 321.28000000000003],\n      ]),\n    ).toBeTruthy();\n\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [322.56, 71.68],\n        [322.56, 71.68],\n        [316.16, 74.24000000000001],\n        [309.76, 75.52000000000001],\n        [302.08, 78.08000000000001],\n        [295.68, 80.64000000000001],\n        [288, 84.47999999999999],\n        [284.16, 87.03999999999999],\n        [279.04, 90.88],\n        [272.64, 96],\n        [270.08, 99.84],\n        [267.52, 102.4],\n        [267.52, 107.52000000000001],\n        [267.52, 110.08000000000001],\n        [268.8, 112.64000000000001],\n        [272.64, 116.47999999999999],\n        [282.88, 121.6],\n        [293.12, 125.44],\n        [302.08, 128],\n        [312.32, 129.28],\n        [321.28000000000003, 129.28],\n        [334.08, 129.28],\n        [339.2, 130.56],\n        [349.44, 129.28],\n        [357.12, 128],\n        [360.96, 126.72],\n        [366.08, 125.44],\n        [371.2, 124.16],\n        [372.48, 122.88],\n        [375.04, 120.32],\n        [377.6, 117.75999999999999],\n        [377.6, 115.20000000000002],\n        [377.6, 112.64000000000001],\n        [377.6, 107.52000000000001],\n        [377.6, 104.96000000000001],\n        [376.32, 101.12],\n        [373.76, 98.56],\n        [372.48, 94.72],\n        [371.2, 92.16],\n        [368.64, 89.6],\n        [367.36, 88.32],\n        [367.36, 87.03999999999999],\n        [366.08, 85.75999999999999],\n        [366.08, 85.75999999999999],\n        [364.8, 84.47999999999999],\n      ]),\n    ).toBeTruthy();\n\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [408.32, 177.92000000000002],\n        [408.32, 177.92000000000002],\n        [407.04, 177.92000000000002],\n        [405.76, 179.20000000000002],\n        [404.48, 180.48000000000002],\n        [401.92, 181.76],\n        [400.64, 183.04],\n        [399.36, 185.6],\n        [396.8, 186.88],\n        [396.8, 190.72],\n        [395.52, 194.56],\n        [395.52, 195.84000000000003],\n        [395.52, 198.39999999999998],\n        [395.52, 200.95999999999998],\n        [396.8, 200.95999999999998],\n        [398.08, 203.51999999999998],\n        [399.36, 204.8],\n        [401.92, 204.8],\n        [404.48, 206.07999999999998],\n        [405.76, 206.07999999999998],\n        [409.6, 206.07999999999998],\n        [413.44, 206.07999999999998],\n        [416, 204.8],\n        [417.28000000000003, 204.8],\n        [421.12, 203.51999999999998],\n        [422.40000000000003, 202.24],\n        [423.68, 200.95999999999998],\n        [424.96000000000004, 200.95999999999998],\n        [426.24, 200.95999999999998],\n        [426.24, 199.68],\n        [426.24, 199.68],\n        [427.52, 199.68],\n        [427.52, 198.39999999999998],\n        [427.52, 198.39999999999998],\n        [427.52, 197.12],\n        [427.52, 197.12],\n        [427.52, 195.84000000000003],\n        [427.52, 195.84000000000003],\n        [427.52, 194.56],\n        [427.52, 193.28000000000003],\n        [427.52, 193.28000000000003],\n        [427.52, 193.28000000000003],\n        [427.52, 192],\n        [427.52, 192],\n        [427.52, 192],\n        [427.52, 190.72],\n        [427.52, 190.72],\n        [427.52, 189.44],\n        [427.52, 189.44],\n        [427.52, 188.16],\n        [427.52, 186.88],\n        [427.52, 186.88],\n        [427.52, 186.88],\n        [427.52, 185.6],\n        [427.52, 185.6],\n        [427.52, 185.6],\n        [427.52, 185.6],\n        [427.52, 184.32],\n        [427.52, 184.32],\n        [426.24, 183.04],\n      ]),\n    ).toBeTruthy();\n\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [62.72, 371.2],\n        [62.72, 371.2],\n        [62.72, 371.2],\n        [61.44, 371.2],\n        [60.160000000000004, 371.2],\n        [60.160000000000004, 371.2],\n        [58.88, 371.2],\n        [57.6, 372.48],\n        [56.32, 373.76],\n        [55.04, 375.04],\n        [55.04, 376.32],\n        [53.76, 376.32],\n        [53.76, 377.6],\n        [53.76, 378.88],\n        [53.76, 380.16],\n        [53.76, 381.44],\n        [53.76, 381.44],\n        [53.76, 382.72],\n        [55.04, 382.72],\n        [56.32, 384],\n        [57.6, 384],\n        [58.88, 384],\n        [60.160000000000004, 384],\n        [61.44, 384],\n        [62.72, 384],\n        [62.72, 384],\n        [64, 384],\n        [65.28, 384],\n        [65.28, 384],\n        [65.28, 384],\n        [65.28, 384],\n        [66.56, 384],\n        [66.56, 382.72],\n        [66.56, 382.72],\n        [66.56, 382.72],\n        [66.56, 382.72],\n        [67.84, 382.72],\n        [67.84, 382.72],\n        [67.84, 381.44],\n        [67.84, 381.44],\n        [67.84, 380.16],\n        [67.84, 378.88],\n        [67.84, 378.88],\n        [66.56, 377.6],\n        [66.56, 376.32],\n        [66.56, 376.32],\n        [65.28, 375.04],\n        [65.28, 375.04],\n        [65.28, 375.04],\n        [65.28, 375.04],\n      ]),\n    ).toBeTruthy();\n  });\n\n  test('the polygon area is smaller than 100', () => {\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [407.04, 336.64],\n        [407.04, 336.64],\n        [407.04, 337.92],\n        [407.04, 339.2],\n        [407.04, 339.2],\n        [407.04, 340.48],\n        [407.04, 340.48],\n        [407.04, 341.76],\n        [407.04, 341.76],\n        [407.04, 341.76],\n        [408.32, 341.76],\n        [409.6, 343.04],\n        [410.88, 343.04],\n        [410.88, 343.04],\n        [412.16, 343.04],\n        [412.16, 343.04],\n        [413.44, 343.04],\n        [413.44, 343.04],\n        [413.44, 343.04],\n        [413.44, 343.04],\n        [414.72, 343.04],\n      ]),\n    ).toBeFalsy();\n\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [404.48, 350.72],\n        [404.48, 352],\n        [404.48, 352],\n        [404.48, 352],\n        [404.48, 352],\n        [404.48, 353.28000000000003],\n        [404.48, 353.28000000000003],\n        [404.48, 353.28000000000003],\n        [404.48, 353.28000000000003],\n        [404.48, 353.28000000000003],\n        [405.76, 354.56],\n        [405.76, 354.56],\n        [405.76, 354.56],\n        [405.76, 354.56],\n        [405.76, 354.56],\n        [405.76, 354.56],\n        [407.04, 354.56],\n      ]),\n    ).toBeFalsy();\n\n    expect(\n      isPolygonAreaGreaterThanArea([\n        [180.48, 453.12],\n        [179.20000000000002, 453.12],\n        [179.20000000000002, 453.12],\n        [177.92000000000002, 453.12],\n        [176.64000000000001, 453.12],\n        [176.64000000000001, 453.12],\n        [175.36, 453.12],\n        [175.36, 454.4],\n        [175.36, 454.4],\n        [175.36, 455.68000000000006],\n        [175.36, 455.68000000000006],\n        [175.36, 456.96000000000004],\n        [175.36, 456.96000000000004],\n        [175.36, 456.96000000000004],\n        [175.36, 458.24],\n        [175.36, 458.24],\n        [175.36, 458.24],\n        [175.36, 459.52],\n        [175.36, 459.52],\n        [175.36, 459.52],\n        [176.64000000000001, 459.52],\n        [176.64000000000001, 459.52],\n        [176.64000000000001, 459.52],\n        [176.64000000000001, 458.24],\n      ]),\n    ).toBeFalsy();\n  });\n});\n"},920:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return s}));t(0);var a=t(62),r=t(7),o=t(89),i=t(667);const l={};function s({components:n,...e}){return Object(a.b)("wrapper",Object.assign({},l,e,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",null,Object(a.b)("inlineCode",{parentName:"h1"},"@lunit/is-polygon-area-greater-than-area")),Object(a.b)("p",null,"Polygon (",Object(a.b)("inlineCode",{parentName:"p"},"[number, number][]"),")\uc758 \uba74\uc801\uc774 \uc77c\uc815 \uc774\ud558\uc778\uc9c0 \uac80\uc99d\ud55c\ub2e4."),Object(a.b)("p",null,"Annotation Tool, OPT\uc640 \uac19\uc774 \uc0ac\uc6a9\uc790\uc5d0\uac8c Annotation\uc744 \uc785\ub825 \ubc1b\uc744\ub54c",Object(a.b)("br",{parentName:"p"}),"\n","\uc798\ubabb\ub41c Polygon\uc774 \uc785\ub825\ub418\uc9c0 \uc54a\ub3c4\ub85d \ubc29\uc9c0\ud558\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4."),Object(a.b)(o.Example,{example:Object(r.d)("../index",{source:t(856),filename:"src/_packages/@lunit/is-polygon-area-greater-than-area/index.ts"}),mdxType:"Example"}),Object(a.b)("h1",null,"Test"),Object(a.b)(o.Example,{example:Object(r.b)("./Sample",{component:t(857),source:t(858),filename:"src/_packages/@lunit/is-polygon-area-greater-than-area/__pages__/Sample.tsx"}),mdxType:"Example"},Object(a.b)(i.a,{height:520,mdxType:"InsightViewerPreview"})),Object(a.b)(o.Example,{example:Object(r.d)("../__tests__/isPolygonAreaGreaterThanArea.test",{source:t(859),filename:"src/_packages/@lunit/is-polygon-area-greater-than-area/__tests__/isPolygonAreaGreaterThanArea.test.ts"}),mdxType:"Example"}))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=23.b3bebe6416a8c80c8f15.js.map
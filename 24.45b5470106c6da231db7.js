(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{668:function(e){e.exports=JSON.parse('["CT000000.dcm","CT000001.dcm","CT000002.dcm","CT000003.dcm","CT000004.dcm","CT000005.dcm","CT000006.dcm","CT000007.dcm","CT000008.dcm","CT000009.dcm","CT000010.dcm","CT000011.dcm","CT000012.dcm","CT000013.dcm","CT000014.dcm","CT000015.dcm","CT000016.dcm","CT000017.dcm","CT000018.dcm","CT000019.dcm","CT000020.dcm","CT000021.dcm","CT000022.dcm","CT000023.dcm","CT000024.dcm","CT000025.dcm","CT000026.dcm","CT000027.dcm","CT000028.dcm","CT000029.dcm","CT000030.dcm"]')},811:function(e,n,r){"use strict";r.r(n),n.default="import { CircularProgress } from '@material-ui/core';\nimport React, {\n  Context,\n  createContext,\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { useImageProgress } from '../hooks/useImageProgress';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface ProgressViewerProps {\n  width: number;\n  height: number;\n  inProgress?: boolean;\n  image?: CornerstoneImage | null | undefined;\n}\n\nlet count: number = 0;\n\nexport function ProgressViewer({ width, height, inProgress, image }: ProgressViewerProps) {\n  const id: number = useMemo(() => ++count, []);\n  const imageProgress = useImageProgress(image);\n  const { setProgress, unsetProgress } = useProgressCollection();\n\n  useEffect(() => {\n    if (inProgress === true || typeof imageProgress === 'number') {\n      setProgress(id, imageProgress || 0);\n    } else {\n      unsetProgress(id);\n    }\n  }, [id, imageProgress, inProgress, setProgress, unsetProgress]);\n\n  return (\n    <>\n      {(inProgress === true || typeof imageProgress === 'number') && (\n        <Div\n          style={{\n            width,\n            height,\n            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n          }}\n        >\n          <CircularProgress size={120} />\n        </Div>\n      )}\n      {typeof imageProgress === 'number' && (\n        <Div\n          style={{\n            width,\n            height,\n          }}\n        >\n          <CircularProgress size={100} variant=\"static\" value={imageProgress * 100} />\n        </Div>\n      )}\n    </>\n  );\n}\n\ninterface ProgressCollectorProps {\n  children: ReactNode;\n}\n\ninterface ProgressCollection {\n  inProgress: boolean;\n  setProgress: (id: number, progress: number) => void;\n  unsetProgress: (id: number) => void;\n}\n\nconst ProgressCollectionContext: Context<ProgressCollection> = createContext<ProgressCollection>({\n  inProgress: false,\n\n  setProgress: () => {\n    // DO NOTHING\n  },\n  unsetProgress: () => {\n    // DO NOTHING\n  },\n});\n\nexport function ProgressCollector({ children }: ProgressCollectorProps) {\n  const [collection, setCollection] = useState<Map<number, number>>(() => new Map());\n\n  const setProgress = useCallback(\n    (id: number, progress: number) => {\n      setCollection(prevCollection => {\n        const nextCollection: Map<number, number> = new Map(prevCollection);\n        nextCollection.set(id, progress);\n        return nextCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const unsetProgress = useCallback(\n    (id: number) => {\n      setCollection(prevCollection => {\n        if (prevCollection.has(id)) {\n          const nextCollection: Map<number, number> = new Map(prevCollection);\n          nextCollection.delete(id);\n          return nextCollection;\n        }\n        return prevCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const inProgress: boolean = useMemo(() => {\n    return collection.size > 0;\n  }, [collection]);\n\n  const state: ProgressCollection = useMemo<ProgressCollection>(() => {\n    return {\n      inProgress,\n      setProgress,\n      unsetProgress,\n    };\n  }, [inProgress, setProgress, unsetProgress]);\n\n  return <ProgressCollectionContext.Provider value={state}>{children}</ProgressCollectionContext.Provider>;\n}\n\nfunction useProgressCollection(): ProgressCollection {\n  return useContext(ProgressCollectionContext);\n}\n\nexport function useProgressViewersActivity(): boolean {\n  return useContext(ProgressCollectionContext).inProgress;\n}\n\nexport function useContainerStyleOfProgressViewersInactivity(\n  style: CSSProperties = { pointerEvents: 'none' },\n): CSSProperties {\n  const { inProgress } = useContext(ProgressCollectionContext);\n  return inProgress ? style : {};\n}\n\nconst Div = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n"},812:function(e,n,r){"use strict";r.r(n);var t=r(666),o=r(0),s=r.n(o),i=r(668);Object(t.installWADOImageLoader)();const l={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]};n.default=()=>{const e=Object(o.useMemo)(()=>new t.CornerstoneSeriesImage(i.map(e=>`wadouri:https://fixtures.front.lunit.io/dcm-files/series/${e}`),{unload:t.unloadImage}),[]);return s.a.createElement(t.InsightViewerTestController,{options:l},({width:n,height:r,invert:o,flip:i,control:l,wheel:c,resetTime:a,interactions:g})=>s.a.createElement(t.InsightViewerContainer,{width:n,height:r},s.a.createElement(t.CornerstoneViewer,{width:n,height:r,invert:o,flip:i,interactions:g,resetTime:a,image:e,updateCornerstoneRenderData:()=>{}}),s.a.createElement(t.ProgressViewer,{width:n,height:r,image:e})))}},813:function(e,n,r){"use strict";r.r(n),n.default="import {\n  CornerstoneSequenceImage,\n  CornerstoneSeriesImage,\n  CornerstoneViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  ProgressViewer,\n  unloadImage,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\nimport series from '../../../__fixtures__/series.json';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneSequenceImage = useMemo(\n    () =>\n      new CornerstoneSeriesImage(\n        series.map((p) => `wadouri:https://fixtures.front.lunit.io/dcm-files/series/${p}`),\n        { unload: unloadImage },\n      ),\n    [],\n  );\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime, interactions }) => (\n        <InsightViewerContainer width={width} height={height}>\n          <CornerstoneViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            interactions={interactions}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={() => {}}\n          />\n          <ProgressViewer width={width} height={height} image={image} />\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},929:function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return c}));r(0);var t=r(62),o=r(7),s=r(89),i=r(667);const l={};function c({components:e,...n}){return Object(t.b)("wrapper",Object.assign({},l,n,{components:e,mdxType:"MDXLayout"}),Object(t.b)("h1",null,Object(t.b)("inlineCode",{parentName:"h1"},"<ProgressViewer>")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"CornerstoneImage"),"\uac00 Loading \uc911\uc774\ub77c\ub294 \uac83\uc744 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc54c\ub9ac\uace0,",Object(t.b)("br",{parentName:"p"}),"\n",Object(t.b)("inlineCode",{parentName:"p"},"CornerstoneImage"),"\uac00 Loading \ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc5d0\uc11c User Interaction\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uac8c \ud574\uc900\ub2e4."),Object(t.b)("h1",null,"API"),Object(t.b)(s.Example,{example:Object(o.d)("@lunit/insight-viewer/components/ProgressViewer",{source:r(811),filename:"src/_packages/@lunit/insight-viewer/components/ProgressViewer.tsx"}),api:!0,mdxType:"Example"}),Object(t.b)("h1",null,"Sample"),Object(t.b)(s.Example,{example:Object(o.b)("./ProgressViewer/Basic",{component:r(812),source:r(813),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/ProgressViewer/Basic.tsx"}),mdxType:"Example"},Object(t.b)(i.a,{height:720,mdxType:"InsightViewerPreview"})))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=24.45b5470106c6da231db7.js.map
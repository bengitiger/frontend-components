(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{673:function(e,n,t){"use strict";function o(e){return`Annotation(${e.id})`}t.d(n,"b",(function(){return o})),t.d(n,"a",(function(){return r}));const r=[{polygon:[[340.48,232.95999999999998],[265.38666666666666,232.10666666666668]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[173.2266666666667,381.44],[276.48,400.21333333333337]],label:o,dataAttrs:{"data-category":"abnormal"}},{polygon:[[419.84000000000003,448.85333333333335],[361.81333333333333,407.04]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[174.93333333333334,88.74666666666668],[215.89333333333335,129.70666666666665]],label:o,dataAttrs:{"data-category":"abnormal"}}]},694:function(e,n,t){"use strict";t.r(n);var o=t(666),r=t(0),i=t.n(r),a=t(673);Object(o.installWADOImageLoader)();const s={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]};n.default=()=>{const e=Object(r.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),[n,t]=Object(r.useState)(null),{cornerstoneRenderData:l,updateCornerstoneRenderData:c}=Object(o.useInsightViewerSync)(),{contours:u,focusedContour:d,focusContour:h}=Object(o.useContour)({mode:"circle",initialContours:a.a});return i.a.createElement(o.InsightViewerTestController,{options:s},({width:r,height:a,invert:s,flip:m,control:p,wheel:g,resetTime:C})=>i.a.createElement(o.InsightViewerContainer,{ref:t,width:r,height:a},i.a.createElement(o.InsightViewer,{width:r,height:a,invert:s,flip:m,pan:"pan"===p&&n,adjust:"adjust"===p&&n,zoom:"zoom"===g&&n,resetTime:C,image:e,updateCornerstoneRenderData:c}),u&&u.length>0&&l&&i.a.createElement(i.a.Fragment,null,i.a.createElement(o.CircleViewer,{width:r,height:a,contours:u,focusedContour:d,cornerstoneRenderData:l}),i.a.createElement(o.CircleHover,{hover:n,width:r,height:a,contours:u,onFocus:h,cornerstoneRenderData:l}))))}},695:function(e,n,t){"use strict";t.r(n),n.default="import {\n  CircleViewer,\n  CircleHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport React, { useMemo, useState } from 'react';\nimport { initialContours } from '../../../__fixtures__/circle';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'circle',\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CircleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <CircleHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},906:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return l}));t(0);var o=t(62),r=t(7),i=t(89),a=t(667);const s={};function l({components:e,...n}){return Object(o.b)("wrapper",Object.assign({},s,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",null,Object(o.b)("inlineCode",{parentName:"h1"},"<CircleHover>")),Object(o.b)("p",null,"Contour\uc758 Mouse Over Event\ub97c \uc704\ud574 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleDrawer>"),"\uc5d0\uc11c Drawing \uae30\ub2a5\ub9cc \ube80 Component\uc774\ub2e4."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\ub294 Mouse Over Event\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleHover>"),"\uc640 \uaf2d \uac19\uc774 \uc368\uc918\uc57c \ud55c\ub2e4."),Object(o.b)("p",null,"Focused Color\ub97c \ubcc0\uacbd\ud558\uace0\uc790 \ud55c\ub2e4\uba74 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\uc5d0 Contour\uac00 \uadf8\ub824\uc9c0\uae30 \ub54c\ubb38\uc5d0 ",Object(o.b)("inlineCode",{parentName:"p"},"<CircleViewer>"),"\ub97c \ud1b5\ud574 \ubcc0\uacbd\ud558\uc5ec\uc57c \ud55c\ub2e4."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"export interface CircleHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour \ub370\uc774\ud130\ub97c \uc0c1\uc18d\ubc1b\uc740 Annotation \ub370\uc774\ud130 */\n  contours: T[];\n\n  /**\n   * Hover \uae30\ub2a5 \ud65c\uc131\ud654 \uc5ec\ubd80\n   * <InsightViewer> \uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c HTMLElement\ub85c \uc785\ub825\ud560 \uacbd\uc6b0 MouseEvent\ub97c \ud574\ub2f9 HTMLElement\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc98\ub9ac\ud55c\ub2e4.\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * \ud2b9\uc815 Contour\uc5d0 Mouse Over \ub418\uc5c8\uc744 \ub54c\n   * focusedContour\ub97c \uacb0\uc815\ud558\ub294\ub370 \ud544\uc694\ud558\ub2e4.\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n")),Object(o.b)(i.Example,{example:Object(r.b)("./CircleViewer/Basic",{component:t(694),source:t(695),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/CircleViewer/Basic.tsx"}),mdxType:"Example"},Object(o.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=26.449a1c52050a8f75c4d3.js.map
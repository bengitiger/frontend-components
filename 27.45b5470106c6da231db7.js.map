{"version":3,"sources":["webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageProgress.tsx?9253","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Hooks/useImageProgress/Basic.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Hooks/useImageProgress/Basic.tsx?3e72","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Hooks/useImageProgress.mdx"],"names":["installWADOImageLoader","image","useMemo","CornerstoneSeriesImage","series","map","p","unload","unloadImage","progress","useImageProgress","layoutProps","MDXContent","components","props","mdxType","parentName","example","source","api","component","height","isMDXComponent"],"mappings":"ulBAAA,OAAe,09B,iCCAf,6CAUAA,mCAEe,eACb,MAAMC,EAA0BC,kBAC9B,IACE,IAAIC,yBACFC,EAAOC,IAAIC,GAAM,4DAA2DA,KAC5E,CAAEC,OAAQC,gBAEd,IAGIC,EAAWC,2BAAiBT,GAElC,OACE,6BACE,2BAAIQ,GAAY,W,iCC1BtB,OAAe,mrB,iCCCf,+EAOA,MAKME,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sBAAI,0BAAYC,WAAW,MAAO,uBAClC,sBAAM,OACN,YAAC,UAAD,CAASC,QAASC,YAAO,+CAAD,UAAC,KAAD,4EAAkDC,KAAG,EAACJ,QAAQ,YACtF,sBAAM,UACN,YAAC,UAAD,CAASE,QAASG,YAAU,2BAAD,aAAC,KAAD,SAAC,KAAD,4FAA8BL,QAAQ,WACnE,YAAC,UAAD,CAASM,OAAQ,IAAKN,QAAQ,cAMhCH,EAAWU,gBAAiB","file":"27.45b5470106c6da231db7.js","sourcesContent":["export default \"import { useEffect, useState } from 'react';\\nimport { CornerstoneImage } from '../image/types';\\n\\n/**\\n * CornerstoneImage의 Loading 상태를 확인하기 위해 사용한다.\\n *\\n * @return `number`는 loading이 진행중이고, `null`은 loading이 진행중이 아니다. `null`이 오는 경우 Progress UI를 감추면 된다.\\n */\\nexport function useImageProgress(image: CornerstoneImage | null | undefined): number | null {\\n  const [progress, setProgress] = useState<number | null>(null);\\n\\n  useEffect(() => {\\n    if (image) {\\n      const subscription = image.progress.subscribe(nextProgress => {\\n        setProgress(nextProgress < 1 ? nextProgress : null);\\n      });\\n\\n      return () => {\\n        subscription.unsubscribe();\\n      };\\n    } else {\\n      setProgress(null);\\n    }\\n  }, [image]);\\n\\n  return progress;\\n}\\n\"","import {\n  CornerstoneImage,\n  CornerstoneSeriesImage,\n  installWADOImageLoader,\n  unloadImage,\n  useImageProgress,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\nimport series from '../../../__fixtures__/series.json';\n\ninstallWADOImageLoader();\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSeriesImage(\n        series.map(p => `wadouri:https://fixtures.front.lunit.io/dcm-files/series/${p}`),\n        { unload: unloadImage },\n      ),\n    [],\n  );\n\n  const progress = useImageProgress(image);\n\n  return (\n    <div>\n      <p>{progress || 'Done'}</p>\n    </div>\n  );\n};\n","export default \"import {\\n  CornerstoneImage,\\n  CornerstoneSeriesImage,\\n  installWADOImageLoader,\\n  unloadImage,\\n  useImageProgress,\\n} from '@lunit/insight-viewer';\\nimport React, { useMemo } from 'react';\\nimport series from '../../../__fixtures__/series.json';\\n\\ninstallWADOImageLoader();\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSeriesImage(\\n        series.map(p => `wadouri:https://fixtures.front.lunit.io/dcm-files/series/${p}`),\\n        { unload: unloadImage },\\n      ),\\n    [],\\n  );\\n\\n  const progress = useImageProgress(image);\\n\\n  return (\\n    <div>\\n      <p>{progress || 'Done'}</p>\\n    </div>\\n  );\\n};\\n\"","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { component, source } from '@handbook/source';\nimport { Example, Preview } from '@handbook/components';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1><inlineCode parentName=\"h1\">{`useImageProgress()`}</inlineCode></h1>\n    <h1>{`API`}</h1>\n    <Example example={source('@lunit/insight-viewer/hooks/useImageProgress')} api mdxType=\"Example\" />\n    <h1>{`Sample`}</h1>\n    <Example example={component('./useImageProgress/Basic')} mdxType=\"Example\">\n  <Preview height={100} mdxType=\"Preview\" />\n    </Example>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
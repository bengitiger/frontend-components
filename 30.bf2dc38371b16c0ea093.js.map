{"version":3,"sources":["webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ProgressViewer/Basic.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ProgressViewer/Basic.tsx?fdde","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ProgressViewer.mdx"],"names":["installWADOImageLoader","controllerOptions","width","height","control","wheel","flip","invert","image","useMemo","CornerstoneSeriesImage","series","map","p","unload","unloadImage","options","resetTime","interactions","updateCornerstoneRenderData","layoutProps","MDXContent","components","props","mdxType","parentName","example","component","isMDXComponent"],"mappings":"ulBAAA,6CAcAA,mCAEA,MAAMC,EAAoD,CACxDC,MAAO,CAAC,IAAK,IAAK,KAClBC,OAAQ,CAAC,IAAK,IAAK,KACnBC,QAAS,CAAC,MAAO,CAAC,OAAQ,MAAO,WACjCC,MAAO,CAAC,OAAQ,CAAC,OAAQ,SACzBC,KAAM,EAAC,GACPC,OAAQ,EAAC,IAGI,eACb,MAAMC,EAAkCC,kBACtC,IACE,IAAIC,yBACFC,EAAOC,IAAKC,GAAO,4DAA2DA,KAC9E,CAAEC,OAAQC,gBAEd,IAGF,OACE,kBAAC,8BAAD,CAA6BC,QAASf,GACnC,EAAGC,QAAOC,SAAQI,SAAQD,OAAMF,UAASC,QAAOY,YAAWC,kBAC1D,kBAAC,yBAAD,CAAwBhB,MAAOA,EAAOC,OAAQA,GAC5C,kBAAC,oBAAD,CACED,MAAOA,EACPC,OAAQA,EACRI,OAAQA,EACRD,KAAMA,EACNY,aAAcA,EACdD,UAAWA,EACXT,MAAOA,EACPW,4BAA6B,SAE/B,kBAAC,iBAAD,CAAgBjB,MAAOA,EAAOC,OAAQA,EAAQK,MAAOA,Q,iCCjD/D,OAAe,6mD,iCCCf,wFAQA,MAKMY,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,sBAAI,0BAAYC,WAAW,MAAO,qBAClC,qBAAG,0BAAYA,WAAW,KAAM,oBAAiC,0GAA8B,kBAAIA,WAAW,MAAW,KAC3H,0BAAYA,WAAW,KAAM,oBAAiC,sJAC5D,YAAC,UAAD,CAASC,QAASC,YAAU,yBAAD,aAAC,KAAD,SAAC,KAAD,+FAA4BH,QAAQ,WACjE,YAAC,IAAD,CAAsBrB,OAAQ,IAAKqB,QAAQ,2BAM7CH,EAAWO,gBAAiB","file":"30.bf2dc38371b16c0ea093.js","sourcesContent":["import {\n  CornerstoneSequenceImage,\n  CornerstoneSeriesImage,\n  CornerstoneViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  ProgressViewer,\n  unloadImage,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\nimport series from '../../../__fixtures__/series.json';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneSequenceImage = useMemo(\n    () =>\n      new CornerstoneSeriesImage(\n        series.map((p) => `wadouri:https://fixtures.front.lunit.io/dcm-files/series/${p}`),\n        { unload: unloadImage },\n      ),\n    [],\n  );\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime, interactions }) => (\n        <InsightViewerContainer width={width} height={height}>\n          <CornerstoneViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            interactions={interactions}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={() => {}}\n          />\n          <ProgressViewer width={width} height={height} image={image} />\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  CornerstoneSequenceImage,\\n  CornerstoneSeriesImage,\\n  CornerstoneViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  ProgressViewer,\\n  unloadImage,\\n} from '@lunit/insight-viewer';\\nimport React, { useMemo } from 'react';\\nimport series from '../../../__fixtures__/series.json';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nexport default () => {\\n  const image: CornerstoneSequenceImage = useMemo(\\n    () =>\\n      new CornerstoneSeriesImage(\\n        series.map((p) => `wadouri:https://fixtures.front.lunit.io/dcm-files/series/${p}`),\\n        { unload: unloadImage },\\n      ),\\n    [],\\n  );\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime, interactions }) => (\\n        <InsightViewerContainer width={width} height={height}>\\n          <CornerstoneViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            interactions={interactions}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={() => {}}\\n          />\\n          <ProgressViewer width={width} height={height} image={image} />\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { component } from '@handbook/source';\nimport { Example } from '@handbook/components';\nimport { InsightViewerPreview } from '@lunit/handbook';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1><inlineCode parentName=\"h1\">{`<ProgressViewer>`}</inlineCode></h1>\n    <p><inlineCode parentName=\"p\">{`CornerstoneImage`}</inlineCode>{`가 Loading 중이라는 것을 사용자에게 알리고,`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`CornerstoneImage`}</inlineCode>{`가 Loading 되지 않은 상태에서 User Interaction이 발생하지 않게 해준다.`}</p>\n    <Example example={component('./ProgressViewer/Basic')} mdxType=\"Example\">\n  <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
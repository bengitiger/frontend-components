(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{666:function(e){e.exports=JSON.parse('["CT000000.dcm","CT000001.dcm","CT000002.dcm","CT000003.dcm","CT000004.dcm","CT000005.dcm","CT000006.dcm","CT000007.dcm","CT000008.dcm","CT000009.dcm","CT000010.dcm","CT000011.dcm","CT000012.dcm","CT000013.dcm","CT000014.dcm","CT000015.dcm","CT000016.dcm","CT000017.dcm","CT000018.dcm","CT000019.dcm","CT000020.dcm","CT000021.dcm","CT000022.dcm","CT000023.dcm","CT000024.dcm","CT000025.dcm","CT000026.dcm","CT000027.dcm","CT000028.dcm","CT000029.dcm","CT000030.dcm"]')},831:function(e,n,t){"use strict";t.r(n);var i=t(641),r=t(664),o=t(0),a=t.n(o),s=t(666);Object(r.installWADOImageLoader)();const m={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]},c=s.slice(0,10).map(e=>`wadouri:https://lunit-io.github.io/frontend-fixtures/dcm-files/series/${e}`);function l(){const{fetch:e}=Object(r.useImageStore)(),[n,t]=Object(o.useState)(()=>c[0]),s=Object(o.useMemo)(()=>e(n),[e,n]);return Object(o.useEffect)(()=>{e(c[1]),e(c[2]),e(c[3]),e(c[4])},[e]),a.a.createElement("div",{style:{display:"flex"}},a.a.createElement(r.InsightViewerTestController,{options:m},({width:e,height:n,invert:t,flip:i,control:o,wheel:m,resetTime:c})=>a.a.createElement(r.InsightViewerContainer,{width:e,height:n},a.a.createElement(r.InsightViewer,{width:e,height:n,invert:t,flip:i,pan:"pan"===o,adjust:"adjust"===o,zoom:"zoom"===m,resetTime:c,image:s,updateCornerstoneRenderData:()=>{}}),a.a.createElement(r.ProgressViewer,{width:e,height:n,image:s}))),a.a.createElement("div",null,a.a.createElement("ul",null,c.map((e,n)=>a.a.createElement("li",{key:e},a.a.createElement(i.a,{onClick:()=>t(e)},"Show Image ",n))))))}n.default=()=>a.a.createElement(r.ImageStoreProvider,null,a.a.createElement(l,null))},832:function(e,n,t){"use strict";t.r(n),n.default="import {\n  CornerstoneImage,\n  ImageStoreProvider,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  ProgressViewer,\n  useImageStore,\n} from '@lunit/insight-viewer';\nimport { Button } from '@material-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport series from '../../../__fixtures__/series.json';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst imageIds: string[] = series\n  .slice(0, 10)\n  .map(p => `wadouri:https://lunit-io.github.io/frontend-fixtures/dcm-files/series/${p}`);\n\nfunction Sample() {\n  const { fetch } = useImageStore();\n\n  const [imageId, setImageId] = useState<string>(() => imageIds[0]);\n\n  const image = useMemo<CornerstoneImage>(() => fetch(imageId), [fetch, imageId]);\n\n  useEffect(() => {\n    // 1 ~ 4\ubc88 \uc774\ubbf8\uc9c0\ub4e4\uc744 Prefetch \ud55c\ub2e4\n    // 1 ~ 4\ubc88 \uc774\ubbf8\uc9c0\ub4e4\uc740 \ube60\ub974\uac8c \ub728\uac8c \ub420 \uac83\uc774\ub2e4\n    fetch(imageIds[1]);\n    fetch(imageIds[2]);\n    fetch(imageIds[3]);\n    fetch(imageIds[4]);\n  }, [fetch]);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <InsightViewerTestController options={controllerOptions}>\n        {({ width, height, invert, flip, control, wheel, resetTime }) => (\n          <InsightViewerContainer width={width} height={height}>\n            <InsightViewer\n              width={width}\n              height={height}\n              invert={invert}\n              flip={flip}\n              pan={control === 'pan'}\n              adjust={control === 'adjust'}\n              zoom={wheel === 'zoom'}\n              resetTime={resetTime}\n              image={image}\n              updateCornerstoneRenderData={() => {}}\n            />\n            <ProgressViewer width={width} height={height} image={image} />\n          </InsightViewerContainer>\n        )}\n      </InsightViewerTestController>\n      <div>\n        <ul>\n          {imageIds.map((imageId, i) => (\n            <li key={imageId}>\n              <Button onClick={() => setImageId(imageId)}>Show Image {i}</Button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n// \uc0c1\uc704\uc5d0 <ImageStoreProvider>\uac00 \ubc18\ub4dc\uc2dc \ud544\uc694\ud558\ub2e4\nexport default () => (\n  <ImageStoreProvider>\n    <Sample />\n  </ImageStoreProvider>\n);\n"},899:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return m}));t(0);var i=t(62),r=t(7),o=t(89),a=t(665);const s={};function m({components:e,...n}){return Object(i.b)("wrapper",Object.assign({},s,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h1",null,Object(i.b)("inlineCode",{parentName:"h1"},"useImageStore()")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"*.dcm")," \ud30c\uc77c\uc744 Prefetch \ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4."),Object(i.b)("p",null,"\uc0ac\uc6a9\uc790\uac00 \ub2e4\uc74c\uc5d0 \ubcfc \uac83\uc774\ub77c \uc608\uc0c1\ub418\ub294 ",Object(i.b)("inlineCode",{parentName:"p"},"CornerstoneImage"),"\ub97c \ubbf8\ub9ac Prefetch \ud560 \uc218 \uc788\ub2e4."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\ud604\uc7ac 1\ubc88 Image\ub97c \ubcf4\uace0 \uc788\ub2e4\uba74"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"useEffect(() => fetch(imageIds[2]), [imageIds])")," \uc774\uc640 \uac19\uc740 \uc2dd\uc73c\ub85c 2\ubc88 \uc774\ubbf8\uc9c0\ub97c Prefetch \ud55c\ub2e4")),Object(i.b)(o.Example,{example:Object(r.b)("./useImageStore/Basic",{component:t(831),source:t(832),filename:"src/_packages/@lunit/insight-viewer/__pages__/Hooks/useImageStore/Basic.tsx"}),mdxType:"Example"},Object(i.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=32.067053d6351ab3350b7e.js.map
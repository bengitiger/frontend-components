(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{669:function(n,e,t){"use strict";function o(n){return`Annotation(${n.id})`}t.d(e,"c",(function(){return o})),t.d(e,"a",(function(){return r})),t.d(e,"d",(function(){return i})),t.d(e,"b",(function(){return a}));const r={normal:"#3366cc",abnormal:"#dc3912"},i=["#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#66aa00","#b82e2e","#316395","#994499","#22aa99","#aaaa11","#6633cc","#e67300","#8b0707","#651067","#329262","#5574a6","#3b3eac"],a=[{polygon:[[365.2266666666667,40.959999999999994],[360.96000000000004,43.519999999999996],[356.6933333333333,46.93333333333334],[353.28000000000003,50.346666666666664],[349.8666666666667,53.760000000000005],[348.16,58.879999999999995],[346.4533333333334,64.85333333333334],[345.6,70.82666666666667],[345.6,77.65333333333334],[349.0133333333334,85.33333333333333],[358.40000000000003,93.01333333333334],[371.20000000000005,98.13333333333334],[390.8266666666667,102.39999999999999],[412.16,103.25333333333334],[432.64000000000004,101.54666666666667],[444.5866666666667,98.13333333333334],[453.12,94.72000000000001],[458.24,91.30666666666666],[460.8,86.18666666666668],[461.65333333333336,82.77333333333334],[457.3866666666667,77.65333333333334],[452.2666666666667,70.82666666666667],[446.29333333333335,63.146666666666675],[443.73333333333335,58.02666666666667],[441.17333333333335,52.906666666666666],[439.4666666666667,49.49333333333334],[437.76000000000005,47.78666666666666]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[260.2666666666667,180.9066666666667],[260.2666666666667,181.76],[256,186.0266666666667],[253.44000000000003,188.5866666666667],[250.88000000000002,192],[248.32000000000002,197.97333333333336],[245.76000000000002,204.8],[244.9066666666667,212.48000000000002],[244.9066666666667,224.42666666666668],[248.32000000000002,235.51999999999998],[257.7066666666667,246.61333333333334],[271.36,256.85333333333335],[298.6666666666667,265.38666666666666],[308.9066666666667,266.24],[331.9466666666667,264.53333333333336],[343.04,258.56],[349.8666666666667,253.44],[354.1333333333334,248.32],[356.6933333333333,242.3466666666667],[357.5466666666667,236.37333333333333],[357.5466666666667,228.69333333333333],[357.5466666666667,220.16000000000003],[354.9866666666667,211.62666666666667],[349.8666666666667,201.38666666666666],[343.8933333333334,193.70666666666665],[337.06666666666666,189.44],[328.53333333333336,186.0266666666667],[320.85333333333335,186.0266666666667],[313.17333333333335,186.88]],label:o,dataAttrs:{"data-category":"abnormal"}},{polygon:[[157.01333333333335,369.49333333333334],[157.01333333333335,369.49333333333334],[151.89333333333335,376.32],[148.48000000000002,382.29333333333335],[144.21333333333334,389.97333333333336],[138.24,405.33333333333337],[134.82666666666668,416.4266666666667],[133.12,431.7866666666667],[132.26666666666668,444.5866666666667],[133.12,454.82666666666665],[136.53333333333333,462.50666666666666],[145.06666666666666,470.18666666666667],[155.30666666666667,474.4533333333333],[169.81333333333333,477.0133333333334],[184.32000000000002,476.16],[195.41333333333336,472.7466666666667],[205.65333333333334,467.62666666666667],[211.6266666666667,463.36],[219.30666666666667,456.53333333333336],[221.86666666666667,451.41333333333336],[222.72000000000003,446.29333333333335],[222.72000000000003,439.4666666666667],[221.01333333333335,430.08],[216.74666666666667,418.9866666666667],[212.48000000000002,409.6],[207.36,401.06666666666666],[200.53333333333336,394.24],[193.70666666666668,389.12],[187.73333333333335,385.70666666666665]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[104.96000000000001,89.60000000000001],[104.10666666666667,89.60000000000001],[97.28,91.30666666666666],[91.30666666666667,93.01333333333334],[86.18666666666667,94.72000000000001],[79.36,98.13333333333334],[71.68,103.25333333333334],[65.70666666666668,109.22666666666667],[61.440000000000005,113.49333333333333],[58.88,121.17333333333333],[58.02666666666667,129.70666666666665],[60.58666666666667,145.06666666666666],[64,151.04000000000002],[73.38666666666667,162.98666666666668],[96.42666666666668,179.2],[115.2,186.88],[134.82666666666668,191.1466666666667],[155.30666666666667,191.1466666666667],[168.10666666666668,188.5866666666667],[178.34666666666666,186.0266666666667],[186.88000000000002,180.9066666666667],[191.14666666666668,175.7866666666667],[193.70666666666668,169.81333333333333],[194.56,163.84000000000003],[194.56,158.72000000000003],[194.56,151.89333333333332],[193.70666666666668,146.77333333333337],[192,140.8],[192,139.09333333333336],[190.29333333333335,133.97333333333336]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[249.17333333333335,-17.06666666666667],[246.61333333333334,-17.06666666666667],[232.10666666666668,-12.800000000000004],[221.01333333333335,-9.38666666666667],[208.21333333333334,-5.1200000000000045],[198.82666666666668,0],[192,5.119999999999997],[187.73333333333335,10.240000000000002],[185.17333333333335,15.36],[183.46666666666667,23.040000000000006],[183.46666666666667,34.13333333333334],[183.46666666666667,46.93333333333334],[186.02666666666667,64.85333333333334],[190.29333333333335,76.8],[197.97333333333336,86.18666666666668],[207.36,93.01333333333334],[221.86666666666667,97.28000000000002],[238.08,98.98666666666666],[256.85333333333335,98.13333333333334],[271.36,93.86666666666666],[284.16,87.89333333333333],[296.96000000000004,80.21333333333334],[306.3466666666667,72.53333333333333],[310.61333333333334,67.41333333333334],[313.17333333333335,60.58666666666667],[314.0266666666667,54.61333333333333],[314.0266666666667,44.373333333333335],[312.32,35.84],[308.9066666666667,25.599999999999994],[306.3466666666667,17.066666666666663],[304.64000000000004,7.68],[303.7866666666667,1.7066666666666634],[302.93333333333334,-2.5600000000000023],[302.08000000000004,-5.973333333333336]],label:o,dataAttrs:{"data-category":"abnormal"}},{polygon:[[320,363.52],[318.29333333333335,363.52],[314.0266666666667,365.2266666666667],[308.05333333333334,367.7866666666667],[300.37333333333333,374.61333333333334],[291.84000000000003,381.44],[287.5733333333333,389.12],[285.0133333333334,395.94666666666666],[284.16,401.92],[284.16,407.04],[287.5733333333333,414.72],[295.25333333333333,423.25333333333333],[305.49333333333334,432.64],[318.29333333333335,441.17333333333335],[329.3866666666667,446.29333333333335],[344.74666666666667,449.7066666666667],[353.28000000000003,450.56],[360.96000000000004,450.56],[366.93333333333334,448],[374.61333333333334,444.5866666666667],[380.5866666666667,441.17333333333335],[384.85333333333335,437.76],[389.12,433.49333333333334],[391.68,426.6666666666667],[392.53333333333336,416.4266666666667],[393.3866666666667,401.92],[393.3866666666667,391.68],[390.8266666666667,382.29333333333335],[388.2666666666667,377.17333333333335],[384.85333333333335,372.9066666666667],[379.73333333333335,371.2],[374.61333333333334,370.3466666666667],[367.7866666666667,370.3466666666667],[358.40000000000003,370.3466666666667],[354.9866666666667,370.3466666666667]],label:o,dataAttrs:{"data-category":"abnormal"}},{polygon:[[410.4533333333334,273.06666666666666],[407.04,273.92],[401.92,275.62666666666667],[397.65333333333336,276.48],[395.09333333333336,278.18666666666667],[392.53333333333336,279.04],[389.97333333333336,281.6],[388.2666666666667,284.16],[386.56,289.28000000000003],[384.85333333333335,296.1066666666667],[383.1466666666667,306.3466666666667],[381.44,318.29333333333335],[380.5866666666667,327.68],[381.44,333.65333333333336],[385.7066666666667,337.92],[392.53333333333336,342.18666666666667],[401.92,345.6],[414.72,349.0133333333333],[427.52000000000004,349.8666666666667],[438.61333333333334,349.8666666666667],[446.29333333333335,347.3066666666667],[453.12,344.74666666666667],[456.53333333333336,341.3333333333333],[459.9466666666667,337.06666666666666],[461.65333333333336,332.8],[463.36,327.68],[464.21333333333337,321.70666666666665],[465.0666666666667,314.88],[465.92,307.2],[465.92,302.08],[465.92,296.96],[465.92,292.6933333333333],[465.0666666666667,289.28000000000003],[463.36,285.0133333333333],[461.65333333333336,281.6],[458.24,277.3333333333333],[454.8266666666667,274.7733333333333],[450.56,271.36],[447.1466666666667,269.6533333333333],[444.5866666666667,267.94666666666666],[442.88000000000005,267.09333333333336],[440.32000000000005,267.09333333333336]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[95.57333333333334,251.73333333333335],[89.60000000000001,255.14666666666665],[82.77333333333334,261.12],[75.94666666666667,267.94666666666666],[72.53333333333333,273.92],[69.97333333333334,279.8933333333333],[69.12,285.0133333333333],[69.12,290.9866666666667],[69.97333333333334,298.6666666666667],[75.94666666666667,308.05333333333334],[82.77333333333334,315.73333333333335],[93.01333333333334,323.41333333333336],[106.66666666666667,330.24],[120.32000000000001,332.8],[134.82666666666668,333.65333333333336],[157.86666666666667,330.24],[174.08,323.41333333333336],[183.46666666666667,317.44],[193.70666666666668,310.61333333333334],[201.38666666666668,303.7866666666667],[205.65333333333334,297.81333333333333],[207.36,291.84],[208.21333333333334,283.3066666666667],[205.65333333333334,273.92],[197.97333333333336,262.82666666666665],[188.58666666666667,251.73333333333335],[180.05333333333334,244.90666666666664],[169.81333333333333,238.07999999999998],[161.28,233.81333333333333],[154.45333333333335,231.25333333333333],[149.33333333333334,230.39999999999998],[145.06666666666666,230.39999999999998]],label:o,dataAttrs:{"data-category":"normal"}},{polygon:[[31.573333333333334,365.2266666666667],[30.720000000000002,365.2266666666667],[27.30666666666667,368.64],[24.74666666666667,372.9066666666667],[19.62666666666667,380.5866666666667],[15.360000000000001,387.41333333333336],[11.946666666666667,395.09333333333336],[10.24,403.62666666666667],[9.386666666666667,410.4533333333333],[9.386666666666667,417.28000000000003],[11.093333333333334,422.40000000000003],[17.92,427.52000000000004],[30.720000000000002,433.49333333333334],[45.22666666666667,435.2],[55.46666666666667,435.2],[65.70666666666668,434.3466666666667],[74.24000000000001,430.08],[81.92,424.96000000000004],[87.04,419.84000000000003],[90.45333333333333,414.72],[92.16000000000001,409.6],[93.01333333333334,403.62666666666667],[93.01333333333334,395.94666666666666],[90.45333333333333,388.26666666666665],[86.18666666666667,381.44],[81.92,375.4666666666667],[75.09333333333333,370.3466666666667],[63.14666666666667,364.37333333333333],[53.760000000000005,362.6666666666667],[48.64,362.6666666666667],[42.66666666666667,363.52],[40.96,364.37333333333333],[36.693333333333335,366.08]],label:o,dataAttrs:{"data-category":"abnormal"}}]},670:function(n,e,t){"use strict";t.r(e),e.default="import { ColorProperty } from 'csstype';\nimport { css } from 'styled-components';\n\nexport interface InsightViewerCSSProperties {\n  '--contour-viewer-color'?: ColorProperty;\n  '--contour-viewer-focused-color'?: ColorProperty;\n  '--contour-viewer-stroke-width'?: ColorProperty;\n  '--contour-viewer-focused-stroke-width'?: ColorProperty;\n  '--contour-viewer-fill-color'?: ColorProperty;\n  '--contour-viewer-focused-fill-color'?: ColorProperty;\n\n  '--contour-drawer-color'?: ColorProperty;\n  '--contour-drawer-stroke-width'?: ColorProperty;\n  '--contour-drawer-fill-color'?: ColorProperty;\n\n  '--pin-color'?: ColorProperty;\n  '--pin-focused-color'?: ColorProperty;\n}\n\nexport const blockStyle = css`\n  --contour-viewer-color: #ffffff;\n  --contour-viewer-focused-color: rgb(255, 194, 17);\n  --contour-viewer-stroke-width: 3px;\n  --contour-viewer-focused-stroke-width: 6px;\n  --contour-viewer-fill-color: rgba(0, 0, 0, 0.2);\n  --contour-viewer-focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  --contour-drawer-color: rgb(255, 224, 0);\n  --contour-drawer-stroke-width: 4px;\n  --contour-drawer-fill-color: rgba(255, 224, 0, 0.2);\n\n  --pin-color: #ffffff;\n  --pin-focused-color: rgb(255, 194, 17);\n`;\n\nexport const globalStyle = css`\n  :root {\n    ${blockStyle};\n  }\n`;\n"},692:function(n,e,t){"use strict";t.r(e);var o=t(666),r=t(669),i=t(0),a=t.n(i);Object(o.installWADOImageLoader)();const s={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]};e.default=()=>{const n=Object(i.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),[e,t]=Object(i.useState)(null),{cornerstoneRenderData:l,updateCornerstoneRenderData:c}=Object(o.useInsightViewerSync)(),{contours:u,focusedContour:d,focusContour:h}=Object(o.useContour)({mode:"contour",initialContours:r.b});return a.a.createElement(o.InsightViewerTestController,{options:s},({width:r,height:i,invert:s,flip:m,control:g,wheel:p,resetTime:w})=>a.a.createElement(o.InsightViewerContainer,{ref:t,width:r,height:i},a.a.createElement(o.InsightViewer,{width:r,height:i,invert:s,flip:m,pan:"pan"===g&&e,adjust:"adjust"===g&&e,zoom:"zoom"===p&&e,resetTime:w,image:n,updateCornerstoneRenderData:c}),u&&u.length>0&&l&&a.a.createElement(a.a.Fragment,null,a.a.createElement(o.ContourViewer,{width:r,height:i,contours:u,focusedContour:d,cornerstoneRenderData:l}),a.a.createElement(o.ContourHover,{hover:e,width:r,height:i,contours:u,onFocus:h,cornerstoneRenderData:l}))))}},693:function(n,e,t){"use strict";t.r(e),e.default="import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { initialContours } from '../../../__fixtures__/contour';\nimport React, { useMemo, useState } from 'react';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <ContourViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},802:function(n,e,t){"use strict";t.r(e),e.default="import { Contour } from '@lunit/insight-viewer';\n\nexport function labelFunction(contour: Contour): string {\n  return `Annotation(${contour.id})`;\n}\n\nexport const categoryColors = {\n  normal: '#3366cc',\n  abnormal: '#dc3912',\n} as const;\n\nexport const seriesColors = [\n  '#3366cc',\n  '#dc3912',\n  '#ff9900',\n  '#109618',\n  '#990099',\n  '#0099c6',\n  '#dd4477',\n  '#66aa00',\n  '#b82e2e',\n  '#316395',\n  '#994499',\n  '#22aa99',\n  '#aaaa11',\n  '#6633cc',\n  '#e67300',\n  '#8b0707',\n  '#651067',\n  '#329262',\n  '#5574a6',\n  '#3b3eac',\n];\n\nexport const initialContours: Omit<Contour, 'id'>[] = [\n  {\n    polygon: [\n      [365.2266666666667, 40.959999999999994],\n      [360.96000000000004, 43.519999999999996],\n      [356.6933333333333, 46.93333333333334],\n      [353.28000000000003, 50.346666666666664],\n      [349.8666666666667, 53.760000000000005],\n      [348.16, 58.879999999999995],\n      [346.4533333333334, 64.85333333333334],\n      [345.6, 70.82666666666667],\n      [345.6, 77.65333333333334],\n      [349.0133333333334, 85.33333333333333],\n      [358.40000000000003, 93.01333333333334],\n      [371.20000000000005, 98.13333333333334],\n      [390.8266666666667, 102.39999999999999],\n      [412.16, 103.25333333333334],\n      [432.64000000000004, 101.54666666666667],\n      [444.5866666666667, 98.13333333333334],\n      [453.12, 94.72000000000001],\n      [458.24, 91.30666666666666],\n      [460.8, 86.18666666666668],\n      [461.65333333333336, 82.77333333333334],\n      [457.3866666666667, 77.65333333333334],\n      [452.2666666666667, 70.82666666666667],\n      [446.29333333333335, 63.146666666666675],\n      [443.73333333333335, 58.02666666666667],\n      [441.17333333333335, 52.906666666666666],\n      [439.4666666666667, 49.49333333333334],\n      [437.76000000000005, 47.78666666666666],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [260.2666666666667, 180.9066666666667],\n      [260.2666666666667, 181.76],\n      [256, 186.0266666666667],\n      [253.44000000000003, 188.5866666666667],\n      [250.88000000000002, 192],\n      [248.32000000000002, 197.97333333333336],\n      [245.76000000000002, 204.8],\n      [244.9066666666667, 212.48000000000002],\n      [244.9066666666667, 224.42666666666668],\n      [248.32000000000002, 235.51999999999998],\n      [257.7066666666667, 246.61333333333334],\n      [271.36, 256.85333333333335],\n      [298.6666666666667, 265.38666666666666],\n      [308.9066666666667, 266.24],\n      [331.9466666666667, 264.53333333333336],\n      [343.04, 258.56],\n      [349.8666666666667, 253.44],\n      [354.1333333333334, 248.32],\n      [356.6933333333333, 242.3466666666667],\n      [357.5466666666667, 236.37333333333333],\n      [357.5466666666667, 228.69333333333333],\n      [357.5466666666667, 220.16000000000003],\n      [354.9866666666667, 211.62666666666667],\n      [349.8666666666667, 201.38666666666666],\n      [343.8933333333334, 193.70666666666665],\n      [337.06666666666666, 189.44],\n      [328.53333333333336, 186.0266666666667],\n      [320.85333333333335, 186.0266666666667],\n      [313.17333333333335, 186.88],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [157.01333333333335, 369.49333333333334],\n      [157.01333333333335, 369.49333333333334],\n      [151.89333333333335, 376.32],\n      [148.48000000000002, 382.29333333333335],\n      [144.21333333333334, 389.97333333333336],\n      [138.24, 405.33333333333337],\n      [134.82666666666668, 416.4266666666667],\n      [133.12, 431.7866666666667],\n      [132.26666666666668, 444.5866666666667],\n      [133.12, 454.82666666666665],\n      [136.53333333333333, 462.50666666666666],\n      [145.06666666666666, 470.18666666666667],\n      [155.30666666666667, 474.4533333333333],\n      [169.81333333333333, 477.0133333333334],\n      [184.32000000000002, 476.16],\n      [195.41333333333336, 472.7466666666667],\n      [205.65333333333334, 467.62666666666667],\n      [211.6266666666667, 463.36],\n      [219.30666666666667, 456.53333333333336],\n      [221.86666666666667, 451.41333333333336],\n      [222.72000000000003, 446.29333333333335],\n      [222.72000000000003, 439.4666666666667],\n      [221.01333333333335, 430.08],\n      [216.74666666666667, 418.9866666666667],\n      [212.48000000000002, 409.6],\n      [207.36, 401.06666666666666],\n      [200.53333333333336, 394.24],\n      [193.70666666666668, 389.12],\n      [187.73333333333335, 385.70666666666665],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [104.96000000000001, 89.60000000000001],\n      [104.10666666666667, 89.60000000000001],\n      [97.28, 91.30666666666666],\n      [91.30666666666667, 93.01333333333334],\n      [86.18666666666667, 94.72000000000001],\n      [79.36, 98.13333333333334],\n      [71.68, 103.25333333333334],\n      [65.70666666666668, 109.22666666666667],\n      [61.440000000000005, 113.49333333333333],\n      [58.88, 121.17333333333333],\n      [58.02666666666667, 129.70666666666665],\n      [60.58666666666667, 145.06666666666666],\n      [64, 151.04000000000002],\n      [73.38666666666667, 162.98666666666668],\n      [96.42666666666668, 179.2],\n      [115.2, 186.88],\n      [134.82666666666668, 191.1466666666667],\n      [155.30666666666667, 191.1466666666667],\n      [168.10666666666668, 188.5866666666667],\n      [178.34666666666666, 186.0266666666667],\n      [186.88000000000002, 180.9066666666667],\n      [191.14666666666668, 175.7866666666667],\n      [193.70666666666668, 169.81333333333333],\n      [194.56, 163.84000000000003],\n      [194.56, 158.72000000000003],\n      [194.56, 151.89333333333332],\n      [193.70666666666668, 146.77333333333337],\n      [192, 140.8],\n      [192, 139.09333333333336],\n      [190.29333333333335, 133.97333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [249.17333333333335, -17.06666666666667],\n      [246.61333333333334, -17.06666666666667],\n      [232.10666666666668, -12.800000000000004],\n      [221.01333333333335, -9.38666666666667],\n      [208.21333333333334, -5.1200000000000045],\n      [198.82666666666668, 0],\n      [192, 5.119999999999997],\n      [187.73333333333335, 10.240000000000002],\n      [185.17333333333335, 15.36],\n      [183.46666666666667, 23.040000000000006],\n      [183.46666666666667, 34.13333333333334],\n      [183.46666666666667, 46.93333333333334],\n      [186.02666666666667, 64.85333333333334],\n      [190.29333333333335, 76.8],\n      [197.97333333333336, 86.18666666666668],\n      [207.36, 93.01333333333334],\n      [221.86666666666667, 97.28000000000002],\n      [238.08, 98.98666666666666],\n      [256.85333333333335, 98.13333333333334],\n      [271.36, 93.86666666666666],\n      [284.16, 87.89333333333333],\n      [296.96000000000004, 80.21333333333334],\n      [306.3466666666667, 72.53333333333333],\n      [310.61333333333334, 67.41333333333334],\n      [313.17333333333335, 60.58666666666667],\n      [314.0266666666667, 54.61333333333333],\n      [314.0266666666667, 44.373333333333335],\n      [312.32, 35.84],\n      [308.9066666666667, 25.599999999999994],\n      [306.3466666666667, 17.066666666666663],\n      [304.64000000000004, 7.68],\n      [303.7866666666667, 1.7066666666666634],\n      [302.93333333333334, -2.5600000000000023],\n      [302.08000000000004, -5.973333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [320, 363.52],\n      [318.29333333333335, 363.52],\n      [314.0266666666667, 365.2266666666667],\n      [308.05333333333334, 367.7866666666667],\n      [300.37333333333333, 374.61333333333334],\n      [291.84000000000003, 381.44],\n      [287.5733333333333, 389.12],\n      [285.0133333333334, 395.94666666666666],\n      [284.16, 401.92],\n      [284.16, 407.04],\n      [287.5733333333333, 414.72],\n      [295.25333333333333, 423.25333333333333],\n      [305.49333333333334, 432.64],\n      [318.29333333333335, 441.17333333333335],\n      [329.3866666666667, 446.29333333333335],\n      [344.74666666666667, 449.7066666666667],\n      [353.28000000000003, 450.56],\n      [360.96000000000004, 450.56],\n      [366.93333333333334, 448],\n      [374.61333333333334, 444.5866666666667],\n      [380.5866666666667, 441.17333333333335],\n      [384.85333333333335, 437.76],\n      [389.12, 433.49333333333334],\n      [391.68, 426.6666666666667],\n      [392.53333333333336, 416.4266666666667],\n      [393.3866666666667, 401.92],\n      [393.3866666666667, 391.68],\n      [390.8266666666667, 382.29333333333335],\n      [388.2666666666667, 377.17333333333335],\n      [384.85333333333335, 372.9066666666667],\n      [379.73333333333335, 371.2],\n      [374.61333333333334, 370.3466666666667],\n      [367.7866666666667, 370.3466666666667],\n      [358.40000000000003, 370.3466666666667],\n      [354.9866666666667, 370.3466666666667],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [410.4533333333334, 273.06666666666666],\n      [407.04, 273.92],\n      [401.92, 275.62666666666667],\n      [397.65333333333336, 276.48],\n      [395.09333333333336, 278.18666666666667],\n      [392.53333333333336, 279.04],\n      [389.97333333333336, 281.6],\n      [388.2666666666667, 284.16],\n      [386.56, 289.28000000000003],\n      [384.85333333333335, 296.1066666666667],\n      [383.1466666666667, 306.3466666666667],\n      [381.44, 318.29333333333335],\n      [380.5866666666667, 327.68],\n      [381.44, 333.65333333333336],\n      [385.7066666666667, 337.92],\n      [392.53333333333336, 342.18666666666667],\n      [401.92, 345.6],\n      [414.72, 349.0133333333333],\n      [427.52000000000004, 349.8666666666667],\n      [438.61333333333334, 349.8666666666667],\n      [446.29333333333335, 347.3066666666667],\n      [453.12, 344.74666666666667],\n      [456.53333333333336, 341.3333333333333],\n      [459.9466666666667, 337.06666666666666],\n      [461.65333333333336, 332.8],\n      [463.36, 327.68],\n      [464.21333333333337, 321.70666666666665],\n      [465.0666666666667, 314.88],\n      [465.92, 307.2],\n      [465.92, 302.08],\n      [465.92, 296.96],\n      [465.92, 292.6933333333333],\n      [465.0666666666667, 289.28000000000003],\n      [463.36, 285.0133333333333],\n      [461.65333333333336, 281.6],\n      [458.24, 277.3333333333333],\n      [454.8266666666667, 274.7733333333333],\n      [450.56, 271.36],\n      [447.1466666666667, 269.6533333333333],\n      [444.5866666666667, 267.94666666666666],\n      [442.88000000000005, 267.09333333333336],\n      [440.32000000000005, 267.09333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [95.57333333333334, 251.73333333333335],\n      [89.60000000000001, 255.14666666666665],\n      [82.77333333333334, 261.12],\n      [75.94666666666667, 267.94666666666666],\n      [72.53333333333333, 273.92],\n      [69.97333333333334, 279.8933333333333],\n      [69.12, 285.0133333333333],\n      [69.12, 290.9866666666667],\n      [69.97333333333334, 298.6666666666667],\n      [75.94666666666667, 308.05333333333334],\n      [82.77333333333334, 315.73333333333335],\n      [93.01333333333334, 323.41333333333336],\n      [106.66666666666667, 330.24],\n      [120.32000000000001, 332.8],\n      [134.82666666666668, 333.65333333333336],\n      [157.86666666666667, 330.24],\n      [174.08, 323.41333333333336],\n      [183.46666666666667, 317.44],\n      [193.70666666666668, 310.61333333333334],\n      [201.38666666666668, 303.7866666666667],\n      [205.65333333333334, 297.81333333333333],\n      [207.36, 291.84],\n      [208.21333333333334, 283.3066666666667],\n      [205.65333333333334, 273.92],\n      [197.97333333333336, 262.82666666666665],\n      [188.58666666666667, 251.73333333333335],\n      [180.05333333333334, 244.90666666666664],\n      [169.81333333333333, 238.07999999999998],\n      [161.28, 233.81333333333333],\n      [154.45333333333335, 231.25333333333333],\n      [149.33333333333334, 230.39999999999998],\n      [145.06666666666666, 230.39999999999998],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [31.573333333333334, 365.2266666666667],\n      [30.720000000000002, 365.2266666666667],\n      [27.30666666666667, 368.64],\n      [24.74666666666667, 372.9066666666667],\n      [19.62666666666667, 380.5866666666667],\n      [15.360000000000001, 387.41333333333336],\n      [11.946666666666667, 395.09333333333336],\n      [10.24, 403.62666666666667],\n      [9.386666666666667, 410.4533333333333],\n      [9.386666666666667, 417.28000000000003],\n      [11.093333333333334, 422.40000000000003],\n      [17.92, 427.52000000000004],\n      [30.720000000000002, 433.49333333333334],\n      [45.22666666666667, 435.2],\n      [55.46666666666667, 435.2],\n      [65.70666666666668, 434.3466666666667],\n      [74.24000000000001, 430.08],\n      [81.92, 424.96000000000004],\n      [87.04, 419.84000000000003],\n      [90.45333333333333, 414.72],\n      [92.16000000000001, 409.6],\n      [93.01333333333334, 403.62666666666667],\n      [93.01333333333334, 395.94666666666666],\n      [90.45333333333333, 388.26666666666665],\n      [86.18666666666667, 381.44],\n      [81.92, 375.4666666666667],\n      [75.09333333333333, 370.3466666666667],\n      [63.14666666666667, 364.37333333333333],\n      [53.760000000000005, 362.6666666666667],\n      [48.64, 362.6666666666667],\n      [42.66666666666667, 363.52],\n      [40.96, 364.37333333333333],\n      [36.693333333333335, 366.08],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n];\n"},803:function(n,e,t){"use strict";t.r(e);var o=t(666),r=t(0),i=t.n(r),a=t(36),s=t(669);Object(o.installWADOImageLoader)();const l={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]},c=Object(a.d)(o.ContourViewer)`
  --contour-viewer-stroke-width: 10px;
  --contour-viewer-focused-stroke-width: 20px;

  --contour-viewer-color: blue;
  --contour-viewer-focused-color: red;
  --contour-viewer-fill-color: rgba(0, 0, 255, 0.3);
  --contour-viewer-focused-fill-color: rgba(255, 0, 0, 0.3);
`;e.default=()=>{const n=Object(r.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),[e,t]=Object(r.useState)(null),{cornerstoneRenderData:a,updateCornerstoneRenderData:u}=Object(o.useInsightViewerSync)(),{contours:d,focusedContour:h,focusContour:m}=Object(o.useContour)({mode:"contour",initialContours:s.b});return i.a.createElement(o.InsightViewerTestController,{options:l},({width:r,height:s,invert:l,flip:g,control:p,wheel:w,resetTime:C})=>i.a.createElement(o.InsightViewerContainer,{ref:t,width:r,height:s},i.a.createElement(o.InsightViewer,{width:r,height:s,invert:l,flip:g,pan:"pan"===p&&e,adjust:"adjust"===p&&e,zoom:"zoom"===w&&e,resetTime:C,image:n,updateCornerstoneRenderData:u}),d&&d.length>0&&a&&i.a.createElement(i.a.Fragment,null,i.a.createElement(c,{width:r,height:s,contours:d,focusedContour:h,cornerstoneRenderData:a}),i.a.createElement(o.ContourHover,{hover:e,width:r,height:s,contours:d,onFocus:m,cornerstoneRenderData:a}))))}},804:function(n,e,t){"use strict";t.r(e),e.default="import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { initialContours } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst CustomStyleViewer = styled(ContourViewer)`\n  --contour-viewer-stroke-width: 10px;\n  --contour-viewer-focused-stroke-width: 20px;\n\n  --contour-viewer-color: blue;\n  --contour-viewer-focused-color: red;\n  --contour-viewer-fill-color: rgba(0, 0, 255, 0.3);\n  --contour-viewer-focused-fill-color: rgba(255, 0, 0, 0.3);\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CustomStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},805:function(n,e,t){"use strict";t.r(e);var o=t(666),r=t(663),i=t(0),a=t.n(i),s=t(36),l=t(669);Object(o.installWADOImageLoader)();const c={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]},u=Object(s.d)(o.ContourViewer)`
  polygon {
    fill-opacity: 0.3;
  }

  ${Object.keys(l.a).map(n=>{var e;const t=(null===(e=Object(r.a)(l.a[n]))||void 0===e?void 0:e.brighter(3).toString())||l.a[n];return s.c`
    > [data-category="${n}"] {
      --contour-viewer-color: ${l.a[n]};
      --contour-viewer-focused-color: ${t};
      --contour-viewer-fill-color: ${l.a[n]};
    }
  `})};
`;e.default=()=>{const n=Object(i.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),[e,t]=Object(i.useState)(null),{cornerstoneRenderData:r,updateCornerstoneRenderData:s}=Object(o.useInsightViewerSync)(),{contours:d,focusedContour:h,focusContour:m}=Object(o.useContour)({mode:"contour",initialContours:l.b});return a.a.createElement(o.InsightViewerTestController,{options:c},({width:i,height:l,invert:c,flip:g,control:p,wheel:w,resetTime:C})=>a.a.createElement(o.InsightViewerContainer,{ref:t,width:i,height:l},a.a.createElement(o.InsightViewer,{width:i,height:l,invert:c,flip:g,pan:"pan"===p&&e,adjust:"adjust"===p&&e,zoom:"zoom"===w&&e,resetTime:C,image:n,updateCornerstoneRenderData:s}),d&&d.length>0&&r&&a.a.createElement(a.a.Fragment,null,a.a.createElement(u,{width:i,height:l,contours:d,focusedContour:h,cornerstoneRenderData:r}),a.a.createElement(o.ContourHover,{hover:e,width:i,height:l,contours:d,onFocus:m,cornerstoneRenderData:r}))))}},806:function(n,e,t){"use strict";t.r(e),e.default="import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { color as d3color } from 'd3-color';\nimport React, { useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { categoryColors, initialContours } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst categoryStyle = (category: string) => {\n  // focused color\ub294 \uae30\ubcf8 color\ub97c \uc870\uae08 \ubc1d\uac8c\ud574\uc11c \uc0ac\uc6a9\ud55c\ub2e4\n  const focusedColor =\n    d3color(categoryColors[category])\n      ?.brighter(3)\n      .toString() || categoryColors[category];\n\n  // data-category attribute \ubcc4\ub85c \uc0c9\uc0c1\uc744 \uc9c0\uc815\ud574\uc900\ub2e4\n  return css`\n    > [data-category=\"${category}\"] {\n      --contour-viewer-color: ${categoryColors[category]};\n      --contour-viewer-focused-color: ${focusedColor};\n      --contour-viewer-fill-color: ${categoryColors[category]};\n    }\n  `;\n};\n\nconst CategoryStyleViewer = styled(ContourViewer)`\n  polygon {\n    fill-opacity: 0.3;\n  }\n\n  ${Object.keys(categoryColors).map(categoryStyle)};\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CategoryStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},807:function(n,e,t){"use strict";t.r(e);var o=t(666),r=t(663),i=t(0),a=t.n(i),s=t(36),l=t(669);Object(o.installWADOImageLoader)();const c={width:[600,400,1e3],height:[700,400,1e3],control:["pan",["none","pan","adjust"]],wheel:["zoom",["none","zoom"]],flip:[!1],invert:[!1]},u=Object(s.d)(o.ContourViewer)`
  polygon {
    fill-opacity: 0.2;
  }

  ${l.d.map((n,e)=>{var t;const o=(null===(t=Object(r.a)(n))||void 0===t?void 0:t.brighter(3).toString())||n;return s.c`
    > [data-id="${e}"] {
      --contour-viewer-color: ${n};
      --contour-viewer-focused-color: ${o};
      --contour-viewer-fill-color: ${n};
    }
  `})};
`;e.default=()=>{const n=Object(i.useMemo)(()=>new o.CornerstoneSingleImage("wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm",{unload:o.unloadImage}),[]),[e,t]=Object(i.useState)(null),{cornerstoneRenderData:r,updateCornerstoneRenderData:s}=Object(o.useInsightViewerSync)(),{contours:d,focusedContour:h,focusContour:m}=Object(o.useContour)({mode:"contour",initialContours:l.b});return a.a.createElement(o.InsightViewerTestController,{options:c},({width:i,height:l,invert:c,flip:g,control:p,wheel:w,resetTime:C})=>a.a.createElement(o.InsightViewerContainer,{ref:t,width:i,height:l},a.a.createElement(o.InsightViewer,{width:i,height:l,invert:c,flip:g,pan:"pan"===p&&e,adjust:"adjust"===p&&e,zoom:"zoom"===w&&e,resetTime:C,image:n,updateCornerstoneRenderData:s}),d&&d.length>0&&r&&a.a.createElement(a.a.Fragment,null,a.a.createElement(u,{width:i,height:l,contours:d,focusedContour:h,cornerstoneRenderData:r}),a.a.createElement(o.ContourHover,{hover:e,width:i,height:l,contours:d,onFocus:m,cornerstoneRenderData:r}))))}},808:function(n,e,t){"use strict";t.r(e),e.default="import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { color as d3color } from 'd3-color';\nimport React, { useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { initialContours, seriesColors } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst sequenceStyle = (color: string, i: number) => {\n  const focusedColor =\n    d3color(color)\n      ?.brighter(3)\n      .toString() || color;\n\n  return css`\n    > [data-id=\"${i}\"] {\n      --contour-viewer-color: ${color};\n      --contour-viewer-focused-color: ${focusedColor};\n      --contour-viewer-fill-color: ${color};\n    }\n  `;\n};\n\nconst SequenceStyleViewer = styled(ContourViewer)`\n  polygon {\n    fill-opacity: 0.2;\n  }\n\n  ${seriesColors.map(sequenceStyle)};\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <SequenceStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n"},901:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return l}));t(0);var o=t(62),r=t(7),i=t(89),a=t(667);const s={};function l({components:n,...e}){return Object(o.b)("wrapper",Object.assign({},s,e,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",null,Object(o.b)("inlineCode",{parentName:"h1"},"<ContourViewer>")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Contour")," \ub370\uc774\ud130\ub97c \ud654\uba74\uc5d0 \uadf8\ub9b0\ub2e4."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"<T extends Contour>"),"\ub85c \uad6c\uc131\ub41c Generic Data\ub97c \uc0ac\uc6a9\ud55c\ub2e4. "),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"export interface ContourViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n  \n  /** Contour \ub370\uc774\ud130\ub97c \uc0c1\uc18d\ubc1b\uc740 Annotation \ub370\uc774\ud130 */\n  contours: T[];\n  \n  /**\n   * Mouse Over \ub4f1 User Interaction\uc5d0 \uc758\ud574\uc11c Focus \ub41c Contour\n   * `<ContourViewer>`\ub294 Focus \uad00\ub828 Event \uae30\ub2a5\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 `<ContourHover>`\uc640 \uac19\uc774 \uc368\uc918\uc57c \ud55c\ub2e4.\n   */\n  focusedContour: T | null;\n  \n  /** <svg className={}> */\n  className?: string;\n  \n  /** <svg style={}> */\n  style?: CSSProperties;\n  \n  /**\n   * Line\uc5d0 \uc678\uacfd\uc744 \uadf8\ub824\uc900\ub2e4\n   * Line\uc744 \ub450 \uac1c \uadf8\ub824\uc11c border\ub97c \ud45c\ud604\ud558\uae30 \ub54c\ubb38\uc5d0,\uc131\ub2a5\uc5d0 \ubbfc\uac10\ud55c \uc0c1\ud669\uc778 \uacbd\uc6b0 \ube44\ud65c\uc131 \uc2dc\ud0ac \uc218 \uc788\ub2e4.\n   * default: true\n   */\n  border?: boolean;\n}\n")),Object(o.b)("p",null,"\uc544\ub798 \ubaa8\ub4e0 \uc608\uc81c\ub4e4\uc740 \uc774 Data\ub97c \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4."),Object(o.b)(i.Example,{example:Object(r.d)("../../__fixtures__/contour",{source:t(802),filename:"src/_packages/@lunit/insight-viewer/__fixtures__/contour.ts"}),mdxType:"Example"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Contour")," \ub370\uc774\ud130\ub97c \ub123\uc5b4\uc8fc\uba74 \ud654\uba74\uc5d0 Annotation\uc744 \uadf8\ub9b0\ub2e4."),Object(o.b)(i.Example,{example:Object(r.b)("./ContourViewer/Basic",{component:t(692),source:t(693),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/Basic.tsx"}),mdxType:"Example"},Object(o.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})),Object(o.b)("p",null,Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://frontend-components-handbook.netlify.com/#/insight-viewer/usecontour()"}),"useContour()\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uae30")),Object(o.b)("h1",null,"Styling"),Object(o.b)("p",null,"CSS Variable\uc744 \ud1b5\ud574\uc11c \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4."),Object(o.b)("p",null,"\uc544\ub798 File\uc5d0\uc11c ",Object(o.b)("inlineCode",{parentName:"p"},"--contour-viewer-*"),"\uc758 \uc774\ub984\uc744 \uac00\uc9c4 \ud56d\ubaa9\ub4e4\uc5d0 \uc601\ud5a5\uc744 \ubc1b\ub294\ub2e4."),Object(o.b)(i.Example,{example:Object(r.d)("../../theme/style",{source:t(670),filename:"src/_packages/@lunit/insight-viewer/theme/style.ts"}),mdxType:"Example"}),Object(o.b)(i.Example,{example:Object(r.b)("./ContourViewer/CustomStyle",{component:t(803),source:t(804),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CustomStyle.tsx"}),mdxType:"Example"},Object(o.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})),Object(o.b)("h1",null,"Styling with ",Object(o.b)("inlineCode",{parentName:"h1"},"Contour.dataAttrs")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Contour.dataAttrs")," \ub370\uc774\ud130\uc5d0 \uc758\ud574\uc11c ",Object(o.b)("inlineCode",{parentName:"p"},"<polygon data-some={value}>"),"\uc774 \uc785\ub825\ub418\uac8c \ub41c\ub2e4."),Object(o.b)("p",null,"\ud574\ub2f9 ",Object(o.b)("inlineCode",{parentName:"p"},"data-*")," Attribute\ub97c \uae30\uc900\uc73c\ub85c \uc0c9\uc0c1\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4."),Object(o.b)(i.Example,{example:Object(r.b)("./ContourViewer/CategoryStyle",{component:t(805),source:t(806),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CategoryStyle.tsx"}),mdxType:"Example"},Object(o.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})),Object(o.b)("h1",null,"Styling with Data sequence"),Object(o.b)("p",null,"\ud639\uc740 \ubc30\uc5f4\uc758 \uc21c\uc11c\uc5d0 \ub530\ub77c \uac01\uac01 \ub2e4\ub978 \uc0c9\uc0c1\uc744 \uc904 \uc218\ub3c4 \uc788\ub2e4."),Object(o.b)(i.Example,{example:Object(r.b)("./ContourViewer/SequenceStyle",{component:t(807),source:t(808),filename:"src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/SequenceStyle.tsx"}),mdxType:"Example"},Object(o.b)(a.a,{height:720,mdxType:"InsightViewerPreview"})))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=7.32490365ce13cebf6db6.js.map
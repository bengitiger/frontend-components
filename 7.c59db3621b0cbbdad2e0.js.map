{"version":3,"sources":["webpack:///./src/_packages/@lunit/insight-viewer/__fixtures__/contour.ts","webpack:///./src/_packages/@lunit/insight-viewer/theme/style.ts?c7f2","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/Basic.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/Basic.tsx?77f7","webpack:///./src/_packages/@lunit/insight-viewer/__fixtures__/contour.ts?a2ce","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CustomStyle.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CustomStyle.tsx?5eeb","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CategoryStyle.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/CategoryStyle.tsx?3304","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/SequenceStyle.tsx","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer/SequenceStyle.tsx?85eb","webpack:///./src/_packages/@lunit/insight-viewer/__pages__/Components/ContourViewer.mdx"],"names":["labelFunction","contour","id","categoryColors","normal","abnormal","seriesColors","initialContours","polygon","label","dataAttrs","installWADOImageLoader","controllerOptions","width","height","control","wheel","flip","invert","image","useMemo","CornerstoneSingleImage","unload","unloadImage","divElement","setDivElement","useState","cornerstoneRenderData","updateCornerstoneRenderData","useInsightViewerSync","contours","focusedContour","focusContour","useContour","mode","options","resetTime","ref","pan","adjust","zoom","length","hover","onFocus","CustomStyleViewer","styled","ContourViewer","CategoryStyleViewer","Object","keys","map","category","focusedColor","d3color","brighter","toString","css","SequenceStyleViewer","color","i","layoutProps","MDXContent","components","props","mdxType","parentName","example","source","component","isMDXComponent"],"mappings":"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","file":"7.c59db3621b0cbbdad2e0.js","sourcesContent":["import { Contour } from '@lunit/insight-viewer';\n\nexport function labelFunction(contour: Contour): string {\n  return `Annotation(${contour.id})`;\n}\n\nexport const categoryColors = {\n  normal: '#3366cc',\n  abnormal: '#dc3912',\n} as const;\n\nexport const seriesColors = [\n  '#3366cc',\n  '#dc3912',\n  '#ff9900',\n  '#109618',\n  '#990099',\n  '#0099c6',\n  '#dd4477',\n  '#66aa00',\n  '#b82e2e',\n  '#316395',\n  '#994499',\n  '#22aa99',\n  '#aaaa11',\n  '#6633cc',\n  '#e67300',\n  '#8b0707',\n  '#651067',\n  '#329262',\n  '#5574a6',\n  '#3b3eac',\n];\n\nexport const initialContours: Omit<Contour, 'id'>[] = [\n  {\n    polygon: [\n      [365.2266666666667, 40.959999999999994],\n      [360.96000000000004, 43.519999999999996],\n      [356.6933333333333, 46.93333333333334],\n      [353.28000000000003, 50.346666666666664],\n      [349.8666666666667, 53.760000000000005],\n      [348.16, 58.879999999999995],\n      [346.4533333333334, 64.85333333333334],\n      [345.6, 70.82666666666667],\n      [345.6, 77.65333333333334],\n      [349.0133333333334, 85.33333333333333],\n      [358.40000000000003, 93.01333333333334],\n      [371.20000000000005, 98.13333333333334],\n      [390.8266666666667, 102.39999999999999],\n      [412.16, 103.25333333333334],\n      [432.64000000000004, 101.54666666666667],\n      [444.5866666666667, 98.13333333333334],\n      [453.12, 94.72000000000001],\n      [458.24, 91.30666666666666],\n      [460.8, 86.18666666666668],\n      [461.65333333333336, 82.77333333333334],\n      [457.3866666666667, 77.65333333333334],\n      [452.2666666666667, 70.82666666666667],\n      [446.29333333333335, 63.146666666666675],\n      [443.73333333333335, 58.02666666666667],\n      [441.17333333333335, 52.906666666666666],\n      [439.4666666666667, 49.49333333333334],\n      [437.76000000000005, 47.78666666666666],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [260.2666666666667, 180.9066666666667],\n      [260.2666666666667, 181.76],\n      [256, 186.0266666666667],\n      [253.44000000000003, 188.5866666666667],\n      [250.88000000000002, 192],\n      [248.32000000000002, 197.97333333333336],\n      [245.76000000000002, 204.8],\n      [244.9066666666667, 212.48000000000002],\n      [244.9066666666667, 224.42666666666668],\n      [248.32000000000002, 235.51999999999998],\n      [257.7066666666667, 246.61333333333334],\n      [271.36, 256.85333333333335],\n      [298.6666666666667, 265.38666666666666],\n      [308.9066666666667, 266.24],\n      [331.9466666666667, 264.53333333333336],\n      [343.04, 258.56],\n      [349.8666666666667, 253.44],\n      [354.1333333333334, 248.32],\n      [356.6933333333333, 242.3466666666667],\n      [357.5466666666667, 236.37333333333333],\n      [357.5466666666667, 228.69333333333333],\n      [357.5466666666667, 220.16000000000003],\n      [354.9866666666667, 211.62666666666667],\n      [349.8666666666667, 201.38666666666666],\n      [343.8933333333334, 193.70666666666665],\n      [337.06666666666666, 189.44],\n      [328.53333333333336, 186.0266666666667],\n      [320.85333333333335, 186.0266666666667],\n      [313.17333333333335, 186.88],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [157.01333333333335, 369.49333333333334],\n      [157.01333333333335, 369.49333333333334],\n      [151.89333333333335, 376.32],\n      [148.48000000000002, 382.29333333333335],\n      [144.21333333333334, 389.97333333333336],\n      [138.24, 405.33333333333337],\n      [134.82666666666668, 416.4266666666667],\n      [133.12, 431.7866666666667],\n      [132.26666666666668, 444.5866666666667],\n      [133.12, 454.82666666666665],\n      [136.53333333333333, 462.50666666666666],\n      [145.06666666666666, 470.18666666666667],\n      [155.30666666666667, 474.4533333333333],\n      [169.81333333333333, 477.0133333333334],\n      [184.32000000000002, 476.16],\n      [195.41333333333336, 472.7466666666667],\n      [205.65333333333334, 467.62666666666667],\n      [211.6266666666667, 463.36],\n      [219.30666666666667, 456.53333333333336],\n      [221.86666666666667, 451.41333333333336],\n      [222.72000000000003, 446.29333333333335],\n      [222.72000000000003, 439.4666666666667],\n      [221.01333333333335, 430.08],\n      [216.74666666666667, 418.9866666666667],\n      [212.48000000000002, 409.6],\n      [207.36, 401.06666666666666],\n      [200.53333333333336, 394.24],\n      [193.70666666666668, 389.12],\n      [187.73333333333335, 385.70666666666665],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [104.96000000000001, 89.60000000000001],\n      [104.10666666666667, 89.60000000000001],\n      [97.28, 91.30666666666666],\n      [91.30666666666667, 93.01333333333334],\n      [86.18666666666667, 94.72000000000001],\n      [79.36, 98.13333333333334],\n      [71.68, 103.25333333333334],\n      [65.70666666666668, 109.22666666666667],\n      [61.440000000000005, 113.49333333333333],\n      [58.88, 121.17333333333333],\n      [58.02666666666667, 129.70666666666665],\n      [60.58666666666667, 145.06666666666666],\n      [64, 151.04000000000002],\n      [73.38666666666667, 162.98666666666668],\n      [96.42666666666668, 179.2],\n      [115.2, 186.88],\n      [134.82666666666668, 191.1466666666667],\n      [155.30666666666667, 191.1466666666667],\n      [168.10666666666668, 188.5866666666667],\n      [178.34666666666666, 186.0266666666667],\n      [186.88000000000002, 180.9066666666667],\n      [191.14666666666668, 175.7866666666667],\n      [193.70666666666668, 169.81333333333333],\n      [194.56, 163.84000000000003],\n      [194.56, 158.72000000000003],\n      [194.56, 151.89333333333332],\n      [193.70666666666668, 146.77333333333337],\n      [192, 140.8],\n      [192, 139.09333333333336],\n      [190.29333333333335, 133.97333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [249.17333333333335, -17.06666666666667],\n      [246.61333333333334, -17.06666666666667],\n      [232.10666666666668, -12.800000000000004],\n      [221.01333333333335, -9.38666666666667],\n      [208.21333333333334, -5.1200000000000045],\n      [198.82666666666668, 0],\n      [192, 5.119999999999997],\n      [187.73333333333335, 10.240000000000002],\n      [185.17333333333335, 15.36],\n      [183.46666666666667, 23.040000000000006],\n      [183.46666666666667, 34.13333333333334],\n      [183.46666666666667, 46.93333333333334],\n      [186.02666666666667, 64.85333333333334],\n      [190.29333333333335, 76.8],\n      [197.97333333333336, 86.18666666666668],\n      [207.36, 93.01333333333334],\n      [221.86666666666667, 97.28000000000002],\n      [238.08, 98.98666666666666],\n      [256.85333333333335, 98.13333333333334],\n      [271.36, 93.86666666666666],\n      [284.16, 87.89333333333333],\n      [296.96000000000004, 80.21333333333334],\n      [306.3466666666667, 72.53333333333333],\n      [310.61333333333334, 67.41333333333334],\n      [313.17333333333335, 60.58666666666667],\n      [314.0266666666667, 54.61333333333333],\n      [314.0266666666667, 44.373333333333335],\n      [312.32, 35.84],\n      [308.9066666666667, 25.599999999999994],\n      [306.3466666666667, 17.066666666666663],\n      [304.64000000000004, 7.68],\n      [303.7866666666667, 1.7066666666666634],\n      [302.93333333333334, -2.5600000000000023],\n      [302.08000000000004, -5.973333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [320, 363.52],\n      [318.29333333333335, 363.52],\n      [314.0266666666667, 365.2266666666667],\n      [308.05333333333334, 367.7866666666667],\n      [300.37333333333333, 374.61333333333334],\n      [291.84000000000003, 381.44],\n      [287.5733333333333, 389.12],\n      [285.0133333333334, 395.94666666666666],\n      [284.16, 401.92],\n      [284.16, 407.04],\n      [287.5733333333333, 414.72],\n      [295.25333333333333, 423.25333333333333],\n      [305.49333333333334, 432.64],\n      [318.29333333333335, 441.17333333333335],\n      [329.3866666666667, 446.29333333333335],\n      [344.74666666666667, 449.7066666666667],\n      [353.28000000000003, 450.56],\n      [360.96000000000004, 450.56],\n      [366.93333333333334, 448],\n      [374.61333333333334, 444.5866666666667],\n      [380.5866666666667, 441.17333333333335],\n      [384.85333333333335, 437.76],\n      [389.12, 433.49333333333334],\n      [391.68, 426.6666666666667],\n      [392.53333333333336, 416.4266666666667],\n      [393.3866666666667, 401.92],\n      [393.3866666666667, 391.68],\n      [390.8266666666667, 382.29333333333335],\n      [388.2666666666667, 377.17333333333335],\n      [384.85333333333335, 372.9066666666667],\n      [379.73333333333335, 371.2],\n      [374.61333333333334, 370.3466666666667],\n      [367.7866666666667, 370.3466666666667],\n      [358.40000000000003, 370.3466666666667],\n      [354.9866666666667, 370.3466666666667],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n  {\n    polygon: [\n      [410.4533333333334, 273.06666666666666],\n      [407.04, 273.92],\n      [401.92, 275.62666666666667],\n      [397.65333333333336, 276.48],\n      [395.09333333333336, 278.18666666666667],\n      [392.53333333333336, 279.04],\n      [389.97333333333336, 281.6],\n      [388.2666666666667, 284.16],\n      [386.56, 289.28000000000003],\n      [384.85333333333335, 296.1066666666667],\n      [383.1466666666667, 306.3466666666667],\n      [381.44, 318.29333333333335],\n      [380.5866666666667, 327.68],\n      [381.44, 333.65333333333336],\n      [385.7066666666667, 337.92],\n      [392.53333333333336, 342.18666666666667],\n      [401.92, 345.6],\n      [414.72, 349.0133333333333],\n      [427.52000000000004, 349.8666666666667],\n      [438.61333333333334, 349.8666666666667],\n      [446.29333333333335, 347.3066666666667],\n      [453.12, 344.74666666666667],\n      [456.53333333333336, 341.3333333333333],\n      [459.9466666666667, 337.06666666666666],\n      [461.65333333333336, 332.8],\n      [463.36, 327.68],\n      [464.21333333333337, 321.70666666666665],\n      [465.0666666666667, 314.88],\n      [465.92, 307.2],\n      [465.92, 302.08],\n      [465.92, 296.96],\n      [465.92, 292.6933333333333],\n      [465.0666666666667, 289.28000000000003],\n      [463.36, 285.0133333333333],\n      [461.65333333333336, 281.6],\n      [458.24, 277.3333333333333],\n      [454.8266666666667, 274.7733333333333],\n      [450.56, 271.36],\n      [447.1466666666667, 269.6533333333333],\n      [444.5866666666667, 267.94666666666666],\n      [442.88000000000005, 267.09333333333336],\n      [440.32000000000005, 267.09333333333336],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [95.57333333333334, 251.73333333333335],\n      [89.60000000000001, 255.14666666666665],\n      [82.77333333333334, 261.12],\n      [75.94666666666667, 267.94666666666666],\n      [72.53333333333333, 273.92],\n      [69.97333333333334, 279.8933333333333],\n      [69.12, 285.0133333333333],\n      [69.12, 290.9866666666667],\n      [69.97333333333334, 298.6666666666667],\n      [75.94666666666667, 308.05333333333334],\n      [82.77333333333334, 315.73333333333335],\n      [93.01333333333334, 323.41333333333336],\n      [106.66666666666667, 330.24],\n      [120.32000000000001, 332.8],\n      [134.82666666666668, 333.65333333333336],\n      [157.86666666666667, 330.24],\n      [174.08, 323.41333333333336],\n      [183.46666666666667, 317.44],\n      [193.70666666666668, 310.61333333333334],\n      [201.38666666666668, 303.7866666666667],\n      [205.65333333333334, 297.81333333333333],\n      [207.36, 291.84],\n      [208.21333333333334, 283.3066666666667],\n      [205.65333333333334, 273.92],\n      [197.97333333333336, 262.82666666666665],\n      [188.58666666666667, 251.73333333333335],\n      [180.05333333333334, 244.90666666666664],\n      [169.81333333333333, 238.07999999999998],\n      [161.28, 233.81333333333333],\n      [154.45333333333335, 231.25333333333333],\n      [149.33333333333334, 230.39999999999998],\n      [145.06666666666666, 230.39999999999998],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'normal',\n    },\n  },\n  {\n    polygon: [\n      [31.573333333333334, 365.2266666666667],\n      [30.720000000000002, 365.2266666666667],\n      [27.30666666666667, 368.64],\n      [24.74666666666667, 372.9066666666667],\n      [19.62666666666667, 380.5866666666667],\n      [15.360000000000001, 387.41333333333336],\n      [11.946666666666667, 395.09333333333336],\n      [10.24, 403.62666666666667],\n      [9.386666666666667, 410.4533333333333],\n      [9.386666666666667, 417.28000000000003],\n      [11.093333333333334, 422.40000000000003],\n      [17.92, 427.52000000000004],\n      [30.720000000000002, 433.49333333333334],\n      [45.22666666666667, 435.2],\n      [55.46666666666667, 435.2],\n      [65.70666666666668, 434.3466666666667],\n      [74.24000000000001, 430.08],\n      [81.92, 424.96000000000004],\n      [87.04, 419.84000000000003],\n      [90.45333333333333, 414.72],\n      [92.16000000000001, 409.6],\n      [93.01333333333334, 403.62666666666667],\n      [93.01333333333334, 395.94666666666666],\n      [90.45333333333333, 388.26666666666665],\n      [86.18666666666667, 381.44],\n      [81.92, 375.4666666666667],\n      [75.09333333333333, 370.3466666666667],\n      [63.14666666666667, 364.37333333333333],\n      [53.760000000000005, 362.6666666666667],\n      [48.64, 362.6666666666667],\n      [42.66666666666667, 363.52],\n      [40.96, 364.37333333333333],\n      [36.693333333333335, 366.08],\n    ],\n    label: labelFunction,\n    dataAttrs: {\n      'data-category': 'abnormal',\n    },\n  },\n];\n","export default \"import { ColorProperty } from 'csstype';\\nimport { css } from 'styled-components';\\n\\nexport interface InsightViewerCSSProperties {\\n  '--contour-viewer-color'?: ColorProperty;\\n  '--contour-viewer-focused-color'?: ColorProperty;\\n  '--contour-viewer-stroke-width'?: ColorProperty;\\n  '--contour-viewer-focused-stroke-width'?: ColorProperty;\\n  '--contour-viewer-fill-color'?: ColorProperty;\\n  '--contour-viewer-focused-fill-color'?: ColorProperty;\\n\\n  '--contour-drawer-color'?: ColorProperty;\\n  '--contour-drawer-stroke-width'?: ColorProperty;\\n  '--contour-drawer-fill-color'?: ColorProperty;\\n\\n  '--pin-color'?: ColorProperty;\\n  '--pin-focused-color'?: ColorProperty;\\n}\\n\\nexport const blockStyle = css`\\n  --contour-viewer-color: #ffffff;\\n  --contour-viewer-focused-color: rgb(255, 194, 17);\\n  --contour-viewer-stroke-width: 3px;\\n  --contour-viewer-focused-stroke-width: 6px;\\n  --contour-viewer-fill-color: rgba(0, 0, 0, 0.2);\\n  --contour-viewer-focused-fill-color: rgba(0, 0, 0, 0.4);\\n\\n  --contour-drawer-color: rgb(255, 224, 0);\\n  --contour-drawer-stroke-width: 4px;\\n  --contour-drawer-fill-color: rgba(255, 224, 0, 0.2);\\n\\n  --pin-color: #ffffff;\\n  --pin-focused-color: rgb(255, 194, 17);\\n`;\\n\\nexport const globalStyle = css`\\n  :root {\\n    ${blockStyle};\\n  }\\n`;\\n\"","import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { initialContours } from '../../../__fixtures__/contour';\nimport React, { useMemo, useState } from 'react';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <ContourViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  ContourViewer,\\n  ContourHover,\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  InsightViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  unloadImage,\\n  useContour,\\n  useInsightViewerSync,\\n} from '@lunit/insight-viewer';\\nimport { initialContours } from '../../../__fixtures__/contour';\\nimport React, { useMemo, useState } from 'react';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n        unload: unloadImage,\\n      }),\\n    [],\\n  );\\n\\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\\n\\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\\n\\n  // create contour data\\n  const { contours, focusedContour, focusContour } = useContour({\\n    mode: 'contour', // is [x, y][]\\n    initialContours,\\n  });\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\\n          <InsightViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            pan={control === 'pan' && divElement}\\n            adjust={control === 'adjust' && divElement}\\n            zoom={wheel === 'zoom' && divElement}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\\n          />\\n          {contours && contours.length > 0 && cornerstoneRenderData && (\\n            <>\\n              <ContourViewer\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                focusedContour={focusedContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n              <ContourHover\\n                hover={divElement}\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                onFocus={focusContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n            </>\\n          )}\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","export default \"import { Contour } from '@lunit/insight-viewer';\\n\\nexport function labelFunction(contour: Contour): string {\\n  return `Annotation(${contour.id})`;\\n}\\n\\nexport const categoryColors = {\\n  normal: '#3366cc',\\n  abnormal: '#dc3912',\\n} as const;\\n\\nexport const seriesColors = [\\n  '#3366cc',\\n  '#dc3912',\\n  '#ff9900',\\n  '#109618',\\n  '#990099',\\n  '#0099c6',\\n  '#dd4477',\\n  '#66aa00',\\n  '#b82e2e',\\n  '#316395',\\n  '#994499',\\n  '#22aa99',\\n  '#aaaa11',\\n  '#6633cc',\\n  '#e67300',\\n  '#8b0707',\\n  '#651067',\\n  '#329262',\\n  '#5574a6',\\n  '#3b3eac',\\n];\\n\\nexport const initialContours: Omit<Contour, 'id'>[] = [\\n  {\\n    polygon: [\\n      [365.2266666666667, 40.959999999999994],\\n      [360.96000000000004, 43.519999999999996],\\n      [356.6933333333333, 46.93333333333334],\\n      [353.28000000000003, 50.346666666666664],\\n      [349.8666666666667, 53.760000000000005],\\n      [348.16, 58.879999999999995],\\n      [346.4533333333334, 64.85333333333334],\\n      [345.6, 70.82666666666667],\\n      [345.6, 77.65333333333334],\\n      [349.0133333333334, 85.33333333333333],\\n      [358.40000000000003, 93.01333333333334],\\n      [371.20000000000005, 98.13333333333334],\\n      [390.8266666666667, 102.39999999999999],\\n      [412.16, 103.25333333333334],\\n      [432.64000000000004, 101.54666666666667],\\n      [444.5866666666667, 98.13333333333334],\\n      [453.12, 94.72000000000001],\\n      [458.24, 91.30666666666666],\\n      [460.8, 86.18666666666668],\\n      [461.65333333333336, 82.77333333333334],\\n      [457.3866666666667, 77.65333333333334],\\n      [452.2666666666667, 70.82666666666667],\\n      [446.29333333333335, 63.146666666666675],\\n      [443.73333333333335, 58.02666666666667],\\n      [441.17333333333335, 52.906666666666666],\\n      [439.4666666666667, 49.49333333333334],\\n      [437.76000000000005, 47.78666666666666],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'normal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [260.2666666666667, 180.9066666666667],\\n      [260.2666666666667, 181.76],\\n      [256, 186.0266666666667],\\n      [253.44000000000003, 188.5866666666667],\\n      [250.88000000000002, 192],\\n      [248.32000000000002, 197.97333333333336],\\n      [245.76000000000002, 204.8],\\n      [244.9066666666667, 212.48000000000002],\\n      [244.9066666666667, 224.42666666666668],\\n      [248.32000000000002, 235.51999999999998],\\n      [257.7066666666667, 246.61333333333334],\\n      [271.36, 256.85333333333335],\\n      [298.6666666666667, 265.38666666666666],\\n      [308.9066666666667, 266.24],\\n      [331.9466666666667, 264.53333333333336],\\n      [343.04, 258.56],\\n      [349.8666666666667, 253.44],\\n      [354.1333333333334, 248.32],\\n      [356.6933333333333, 242.3466666666667],\\n      [357.5466666666667, 236.37333333333333],\\n      [357.5466666666667, 228.69333333333333],\\n      [357.5466666666667, 220.16000000000003],\\n      [354.9866666666667, 211.62666666666667],\\n      [349.8666666666667, 201.38666666666666],\\n      [343.8933333333334, 193.70666666666665],\\n      [337.06666666666666, 189.44],\\n      [328.53333333333336, 186.0266666666667],\\n      [320.85333333333335, 186.0266666666667],\\n      [313.17333333333335, 186.88],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'abnormal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [157.01333333333335, 369.49333333333334],\\n      [157.01333333333335, 369.49333333333334],\\n      [151.89333333333335, 376.32],\\n      [148.48000000000002, 382.29333333333335],\\n      [144.21333333333334, 389.97333333333336],\\n      [138.24, 405.33333333333337],\\n      [134.82666666666668, 416.4266666666667],\\n      [133.12, 431.7866666666667],\\n      [132.26666666666668, 444.5866666666667],\\n      [133.12, 454.82666666666665],\\n      [136.53333333333333, 462.50666666666666],\\n      [145.06666666666666, 470.18666666666667],\\n      [155.30666666666667, 474.4533333333333],\\n      [169.81333333333333, 477.0133333333334],\\n      [184.32000000000002, 476.16],\\n      [195.41333333333336, 472.7466666666667],\\n      [205.65333333333334, 467.62666666666667],\\n      [211.6266666666667, 463.36],\\n      [219.30666666666667, 456.53333333333336],\\n      [221.86666666666667, 451.41333333333336],\\n      [222.72000000000003, 446.29333333333335],\\n      [222.72000000000003, 439.4666666666667],\\n      [221.01333333333335, 430.08],\\n      [216.74666666666667, 418.9866666666667],\\n      [212.48000000000002, 409.6],\\n      [207.36, 401.06666666666666],\\n      [200.53333333333336, 394.24],\\n      [193.70666666666668, 389.12],\\n      [187.73333333333335, 385.70666666666665],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'normal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [104.96000000000001, 89.60000000000001],\\n      [104.10666666666667, 89.60000000000001],\\n      [97.28, 91.30666666666666],\\n      [91.30666666666667, 93.01333333333334],\\n      [86.18666666666667, 94.72000000000001],\\n      [79.36, 98.13333333333334],\\n      [71.68, 103.25333333333334],\\n      [65.70666666666668, 109.22666666666667],\\n      [61.440000000000005, 113.49333333333333],\\n      [58.88, 121.17333333333333],\\n      [58.02666666666667, 129.70666666666665],\\n      [60.58666666666667, 145.06666666666666],\\n      [64, 151.04000000000002],\\n      [73.38666666666667, 162.98666666666668],\\n      [96.42666666666668, 179.2],\\n      [115.2, 186.88],\\n      [134.82666666666668, 191.1466666666667],\\n      [155.30666666666667, 191.1466666666667],\\n      [168.10666666666668, 188.5866666666667],\\n      [178.34666666666666, 186.0266666666667],\\n      [186.88000000000002, 180.9066666666667],\\n      [191.14666666666668, 175.7866666666667],\\n      [193.70666666666668, 169.81333333333333],\\n      [194.56, 163.84000000000003],\\n      [194.56, 158.72000000000003],\\n      [194.56, 151.89333333333332],\\n      [193.70666666666668, 146.77333333333337],\\n      [192, 140.8],\\n      [192, 139.09333333333336],\\n      [190.29333333333335, 133.97333333333336],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'normal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [249.17333333333335, -17.06666666666667],\\n      [246.61333333333334, -17.06666666666667],\\n      [232.10666666666668, -12.800000000000004],\\n      [221.01333333333335, -9.38666666666667],\\n      [208.21333333333334, -5.1200000000000045],\\n      [198.82666666666668, 0],\\n      [192, 5.119999999999997],\\n      [187.73333333333335, 10.240000000000002],\\n      [185.17333333333335, 15.36],\\n      [183.46666666666667, 23.040000000000006],\\n      [183.46666666666667, 34.13333333333334],\\n      [183.46666666666667, 46.93333333333334],\\n      [186.02666666666667, 64.85333333333334],\\n      [190.29333333333335, 76.8],\\n      [197.97333333333336, 86.18666666666668],\\n      [207.36, 93.01333333333334],\\n      [221.86666666666667, 97.28000000000002],\\n      [238.08, 98.98666666666666],\\n      [256.85333333333335, 98.13333333333334],\\n      [271.36, 93.86666666666666],\\n      [284.16, 87.89333333333333],\\n      [296.96000000000004, 80.21333333333334],\\n      [306.3466666666667, 72.53333333333333],\\n      [310.61333333333334, 67.41333333333334],\\n      [313.17333333333335, 60.58666666666667],\\n      [314.0266666666667, 54.61333333333333],\\n      [314.0266666666667, 44.373333333333335],\\n      [312.32, 35.84],\\n      [308.9066666666667, 25.599999999999994],\\n      [306.3466666666667, 17.066666666666663],\\n      [304.64000000000004, 7.68],\\n      [303.7866666666667, 1.7066666666666634],\\n      [302.93333333333334, -2.5600000000000023],\\n      [302.08000000000004, -5.973333333333336],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'abnormal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [320, 363.52],\\n      [318.29333333333335, 363.52],\\n      [314.0266666666667, 365.2266666666667],\\n      [308.05333333333334, 367.7866666666667],\\n      [300.37333333333333, 374.61333333333334],\\n      [291.84000000000003, 381.44],\\n      [287.5733333333333, 389.12],\\n      [285.0133333333334, 395.94666666666666],\\n      [284.16, 401.92],\\n      [284.16, 407.04],\\n      [287.5733333333333, 414.72],\\n      [295.25333333333333, 423.25333333333333],\\n      [305.49333333333334, 432.64],\\n      [318.29333333333335, 441.17333333333335],\\n      [329.3866666666667, 446.29333333333335],\\n      [344.74666666666667, 449.7066666666667],\\n      [353.28000000000003, 450.56],\\n      [360.96000000000004, 450.56],\\n      [366.93333333333334, 448],\\n      [374.61333333333334, 444.5866666666667],\\n      [380.5866666666667, 441.17333333333335],\\n      [384.85333333333335, 437.76],\\n      [389.12, 433.49333333333334],\\n      [391.68, 426.6666666666667],\\n      [392.53333333333336, 416.4266666666667],\\n      [393.3866666666667, 401.92],\\n      [393.3866666666667, 391.68],\\n      [390.8266666666667, 382.29333333333335],\\n      [388.2666666666667, 377.17333333333335],\\n      [384.85333333333335, 372.9066666666667],\\n      [379.73333333333335, 371.2],\\n      [374.61333333333334, 370.3466666666667],\\n      [367.7866666666667, 370.3466666666667],\\n      [358.40000000000003, 370.3466666666667],\\n      [354.9866666666667, 370.3466666666667],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'abnormal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [410.4533333333334, 273.06666666666666],\\n      [407.04, 273.92],\\n      [401.92, 275.62666666666667],\\n      [397.65333333333336, 276.48],\\n      [395.09333333333336, 278.18666666666667],\\n      [392.53333333333336, 279.04],\\n      [389.97333333333336, 281.6],\\n      [388.2666666666667, 284.16],\\n      [386.56, 289.28000000000003],\\n      [384.85333333333335, 296.1066666666667],\\n      [383.1466666666667, 306.3466666666667],\\n      [381.44, 318.29333333333335],\\n      [380.5866666666667, 327.68],\\n      [381.44, 333.65333333333336],\\n      [385.7066666666667, 337.92],\\n      [392.53333333333336, 342.18666666666667],\\n      [401.92, 345.6],\\n      [414.72, 349.0133333333333],\\n      [427.52000000000004, 349.8666666666667],\\n      [438.61333333333334, 349.8666666666667],\\n      [446.29333333333335, 347.3066666666667],\\n      [453.12, 344.74666666666667],\\n      [456.53333333333336, 341.3333333333333],\\n      [459.9466666666667, 337.06666666666666],\\n      [461.65333333333336, 332.8],\\n      [463.36, 327.68],\\n      [464.21333333333337, 321.70666666666665],\\n      [465.0666666666667, 314.88],\\n      [465.92, 307.2],\\n      [465.92, 302.08],\\n      [465.92, 296.96],\\n      [465.92, 292.6933333333333],\\n      [465.0666666666667, 289.28000000000003],\\n      [463.36, 285.0133333333333],\\n      [461.65333333333336, 281.6],\\n      [458.24, 277.3333333333333],\\n      [454.8266666666667, 274.7733333333333],\\n      [450.56, 271.36],\\n      [447.1466666666667, 269.6533333333333],\\n      [444.5866666666667, 267.94666666666666],\\n      [442.88000000000005, 267.09333333333336],\\n      [440.32000000000005, 267.09333333333336],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'normal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [95.57333333333334, 251.73333333333335],\\n      [89.60000000000001, 255.14666666666665],\\n      [82.77333333333334, 261.12],\\n      [75.94666666666667, 267.94666666666666],\\n      [72.53333333333333, 273.92],\\n      [69.97333333333334, 279.8933333333333],\\n      [69.12, 285.0133333333333],\\n      [69.12, 290.9866666666667],\\n      [69.97333333333334, 298.6666666666667],\\n      [75.94666666666667, 308.05333333333334],\\n      [82.77333333333334, 315.73333333333335],\\n      [93.01333333333334, 323.41333333333336],\\n      [106.66666666666667, 330.24],\\n      [120.32000000000001, 332.8],\\n      [134.82666666666668, 333.65333333333336],\\n      [157.86666666666667, 330.24],\\n      [174.08, 323.41333333333336],\\n      [183.46666666666667, 317.44],\\n      [193.70666666666668, 310.61333333333334],\\n      [201.38666666666668, 303.7866666666667],\\n      [205.65333333333334, 297.81333333333333],\\n      [207.36, 291.84],\\n      [208.21333333333334, 283.3066666666667],\\n      [205.65333333333334, 273.92],\\n      [197.97333333333336, 262.82666666666665],\\n      [188.58666666666667, 251.73333333333335],\\n      [180.05333333333334, 244.90666666666664],\\n      [169.81333333333333, 238.07999999999998],\\n      [161.28, 233.81333333333333],\\n      [154.45333333333335, 231.25333333333333],\\n      [149.33333333333334, 230.39999999999998],\\n      [145.06666666666666, 230.39999999999998],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'normal',\\n    },\\n  },\\n  {\\n    polygon: [\\n      [31.573333333333334, 365.2266666666667],\\n      [30.720000000000002, 365.2266666666667],\\n      [27.30666666666667, 368.64],\\n      [24.74666666666667, 372.9066666666667],\\n      [19.62666666666667, 380.5866666666667],\\n      [15.360000000000001, 387.41333333333336],\\n      [11.946666666666667, 395.09333333333336],\\n      [10.24, 403.62666666666667],\\n      [9.386666666666667, 410.4533333333333],\\n      [9.386666666666667, 417.28000000000003],\\n      [11.093333333333334, 422.40000000000003],\\n      [17.92, 427.52000000000004],\\n      [30.720000000000002, 433.49333333333334],\\n      [45.22666666666667, 435.2],\\n      [55.46666666666667, 435.2],\\n      [65.70666666666668, 434.3466666666667],\\n      [74.24000000000001, 430.08],\\n      [81.92, 424.96000000000004],\\n      [87.04, 419.84000000000003],\\n      [90.45333333333333, 414.72],\\n      [92.16000000000001, 409.6],\\n      [93.01333333333334, 403.62666666666667],\\n      [93.01333333333334, 395.94666666666666],\\n      [90.45333333333333, 388.26666666666665],\\n      [86.18666666666667, 381.44],\\n      [81.92, 375.4666666666667],\\n      [75.09333333333333, 370.3466666666667],\\n      [63.14666666666667, 364.37333333333333],\\n      [53.760000000000005, 362.6666666666667],\\n      [48.64, 362.6666666666667],\\n      [42.66666666666667, 363.52],\\n      [40.96, 364.37333333333333],\\n      [36.693333333333335, 366.08],\\n    ],\\n    label: labelFunction,\\n    dataAttrs: {\\n      'data-category': 'abnormal',\\n    },\\n  },\\n];\\n\"","import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { initialContours } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst CustomStyleViewer = styled(ContourViewer)`\n  --contour-viewer-stroke-width: 10px;\n  --contour-viewer-focused-stroke-width: 20px;\n\n  --contour-viewer-color: blue;\n  --contour-viewer-focused-color: red;\n  --contour-viewer-fill-color: rgba(0, 0, 255, 0.3);\n  --contour-viewer-focused-fill-color: rgba(255, 0, 0, 0.3);\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CustomStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  ContourViewer,\\n  ContourHover,\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  InsightViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  unloadImage,\\n  useContour,\\n  useInsightViewerSync,\\n} from '@lunit/insight-viewer';\\nimport React, { useMemo, useState } from 'react';\\nimport styled from 'styled-components';\\nimport { initialContours } from '../../../__fixtures__/contour';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nconst CustomStyleViewer = styled(ContourViewer)`\\n  --contour-viewer-stroke-width: 10px;\\n  --contour-viewer-focused-stroke-width: 20px;\\n\\n  --contour-viewer-color: blue;\\n  --contour-viewer-focused-color: red;\\n  --contour-viewer-fill-color: rgba(0, 0, 255, 0.3);\\n  --contour-viewer-focused-fill-color: rgba(255, 0, 0, 0.3);\\n`;\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n        unload: unloadImage,\\n      }),\\n    [],\\n  );\\n\\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\\n\\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\\n\\n  // create contour data\\n  const { contours, focusedContour, focusContour } = useContour({\\n    mode: 'contour', // is [x, y][]\\n    initialContours,\\n  });\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\\n          <InsightViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            pan={control === 'pan' && divElement}\\n            adjust={control === 'adjust' && divElement}\\n            zoom={wheel === 'zoom' && divElement}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\\n          />\\n          {contours && contours.length > 0 && cornerstoneRenderData && (\\n            <>\\n              <CustomStyleViewer\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                focusedContour={focusedContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n              <ContourHover\\n                hover={divElement}\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                onFocus={focusContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n            </>\\n          )}\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { color as d3color } from 'd3-color';\nimport React, { useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { categoryColors, initialContours } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst categoryStyle = (category: string) => {\n  // focused color는 기본 color를 조금 밝게해서 사용한다\n  const focusedColor =\n    d3color(categoryColors[category])\n      ?.brighter(3)\n      .toString() || categoryColors[category];\n\n  // data-category attribute 별로 색상을 지정해준다\n  return css`\n    > [data-category=\"${category}\"] {\n      --contour-viewer-color: ${categoryColors[category]};\n      --contour-viewer-focused-color: ${focusedColor};\n      --contour-viewer-fill-color: ${categoryColors[category]};\n    }\n  `;\n};\n\nconst CategoryStyleViewer = styled(ContourViewer)`\n  polygon {\n    fill-opacity: 0.3;\n  }\n\n  ${Object.keys(categoryColors).map(categoryStyle)};\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <CategoryStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  ContourViewer,\\n  ContourHover,\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  InsightViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  unloadImage,\\n  useContour,\\n  useInsightViewerSync,\\n} from '@lunit/insight-viewer';\\nimport { color as d3color } from 'd3-color';\\nimport React, { useMemo, useState } from 'react';\\nimport styled, { css } from 'styled-components';\\nimport { categoryColors, initialContours } from '../../../__fixtures__/contour';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nconst categoryStyle = (category: string) => {\\n  // focused color는 기본 color를 조금 밝게해서 사용한다\\n  const focusedColor =\\n    d3color(categoryColors[category])\\n      ?.brighter(3)\\n      .toString() || categoryColors[category];\\n\\n  // data-category attribute 별로 색상을 지정해준다\\n  return css`\\n    > [data-category=\\\"${category}\\\"] {\\n      --contour-viewer-color: ${categoryColors[category]};\\n      --contour-viewer-focused-color: ${focusedColor};\\n      --contour-viewer-fill-color: ${categoryColors[category]};\\n    }\\n  `;\\n};\\n\\nconst CategoryStyleViewer = styled(ContourViewer)`\\n  polygon {\\n    fill-opacity: 0.3;\\n  }\\n\\n  ${Object.keys(categoryColors).map(categoryStyle)};\\n`;\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n        unload: unloadImage,\\n      }),\\n    [],\\n  );\\n\\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\\n\\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\\n\\n  // create contour data\\n  const { contours, focusedContour, focusContour } = useContour({\\n    mode: 'contour', // is [x, y][]\\n    initialContours,\\n  });\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\\n          <InsightViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            pan={control === 'pan' && divElement}\\n            adjust={control === 'adjust' && divElement}\\n            zoom={wheel === 'zoom' && divElement}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\\n          />\\n          {contours && contours.length > 0 && cornerstoneRenderData && (\\n            <>\\n              <CategoryStyleViewer\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                focusedContour={focusedContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n              <ContourHover\\n                hover={divElement}\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                onFocus={focusContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n            </>\\n          )}\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","import {\n  ContourViewer,\n  ContourHover,\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  InsightViewerContainer,\n  InsightViewerControllerOptions,\n  InsightViewerTestController,\n  installWADOImageLoader,\n  unloadImage,\n  useContour,\n  useInsightViewerSync,\n} from '@lunit/insight-viewer';\nimport { color as d3color } from 'd3-color';\nimport React, { useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { initialContours, seriesColors } from '../../../__fixtures__/contour';\n\ninstallWADOImageLoader();\n\nconst controllerOptions: InsightViewerControllerOptions = {\n  width: [600, 400, 1000],\n  height: [700, 400, 1000],\n  control: ['pan', ['none', 'pan', 'adjust']],\n  wheel: ['zoom', ['none', 'zoom']],\n  flip: [false],\n  invert: [false],\n};\n\nconst sequenceStyle = (color: string, i: number) => {\n  const focusedColor =\n    d3color(color)\n      ?.brighter(3)\n      .toString() || color;\n\n  return css`\n    > [data-id=\"${i}\"] {\n      --contour-viewer-color: ${color};\n      --contour-viewer-focused-color: ${focusedColor};\n      --contour-viewer-fill-color: ${color};\n    }\n  `;\n};\n\nconst SequenceStyleViewer = styled(ContourViewer)`\n  polygon {\n    fill-opacity: 0.2;\n  }\n\n  ${seriesColors.map(sequenceStyle)};\n`;\n\nexport default () => {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\n\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\n\n  // create contour data\n  const { contours, focusedContour, focusContour } = useContour({\n    mode: 'contour', // is [x, y][]\n    initialContours,\n  });\n\n  return (\n    <InsightViewerTestController options={controllerOptions}>\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\n          <InsightViewer\n            width={width}\n            height={height}\n            invert={invert}\n            flip={flip}\n            pan={control === 'pan' && divElement}\n            adjust={control === 'adjust' && divElement}\n            zoom={wheel === 'zoom' && divElement}\n            resetTime={resetTime}\n            image={image}\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\n          />\n          {contours && contours.length > 0 && cornerstoneRenderData && (\n            <>\n              <SequenceStyleViewer\n                width={width}\n                height={height}\n                contours={contours}\n                focusedContour={focusedContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n              <ContourHover\n                hover={divElement}\n                width={width}\n                height={height}\n                contours={contours}\n                onFocus={focusContour}\n                cornerstoneRenderData={cornerstoneRenderData}\n              />\n            </>\n          )}\n        </InsightViewerContainer>\n      )}\n    </InsightViewerTestController>\n  );\n};\n","export default \"import {\\n  ContourViewer,\\n  ContourHover,\\n  CornerstoneImage,\\n  CornerstoneSingleImage,\\n  InsightViewer,\\n  InsightViewerContainer,\\n  InsightViewerControllerOptions,\\n  InsightViewerTestController,\\n  installWADOImageLoader,\\n  unloadImage,\\n  useContour,\\n  useInsightViewerSync,\\n} from '@lunit/insight-viewer';\\nimport { color as d3color } from 'd3-color';\\nimport React, { useMemo, useState } from 'react';\\nimport styled, { css } from 'styled-components';\\nimport { initialContours, seriesColors } from '../../../__fixtures__/contour';\\n\\ninstallWADOImageLoader();\\n\\nconst controllerOptions: InsightViewerControllerOptions = {\\n  width: [600, 400, 1000],\\n  height: [700, 400, 1000],\\n  control: ['pan', ['none', 'pan', 'adjust']],\\n  wheel: ['zoom', ['none', 'zoom']],\\n  flip: [false],\\n  invert: [false],\\n};\\n\\nconst sequenceStyle = (color: string, i: number) => {\\n  const focusedColor =\\n    d3color(color)\\n      ?.brighter(3)\\n      .toString() || color;\\n\\n  return css`\\n    > [data-id=\\\"${i}\\\"] {\\n      --contour-viewer-color: ${color};\\n      --contour-viewer-focused-color: ${focusedColor};\\n      --contour-viewer-fill-color: ${color};\\n    }\\n  `;\\n};\\n\\nconst SequenceStyleViewer = styled(ContourViewer)`\\n  polygon {\\n    fill-opacity: 0.2;\\n  }\\n\\n  ${seriesColors.map(sequenceStyle)};\\n`;\\n\\nexport default () => {\\n  const image: CornerstoneImage = useMemo(\\n    () =>\\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\\n        unload: unloadImage,\\n      }),\\n    [],\\n  );\\n\\n  const [divElement, setDivElement] = useState<HTMLDivElement | null>(null);\\n\\n  const { cornerstoneRenderData, updateCornerstoneRenderData } = useInsightViewerSync();\\n\\n  // create contour data\\n  const { contours, focusedContour, focusContour } = useContour({\\n    mode: 'contour', // is [x, y][]\\n    initialContours,\\n  });\\n\\n  return (\\n    <InsightViewerTestController options={controllerOptions}>\\n      {({ width, height, invert, flip, control, wheel, resetTime }) => (\\n        <InsightViewerContainer ref={setDivElement} width={width} height={height}>\\n          <InsightViewer\\n            width={width}\\n            height={height}\\n            invert={invert}\\n            flip={flip}\\n            pan={control === 'pan' && divElement}\\n            adjust={control === 'adjust' && divElement}\\n            zoom={wheel === 'zoom' && divElement}\\n            resetTime={resetTime}\\n            image={image}\\n            updateCornerstoneRenderData={updateCornerstoneRenderData}\\n          />\\n          {contours && contours.length > 0 && cornerstoneRenderData && (\\n            <>\\n              <SequenceStyleViewer\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                focusedContour={focusedContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n              <ContourHover\\n                hover={divElement}\\n                width={width}\\n                height={height}\\n                contours={contours}\\n                onFocus={focusContour}\\n                cornerstoneRenderData={cornerstoneRenderData}\\n              />\\n            </>\\n          )}\\n        </InsightViewerContainer>\\n      )}\\n    </InsightViewerTestController>\\n  );\\n};\\n\"","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { component, source } from '@handbook/source';\nimport { Example } from '@handbook/components';\nimport { InsightViewerPreview } from '@lunit/handbook';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1><inlineCode parentName=\"h1\">{`<ContourViewer>`}</inlineCode></h1>\n    <p><inlineCode parentName=\"p\">{`Contour`}</inlineCode>{` 데이터를 화면에 그린다.`}</p>\n    <p><inlineCode parentName=\"p\">{`<T extends Contour>`}</inlineCode>{`로 구성된 Generic Data를 사용한다. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface ContourViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n  \n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n  \n  /**\n   * Mouse Over 등 User Interaction에 의해서 Focus 된 Contour\n   * \\`<ContourViewer>\\`는 Focus 관련 Event 기능이 없기 때문에 \\`<ContourHover>\\`와 같이 써줘야 한다.\n   */\n  focusedContour: T | null;\n  \n  /** <svg className={}> */\n  className?: string;\n  \n  /** <svg style={}> */\n  style?: CSSProperties;\n  \n  /**\n   * Line에 외곽을 그려준다\n   * Line을 두 개 그려서 border를 표현하기 때문에,성능에 민감한 상황인 경우 비활성 시킬 수 있다.\n   * default: true\n   */\n  border?: boolean;\n}\n`}</code></pre>\n    <p>{`아래 모든 예제들은 이 Data를 사용하게 된다.`}</p>\n    <Example example={source('../../__fixtures__/contour')} mdxType=\"Example\" />\n    <p><inlineCode parentName=\"p\">{`Contour`}</inlineCode>{` 데이터를 넣어주면 화면에 Annotation을 그린다.`}</p>\n    <Example example={component('./ContourViewer/Basic')} mdxType=\"Example\">\n  <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://frontend-components-handbook.netlify.com/#/insight-viewer/usecontour()\"\n      }}>{`useContour()에 대해 자세히 알아보기`}</a></p>\n    <h1>{`Styling`}</h1>\n    <p>{`CSS Variable을 통해서 색상을 변경할 수 있다.`}</p>\n    <p>{`아래 File에서 `}<inlineCode parentName=\"p\">{`--contour-viewer-*`}</inlineCode>{`의 이름을 가진 항목들에 영향을 받는다.`}</p>\n    <Example example={source('../../theme/style')} mdxType=\"Example\" />\n    <Example example={component('./ContourViewer/CustomStyle')} mdxType=\"Example\">\n  <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    <h1>{`Styling with `}<inlineCode parentName=\"h1\">{`Contour.dataAttrs`}</inlineCode></h1>\n    <p><inlineCode parentName=\"p\">{`Contour.dataAttrs`}</inlineCode>{` 데이터에 의해서 `}<inlineCode parentName=\"p\">{`<polygon data-some={value}>`}</inlineCode>{`이 입력되게 된다.`}</p>\n    <p>{`해당 `}<inlineCode parentName=\"p\">{`data-*`}</inlineCode>{` Attribute를 기준으로 색상을 변경할 수 있다.`}</p>\n    <Example example={component('./ContourViewer/CategoryStyle')} mdxType=\"Example\">\n  <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n    </Example>\n    <h1>{`Styling with Data sequence`}</h1>\n    <p>{`혹은 배열의 순서에 따라 각각 다른 색상을 줄 수도 있다.`}</p>\n <Example example={component('./ContourViewer/SequenceStyle')} mdxType=\"Example\">\n   <InsightViewerPreview height={720} mdxType=\"InsightViewerPreview\" />\n </Example>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/_packages/@lunit/insight-viewer/context/frame.tsx","webpack:///./src/_packages/@lunit/insight-viewer/image/ParallelImageLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/index.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/types.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageProgress.tsx","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneSingleImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/theme/style.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startAdjustInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startPanInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/interactions/startZoomInteraction.ts","webpack:///./src/_packages/@lunit/insight-viewer/geom/hitTestContours.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/animation/dashStroke.ts","webpack:///./src/_packages/@lunit/insight-viewer/geom/hitTestCircles.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/wadoImageLoaderXHRLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/loaders/installWADOImageLoader.ts","webpack:///./src/_packages/@lunit/insight-viewer/loaders/unloadImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourDrawer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ContourHover.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewerContainer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ProgressViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleDrawer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CircleHover.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/DCMImage.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/ThumbnailImage.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/InsightViewerTestController.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/StrokeText.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/CornerstoneViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/interactions/adjust.ts","webpack:///./src/_packages/@lunit/insight-viewer/interactions/pan.ts","webpack:///./src/_packages/@lunit/insight-viewer/interactions/zoom.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useSeriesImagePosition.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useSeriesImageScroll.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useInsightViewerSync.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useViewportMirroring.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageLoadedTime.ts","webpack:///./src/_packages/@lunit/insight-viewer/hooks/useImageStore.tsx","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneSeriesImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/fetchBuffer.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/fileToBuffer.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneFileSingleImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/image/CornerstoneStaticSeriesImage.ts","webpack:///./src/_packages/@lunit/insight-viewer/theme/withInsightViewerStorybookGlobalStyle.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/HeatmapViewer.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/PointPin.tsx","webpack:///./src/_packages/@lunit/insight-viewer/components/PointViewer.tsx","webpack:///./src/_packages/@lunit/opt-components/theme/style.ts","webpack:///./src/_packages/@lunit/opt-components/theme/theme.ts","webpack:///./src/_packages/@lunit/opt-components/theme/withOPTComponentsStorybookGlobalStyle.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Button.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Panel.tsx","webpack:///./src/_packages/@lunit/opt-components/components/PanelDescription.tsx","webpack:///./src/_packages/@lunit/opt-components/components/PanelToolbar.tsx","webpack:///./src/_packages/@lunit/opt-components/components/PanelToolbarBadge.tsx","webpack:///./src/_packages/@lunit/opt-components/components/ButtonLayout.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Slider.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Tooltip.tsx","webpack:///./src/_packages/@lunit/opt-components/components/ScrollContainer.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Switch.tsx","webpack:///./src/_packages/@lunit/opt-components/theme/lighten.ts","webpack:///./src/_packages/@lunit/opt-components/components/DialogPaper.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Dialog.tsx","webpack:///./src/_packages/@lunit/opt-components/components/QuarterView.tsx","webpack:///./src/_packages/@lunit/opt-components/components/SwitchRow.tsx","webpack:///./src/_packages/@lunit/opt-components/components/Snackbar.tsx","webpack:///./src/_packages/@lunit/opt-components/components/VideoBackgroundContainer.tsx","webpack:///./src/handbook-insight-viewer-sample/components/GlobalStyle.tsx","webpack:///./src/handbook-insight-viewer-sample/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","FrameContext","createContext","contentWindow","FrameConsumer","stateRef","Consumer","state","async","delay","ms","Promise","resolve","setTimeout","ParallelImageLoader","constructor","options","loadImage","imageId","this","timeout","race","cornerstone","then","Error","getProgressEventDetail","event","detail","useImageProgress","image","progress","setProgress","useState","useEffect","subscription","subscribe","nextProgress","unsubscribe","defaultLoader","CornerstoneSingleImage","_imageSubject","_progressSubject","_cancel","_loader","_destoyed","destroy","unload","events","removeEventListener","onProgress","forEach","cancel","eventDetail","next","Math","min","loaded","total","loader","wadoImageLoaderXHRLoader","error","console","warn","BehaviorSubject","addEventListener","asObservable","blockStyle","css","globalStyle","startAdjustInteraction","element","getCurrentViewport","onMove","onEnd","startPageX","startPageY","startWindowCenter","startWindowWidth","startTrigger","mouseStart","touchStart","stopTrigger","targetTouches","touchMove","touchEnd","stopPropagation","stopImmediatePropagation","preventDefault","viewport","touches","pageX","pageY","voi","windowCenter","windowWidth","changedTouches","dx","dy","max","button","mouseMove","mouseEnd","startPanInteraction","startTranslationX","startTranslationY","translation","x","y","scale","startZoomInteraction","getMinMaxScale","onZoom","wheel","minScale","maxScale","currentViewport","delta","deltaY","nextScale","top","left","width","height","getBoundingClientRect","distanceX","scrollX","distanceY","scrollY","startPagePoints","startPixelDistance","startViewportPoint","startViewportScale","pinchStart","a","abs","b","sqrt","pow","pinchMove","pinchEnd","pagePoints","pixelDistance","nextViewportPoint","timer","elapsed","easeQuadInOut","stop","hitTestContours","contours","cursor","find","contour","pointInPolygon","polygon","dash","keyframes","dashStroke","hitTestCircles","cx","cy","x1","y1","x2","y2","r1","getCancel","url","headers","params","cornerstoneWADOImageLoader","external","xhr","XMLHttpRequest","reject","open","responseType","keys","setRequestHeader","deferred","abort","onreadystatechange","readyState","status","response","onloadstart","eventData","triggerEvent","onloadend","onprogress","lengthComputable","percentComplete","round","send","installed","installWADOImageLoader","dicomParser","unloadImage","id","test","wadouri","dataSetCacheManager","Array","isArray","InsightViewer","Component","currentImage","teardownPanInteraction","teardownAdjustInteraction","teardownZoomInteraction","imageSubscription","needImageInitialize","elementRef","props","pan","adjust","zoom","initImage","disable","enable","renderer","defaultViewport","getDefaultViewport","defaultViewportTransforms","transform","patch","hflip","flip","invert","displayImage","setImage","setViewport","subscribeImage","voiLUT","undefined","onImageRenderered","canvasContext","enabledElement","renderTimeInMs","updateCornerstoneRenderData","updateCurrentViewport","getMinScale","getMaxScale","getDefaultViewportForImage","updateViewport","getViewportTransformParams","setCornerstoneImage","update","render","ref","style","componentDidMount","EVENTS","IMAGE_RENDERED","componentWillUnmount","componentDidUpdate","prevProps","resetTime","resize","getViewport","ContourViewerBase","svgRef","createRef","cornerstoneRenderData","focusedContour","className","map","pixelToCanvas","toLocal","labelCenter","polylabel","focused","dataAttrs","border","data-border","data-id","data-focused","points","join","fontSize","label","defaultProps","styled","ContourDrawerBase","super","svg","preventClickEvent","startX","startY","deactivateInitialEvents","deactivateDrawEvents","canActivate","getElement","activateInitialEvents","draw","onMouseMoveToFindFocus","onMouseDownToStartDraw","onMouseClickToRemove","findFocus","pageToPixel","onFocus","onRemove","activateDrawEvents","setState","prevState","onMouseMoveToDraw","onMouseUpToEndDraw","onMouseLeaveToCancelDraw","onKeyDownToCancelDraw","onAdd","cancelDraw","toLowerCase","role","animateStroke","data-highlight","ContourHoverBase","hover","div","inProgress","unsetProgress","CircleViewerBase","CircleDrawerBase","p1","p2","CircleHoverBase","ImageStoreContext","createGlobalStyle","canvas","onEnter","onLeave","gProps","onClick","useCallback","nativeEvent","onMouseEnter","onMouseLeave","createMuiTheme","palette","type","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","overrides","MuiTooltip","tooltip","backgroundColor","checkIcon","buttonClasses","ButtonBase","icon","check","selected","onChange","hideCheck","disabled","muiButtonProps","click","aria-selected","attrs","layout","panelClasses","Arrow","panelStyle","panelIconHoverStyle","Panel","expanded","title","children","expand","content","iconElement","getIcon","aria-expanded","aria-disabled","sessionId","defaultExpanded","useMemo","setExpanded","sessionValue","localStorage","getItem","updateExpanded","nextExpanded","setItem","h3","span","verticalLayout","gap","horizontalLayout","direction","valueLabelDisplay","Tooltip","arrow","popper","classes","useTooltipStyle","arrowRef","setArrowRef","React","PopperProps","popperOptions","modifiers","enabled","Boolean","makeStyles","position","borderRadius","color","margin","display","borderStyle","marginTop","borderWidth","borderColor","bottom","marginBottom","marginLeft","right","marginRight","blinkAnimation","ErrorIcon","lighten","Paper","IconButton","SnackbarContent","enter","GlobalStyle","source","divProps","autoPlay","loop","muted","componentsGlobalStyle","insightViewerGlobalStyle","App","Date","now","document","querySelector"],"mappings":"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","file":"app.c79170c66ff1e9e0856a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([182,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, { Context, createContext, ReactNode, useContext } from 'react';\n\nexport interface FrameProviderProps {\n  children: ReactNode;\n  frame?: HTMLIFrameElement;\n  contentWindow?: Window;\n}\n\nexport interface FrameState {\n  frame?: HTMLIFrameElement;\n  contentWindow: Window;\n}\n\nconst FrameContext: Context<FrameState> = createContext<FrameState>({\n  contentWindow: window,\n});\n\n/**\n * `<iframe>` + `React.createPortal()` 이라는 매우 특수한 상황을 위한 기능.\n * 사용할 일은 거의 없다.\n */\nexport function FrameProvider({ children, contentWindow = window }: FrameProviderProps) {\n  return (\n    <FrameContext.Provider\n      value={{\n        contentWindow,\n      }}\n    >\n      {children}\n    </FrameContext.Provider>\n  );\n}\n\nexport function useFrame(): FrameState {\n  return useContext(FrameContext);\n}\n\nexport function FrameConsumer({ stateRef }: { stateRef: (state: FrameState) => void }) {\n  return <FrameContext.Consumer>{state => void stateRef(state)}</FrameContext.Consumer>;\n}\n\n//export const InsightViewerConsumer: Consumer<InsightViewerState> = InsightViewerContext.Consumer;\n","import { ImageLoader, LoadImageParams } from './types';\n\nasync function delay(ms: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\ninterface Options {\n  timeout?: number;\n}\n\nexport class ParallelImageLoader implements ImageLoader {\n  constructor(private readonly options: Options = {}) {}\n\n  loadImage = ({ imageId, options }: LoadImageParams): Promise<cornerstone.Image> => {\n    return typeof this.options.timeout === 'number'\n      ? Promise.race([\n          cornerstone.loadImage(imageId, options),\n          delay(this.options.timeout).then(() => {\n            throw new Error('TIMEOUT');\n          }),\n        ])\n      : cornerstone.loadImage(imageId, options);\n  };\n}\n","/// <reference types=\"@lunit/cornerstone-declarations\"/>\n\nexport * from './types';\n\nexport * from './loaders/installWADOImageLoader';\nexport * from './loaders/installWebImageLoader';\nexport * from './loaders/unloadImage';\n\nexport * from './components/InsightViewer';\nexport * from './components/ContourViewer';\nexport * from './components/ContourDrawer';\nexport * from './components/ContourHover';\nexport * from './components/HeatmapViewer';\nexport * from './components/InsightViewerContainer';\nexport * from './components/ProgressViewer';\nexport * from './components/PointViewer';\nexport * from './components/CircleViewer';\nexport * from './components/CircleDrawer';\nexport * from './components/CircleHover';\nexport * from './components/DCMImage';\nexport * from './components/ThumbnailImage';\nexport * from './components/InsightViewerTestController';\nexport * from './components/StrokeText';\nexport * from './components/CornerstoneViewer';\n\nexport * from './interactions/adjust';\nexport * from './interactions/pan';\nexport * from './interactions/zoom';\n\nexport * from './hooks/useSeriesImagePosition';\nexport * from './hooks/useSeriesImageScroll';\nexport * from './hooks/useImageProgress';\nexport * from './hooks/useInsightViewerSync';\nexport * from './hooks/useContour';\nexport * from './hooks/useViewportMirroring';\nexport * from './hooks/useImageLoadedTime';\nexport * from './hooks/useImageStore';\n\nexport * from './image/types';\nexport * from './image/CornerstoneSingleImage';\nexport * from './image/CornerstoneSeriesImage';\nexport * from './image/ParallelImageLoader';\nexport * from './image/QueueImageLoader';\n\nexport * from './image/fetchBuffer';\nexport * from './image/fileToBuffer';\nexport * from './image/CornerstoneFileSingleImage';\nexport * from './image/CornerstoneStaticSeriesImage';\nexport * from './image/mapNpyBufferToImages';\n\nexport * from './behaviors/updateViewport';\n\nexport * from './theme/style';\nexport * from './theme/withInsightViewerStorybookGlobalStyle';\n\nexport * from './context/frame';\n","import { Observable } from 'rxjs';\n\nexport interface CornerstoneImage {\n  /** cornerstoneImage.image.subscribe() 로 cornerstone.Image를 받을 수 있다 */\n  readonly image: Observable<cornerstone.Image | null>;\n  /** cornerstoneImage.progress.subscribe() 로 로딩 상태를 0 ~ 1의 값으로 얻을 수 있다 */\n  readonly progress: Observable<number>;\n  /** cornerstoneImage.destroy() 로 현재 Image를 Cache에서 삭제한다 */\n  destroy: () => void;\n}\n\nexport interface CornerstoneSequenceImage extends CornerstoneImage {\n  /** 총 이미지 갯수 */\n  length: () => number;\n  /** 현재 보여주고 있는 Image의 index number */\n  getIndex: () => number;\n  /** cornerstoneImage.index.subscribe() 로 현재 보여주고 있는 Image의 index number를 받을 수 있다 */\n  readonly index: Observable<number>;\n  /** 다음 Image 보기 */\n  next: (delta?: number) => void;\n  /** 이전 Image 보기 */\n  prev: (delta?: number) => void;\n  /** 특정 index number의 Image 보기 */\n  goto: (index: number) => void;\n}\n\n/** @deprecated use CornerstoneSequenceImage */\nexport interface CornerstoneBulkImage extends CornerstoneSequenceImage {}\n\nexport interface ProgressEventDetail {\n  url: string;\n  imageId: string;\n  loaded: number;\n  total: number;\n  percentComplete: number; // 0 ~ 100\n}\n\nexport function getProgressEventDetail(event: Event): ProgressEventDetail | undefined {\n  const detail: object | undefined = event['detail'];\n\n  if (\n    detail &&\n    typeof detail['url'] === 'string' &&\n    typeof detail['imageId'] === 'string' &&\n    typeof detail['loaded'] === 'number' &&\n    typeof detail['total'] === 'number' &&\n    typeof detail['percentComplete'] === 'number'\n  ) {\n    return detail as ProgressEventDetail;\n  }\n\n  return undefined;\n}\n\nexport interface LoadImageParams {\n  imageId: string;\n  options?: object;\n}\n\nexport interface ImageLoader {\n  loadImage: (params: LoadImageParams) => Promise<cornerstone.Image>;\n}\n\nexport interface NpyImageInfo {\n  id: string;\n  windowCenter: number;\n  windowWidth: number;\n  sliceSpacing: number;\n  rowPixelSpacing: number;\n  columnPixelSpacing: number;\n  slope?: number;\n  intercept?: number;\n  minPixelValue?: number;\n  maxPixelValue?: number;\n}\n","import { useEffect, useState } from 'react';\nimport { CornerstoneImage } from '../image/types';\n\n/**\n * CornerstoneImage의 Loading 상태를 확인하기 위해 사용한다.\n *\n * @return `number`는 loading이 진행중이고, `null`은 loading이 진행중이 아니다. `null`이 오는 경우 Progress UI를 감추면 된다.\n */\nexport function useImageProgress(image: CornerstoneImage | null | undefined): number | null {\n  const [progress, setProgress] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (image) {\n      const subscription = image.progress.subscribe(nextProgress => {\n        setProgress(nextProgress < 1 ? nextProgress : null);\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    } else {\n      setProgress(null);\n    }\n  }, [image]);\n\n  return progress;\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneImage, getProgressEventDetail, ImageLoader, ProgressEventDetail } from './types';\nimport { wadoImageLoaderXHRLoader } from './wadoImageLoaderXHRLoader';\n\ninterface Options {\n  timeout?: number;\n  unload?: (imageId: string) => void;\n  cancelTokenName?: string;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneSingleImage implements CornerstoneImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _progressSubject: BehaviorSubject<number>;\n  private readonly _cancel: (() => void)[] = [];\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private readonly imageId: string, private readonly options: Options = {}) {\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._progressSubject = new BehaviorSubject(0);\n    this._loader = options.loader || defaultLoader;\n\n    cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onProgress);\n    this.loadImage(imageId);\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progressSubject.asObservable();\n  }\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this.imageId);\n    }\n\n    cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this._cancel.forEach(cancel => cancel());\n\n    this._destoyed = true;\n  };\n\n  private onProgress = (event: Event) => {\n    const eventDetail: ProgressEventDetail | undefined = getProgressEventDetail(event);\n\n    if (eventDetail && eventDetail.imageId === this.imageId) {\n      this._progressSubject.next(Math.min(eventDetail.loaded / eventDetail.total, 0.99));\n    }\n  };\n\n  private loadImage = async (imageId: string) => {\n    try {\n      const image = await this._loader.loadImage({\n        imageId,\n        options: { loader: wadoImageLoaderXHRLoader(cancel => this._cancel.push(cancel)) },\n      });\n\n      cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n      if (!this._destoyed) {\n        this._imageSubject.next(image);\n        this._progressSubject.next(1);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${imageId}):`, error);\n        this.loadImage(imageId);\n      }\n    }\n  };\n}\n","import { ColorProperty } from 'csstype';\nimport { css } from 'styled-components';\n\nexport interface InsightViewerCSSProperties {\n  '--contour-viewer-color'?: ColorProperty;\n  '--contour-viewer-focused-color'?: ColorProperty;\n  '--contour-viewer-stroke-width'?: ColorProperty;\n  '--contour-viewer-focused-stroke-width'?: ColorProperty;\n  '--contour-viewer-fill-color'?: ColorProperty;\n  '--contour-viewer-focused-fill-color'?: ColorProperty;\n\n  '--contour-drawer-color'?: ColorProperty;\n  '--contour-drawer-stroke-width'?: ColorProperty;\n  '--contour-drawer-fill-color'?: ColorProperty;\n\n  '--pin-color'?: ColorProperty;\n  '--pin-focused-color'?: ColorProperty;\n}\n\nexport const blockStyle = css`\n  --contour-viewer-color: #ffffff;\n  --contour-viewer-focused-color: rgb(255, 194, 17);\n  --contour-viewer-stroke-width: 3px;\n  --contour-viewer-focused-stroke-width: 6px;\n  --contour-viewer-fill-color: rgba(0, 0, 0, 0.2);\n  --contour-viewer-focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  --contour-drawer-color: rgb(255, 224, 0);\n  --contour-drawer-stroke-width: 4px;\n  --contour-drawer-fill-color: rgba(255, 224, 0, 0.2);\n\n  --pin-color: #ffffff;\n  --pin-focused-color: rgb(255, 194, 17);\n`;\n\nexport const globalStyle = css`\n  :root {\n    ${blockStyle};\n  }\n`;\n","interface AdjustInteractionParams {\n  element: HTMLElement;\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onMove: (voi: cornerstone.VOI) => void;\n  onEnd: () => void;\n  contentWindow: Window;\n}\n\nexport function startAdjustInteraction({\n  element,\n  getCurrentViewport,\n  onMove,\n  onEnd,\n  contentWindow,\n}: AdjustInteractionParams): () => void {\n  let startPageX: number;\n  let startPageY: number;\n  let startWindowCenter: number;\n  let startWindowWidth: number;\n\n  function startTrigger() {\n    element.addEventListener('mousedown', mouseStart);\n    element.addEventListener('touchstart', touchStart);\n  }\n\n  function stopTrigger() {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n  }\n\n  function touchStart(event: TouchEvent) {\n    if (event.targetTouches.length > 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n    }\n\n    if (event.targetTouches.length !== 1) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.touches[0].pageX;\n    startPageY = event.touches[0].pageY;\n    startWindowCenter = viewport.voi.windowCenter;\n    startWindowWidth = viewport.voi.windowWidth;\n\n    contentWindow.addEventListener('touchmove', touchMove);\n    contentWindow.addEventListener('touchend', touchEnd);\n    contentWindow.addEventListener('touchcancel', touchEnd);\n  }\n\n  function touchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n    }\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = event.touches[0].pageX - startPageX;\n    const dy: number = event.touches[0].pageY - startPageY;\n\n    onMove({\n      windowWidth: Math.max(startWindowWidth + dx, 1),\n      windowCenter: Math.max(startWindowCenter + dy, 1),\n    });\n  }\n\n  function touchEnd(event: TouchEvent) {\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  function mouseStart(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.pageX;\n    startPageY = event.pageY;\n    startWindowCenter = viewport.voi.windowCenter;\n    startWindowWidth = viewport.voi.windowWidth;\n\n    contentWindow.addEventListener('mousemove', mouseMove);\n    contentWindow.addEventListener('mouseup', mouseEnd);\n    element.addEventListener('mouseleave', mouseEnd);\n  }\n\n  function mouseMove(event: MouseEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const dx: number = event.pageX - startPageX;\n    const dy: number = event.pageY - startPageY;\n\n    onMove({\n      windowWidth: Math.max(startWindowWidth + dx, 1),\n      windowCenter: Math.max(startWindowCenter + dy, 1),\n    });\n  }\n\n  function mouseEnd(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  startTrigger();\n\n  return () => {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n  };\n}\n","interface PanInteractionParams {\n  element: HTMLElement;\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onMove: (translation: cornerstone.Vec2) => void;\n  onEnd: () => void;\n  contentWindow: Window;\n}\n\nexport function startPanInteraction({\n  element,\n  getCurrentViewport,\n  onMove,\n  onEnd,\n  contentWindow,\n}: PanInteractionParams): () => void {\n  let startPageX: number;\n  let startPageY: number;\n  let startTranslationX: number;\n  let startTranslationY: number;\n\n  function startTrigger() {\n    element.addEventListener('mousedown', mouseStart);\n    element.addEventListener('touchstart', touchStart);\n  }\n\n  function stopTrigger() {\n    element.removeEventListener('mousedown', mouseStart);\n    element.removeEventListener('touchstart', touchStart);\n  }\n\n  function touchStart(event: TouchEvent) {\n    if (event.targetTouches.length > 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n    }\n\n    if (event.targetTouches.length !== 1) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.touches[0].pageX;\n    startPageY = event.touches[0].pageY;\n    startTranslationX = viewport.translation.x;\n    startTranslationY = viewport.translation.y;\n\n    contentWindow.addEventListener('touchmove', touchMove);\n    contentWindow.addEventListener('touchend', touchEnd);\n    contentWindow.addEventListener('touchcancel', touchEnd);\n  }\n\n  function touchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 1 || event.changedTouches.length !== 1) {\n      contentWindow.removeEventListener('touchmove', touchMove);\n      contentWindow.removeEventListener('touchend', touchEnd);\n      contentWindow.removeEventListener('touchcancel', touchEnd);\n\n      startTrigger();\n    }\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = (event.touches[0].pageX - startPageX) / viewport.scale;\n    const dy: number = (event.touches[0].pageY - startPageY) / viewport.scale;\n\n    onMove({\n      x: startTranslationX + dx,\n      y: startTranslationY + dy,\n    });\n  }\n\n  function touchEnd(event: TouchEvent) {\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  function mouseStart(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    stopTrigger();\n\n    startPageX = event.pageX;\n    startPageY = event.pageY;\n    startTranslationX = viewport.translation.x;\n    startTranslationY = viewport.translation.y;\n\n    contentWindow.addEventListener('mousemove', mouseMove);\n    contentWindow.addEventListener('mouseup', mouseEnd);\n    element.addEventListener('mouseleave', mouseEnd);\n  }\n\n  function mouseMove(event: MouseEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const viewport = getCurrentViewport();\n    if (!viewport) return;\n\n    const dx: number = (event.pageX - startPageX) / viewport.scale;\n    const dy: number = (event.pageY - startPageY) / viewport.scale;\n\n    onMove({\n      x: startTranslationX + dx,\n      y: startTranslationY + dy,\n    });\n  }\n\n  function mouseEnd(event: MouseEvent) {\n    if (event.button !== 0) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    startTrigger();\n\n    onEnd();\n  }\n\n  startTrigger();\n\n  return () => {\n    element.removeEventListener('mousedown', mouseStart);\n    contentWindow.removeEventListener('mousemove', mouseMove);\n    contentWindow.removeEventListener('mouseup', mouseEnd);\n    element.removeEventListener('mouseleave', mouseEnd);\n\n    element.removeEventListener('touchstart', touchStart);\n    contentWindow.removeEventListener('touchmove', touchMove);\n    contentWindow.removeEventListener('touchend', touchEnd);\n    contentWindow.removeEventListener('touchcancel', touchEnd);\n  };\n}\n","import { easeQuadInOut } from 'd3-ease';\nimport { timer } from 'd3-timer';\n\ninterface ZoomInteractionParams {\n  element: HTMLElement;\n  getMinMaxScale: () => [number, number];\n  getCurrentViewport: () => cornerstone.Viewport | null;\n  onZoom: (patch: { translation: cornerstone.Vec2; scale: number }) => void;\n  contentWindow: Window;\n}\n\ntype Point = { x: number; y: number };\n\nexport function startZoomInteraction({\n  element,\n  getMinMaxScale,\n  getCurrentViewport,\n  onZoom,\n  contentWindow,\n}: ZoomInteractionParams): () => void {\n  function wheel(event: WheelEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    const [minScale, maxScale] = getMinMaxScale();\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    // deltaY는 scroll up의 경우 negative 수치로 오고,\n    // scroll down의 경우 positive 수치로 온다\n    // scale의 변환을 정상적인 방향으로 연산하기 위해서는 (scale - delta)로 방향을 전환해줘야 한다\n    const delta: number = event.deltaY > 0 ? 1 : -1;\n\n    const nextScale: number = Math.max(\n      minScale, // 최소 scale 미만으로 떨어지지 않도록 방지\n      Math.min(\n        maxScale, // 최대 scale 이상으로 올라가지 않도록 방지\n        currentViewport.scale - delta * 0.03, // scale을 delta 수치로 보정\n      ),\n    );\n\n    // min, max 등에 의해서 scale 변화가 없다면 viewport 반영을 취소\n    if (currentViewport.scale === nextScale) return;\n\n    // pageX, pageY 는 screen 기준 mouse pointer의 point\n    // bounding rect는 screen 기준 element의 rect\n    const { top, left, width, height } = element.getBoundingClientRect();\n\n    // left + width / 2 는 screen 기준 element의 center\n    // mouse pointer point - window scroll position 으로 scroll 기준 위치를 찾는다\n    // screen 기준 mouse pointer point - element의 center\n    // element center 부터의 mouse 상대 위치의 차를 계산하게 된다\n    // | ------ center ==== mouse - |   = 로 표시된 거리\n    const distanceX: number = event.pageX - contentWindow.scrollX - (left + width / 2);\n    const distanceY: number = event.pageY - contentWindow.scrollY - (top + height / 2);\n\n    // nextScale / currentViewport.scale 으로 scale 변화의 비율을 계산 (확대 시 >1, 축소 시 <1)\n    // 1 - scale 변환 비율로 확대 / 축소 시 size 변화에 따른 위치 변화의 폭을 찾는다\n    // 확대 시 x 위치는 <- 으로 팽창하게 되기 때문에 - 수치가 나오게 되고\n    // 축소 시 x 위치는 -> 으로 수축하게 되기 때문에 + 수치가 나오게 된다\n    // size 변화의 비율 * distanceX 로 이동해야 할 수치를 계산\n    const dx: number = (1 - nextScale / currentViewport.scale) * distanceX;\n    const dy: number = (1 - nextScale / currentViewport.scale) * distanceY;\n\n    onZoom({\n      // dx / nextScale 로 실제적인 이동 수치를 찾고\n      // currentViewport.translation.x + 를 통해서 기존 위치에 이동 수치를 적용한 값을 찾는다\n      translation: {\n        x: currentViewport.translation.x + dx / nextScale,\n        y: currentViewport.translation.y + dy / nextScale,\n      },\n      scale: nextScale,\n    });\n  }\n\n  let startPagePoints: [Point, Point];\n  let startPixelDistance: number;\n\n  let startViewportPoint: Point;\n  let startViewportScale: number;\n\n  function pinchStart(event: TouchEvent) {\n    if (event.targetTouches.length !== 2) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    startViewportScale = currentViewport.scale;\n    startViewportPoint = currentViewport.translation;\n\n    startPagePoints = [\n      { x: event.targetTouches[0].pageX, y: event.targetTouches[0].pageY },\n      { x: event.targetTouches[1].pageX, y: event.targetTouches[1].pageY },\n    ];\n\n    const a: number = Math.abs(startPagePoints[0].x - startPagePoints[1].x);\n    const b: number = Math.abs(startPagePoints[0].y - startPagePoints[1].y);\n    startPixelDistance = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\n    element.removeEventListener('touchstart', pinchStart);\n\n    element.addEventListener('touchmove', pinchMove);\n    element.addEventListener('touchend', pinchEnd);\n    element.addEventListener('touchcancel', pinchEnd);\n  }\n\n  function pinchMove(event: TouchEvent) {\n    if (event.targetTouches.length !== 2 || event.changedTouches.length !== 2) return;\n\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    event.preventDefault();\n\n    const pagePoints = [\n      { x: event.changedTouches[0].pageX, y: event.changedTouches[0].pageY },\n      { x: event.changedTouches[1].pageX, y: event.changedTouches[1].pageY },\n    ];\n    const a: number = Math.abs(pagePoints[0].x - pagePoints[1].x);\n    const b: number = Math.abs(pagePoints[0].y - pagePoints[1].y);\n    const pixelDistance: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\n    const nextScale: number = startViewportScale * (pixelDistance / startPixelDistance);\n\n    const dx: number =\n      ((pagePoints[0].x + pagePoints[1].x) / 2 - (startPagePoints[0].x + startPagePoints[1].x) / 2) / nextScale;\n    const dy: number =\n      ((pagePoints[0].y + pagePoints[1].y) / 2 - (startPagePoints[0].y + startPagePoints[1].y) / 2) / nextScale;\n\n    const nextViewportPoint: Point = {\n      x: startViewportPoint.x + dx,\n      y: startViewportPoint.y + dy,\n    };\n\n    onZoom({\n      translation: nextViewportPoint,\n      scale: nextScale,\n    });\n  }\n\n  function pinchEnd(event: TouchEvent) {\n    const currentViewport = getCurrentViewport();\n\n    if (!currentViewport) return;\n\n    const [minScale, maxScale] = getMinMaxScale();\n\n    const max = 500;\n\n    if (currentViewport.scale < minScale) {\n      const t = timer((elapsed) => {\n        const d = easeQuadInOut(elapsed / max);\n        if (elapsed > max) {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: minScale,\n          });\n          t.stop();\n        } else {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: currentViewport.scale + (minScale - currentViewport.scale) * d,\n          });\n        }\n      });\n    } else if (currentViewport.scale > maxScale) {\n      const t = timer((elapsed) => {\n        const d = easeQuadInOut(elapsed / max);\n        if (elapsed > max) {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: maxScale,\n          });\n          t.stop();\n        } else {\n          onZoom({\n            translation: currentViewport.translation,\n            scale: currentViewport.scale + (maxScale - currentViewport.scale) * d,\n          });\n        }\n      });\n    }\n\n    element.removeEventListener('touchmove', pinchMove);\n    element.removeEventListener('touchend', pinchEnd);\n    element.removeEventListener('touchcancel', pinchEnd);\n\n    element.addEventListener('touchstart', pinchStart);\n  }\n\n  element.addEventListener('wheel', wheel);\n  element.addEventListener('touchstart', pinchStart);\n\n  return () => {\n    element.removeEventListener('wheel', wheel);\n    element.removeEventListener('touchstart', pinchStart);\n\n    element.removeEventListener('touchmove', pinchMove);\n    element.removeEventListener('touchend', pinchEnd);\n    element.removeEventListener('touchcancel', pinchEnd);\n  };\n}\n","import pointInPolygon from 'point-in-polygon';\nimport { Contour, Point } from '../types';\n\nexport function hitTestContours<T extends Contour>(contours: T[], cursor: Point): T | null {\n  const result: T | undefined = contours.find(contour => {\n    return pointInPolygon(cursor, contour.polygon);\n  });\n\n  return result || null;\n}\n","import { css, keyframes } from 'styled-components';\n\nconst dash = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nexport const dashStroke = css`\n  stroke-dasharray: 10, 10;\n  stroke-dashoffset: 1000;\n  animation: ${dash} 10s linear infinite;\n`;\n","import { Contour, Point } from '../types';\n\nexport function hitTestCircles<T extends Contour>(contours: T[], cursor: Point): T | null {\n  const result: T | undefined = contours.find(contour => {\n    const [[cx, cy], [x1, y1]] = contour.polygon;\n    const [x2, y2] = cursor;\n\n    const r1: number = Math.sqrt(Math.pow(Math.abs(x1 - cx), 2) + Math.pow(Math.abs(y1 - cy), 2));\n    const r2: number = Math.sqrt(Math.pow(Math.abs(x2 - cx), 2) + Math.pow(Math.abs(y2 - cy), 2));\n\n    return r2 <= r1;\n  });\n\n  return result || null;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\ninterface Params {\n  deferred?: {\n    resolve: (xhrResponse: any) => void;\n    reject: (error: Error) => void;\n  };\n\n  url?: string;\n  imageId?: string;\n}\n\nexport const wadoImageLoaderXHRLoader = (getCancel?: (cancel: () => void) => void) => (\n  url: string,\n  imageId: string,\n  headers: { [key: string]: string } = {},\n  params: Params = {},\n) => {\n  const { cornerstone } = cornerstoneWADOImageLoader.external;\n  const xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  return new Promise<any>((resolve: (xhrResponse: any) => void, reject: (error: Error) => void) => {\n    xhr.open('get', url, true);\n    xhr.responseType = 'arraybuffer';\n\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve,\n      reject,\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    function cancel() {\n      try {\n        xhr.abort();\n      } catch (error) {}\n    }\n\n    if (typeof getCancel === 'function') {\n      getCancel(cancel);\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        resolve(xhr.response);\n      }\n    };\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = () => {\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      if (cornerstone) {\n        cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadstart', eventData);\n      }\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = () => {\n      const eventData = {\n        url,\n        imageId,\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadend', eventData);\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n      let percentComplete;\n\n      if (lengthComputable) {\n        percentComplete = Math.round((loaded / total) * 100);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n        loaded,\n        total,\n        percentComplete,\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadprogress', eventData);\n    };\n\n    xhr.send();\n  });\n};\n","let installed: boolean = false;\n\nexport function installWADOImageLoader() {\n  if (installed) return;\n  installed = true;\n\n  cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n  cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\n  // TODO iPad에서 제대로 안되는 이유 확인\n  //cornerstoneWADOImageLoader.webWorkerManager.initialize({\n  //maxWebWorkers: navigator.hardwareConcurrency || 4,\n  //startWebWorkersOnDemand: false,\n  //taskConfiguration: {\n  //  decodeTask: {\n  //    initializeCodecsOnStartup: true,\n  //  },\n  //},\n  //});\n}\n","export function unloadImage(imageId: string | string[] | null) {\n  function unload(id: string) {\n    if (/^wadouri:/.test(id)) {\n      cornerstoneWADOImageLoader?.wadouri?.dataSetCacheManager?.unload(id);\n    }\n  }\n\n  if (Array.isArray(imageId)) {\n    imageId.forEach(id => unload(id));\n  } else if (typeof imageId === 'string') {\n    unload(imageId);\n  }\n}\n\n/** @deprecated use instead of unloadImage() */\nexport const unloadWADOImage = unloadImage;\n","import React, { Component } from 'react';\nimport { Unsubscribable } from 'rxjs';\nimport { FrameConsumer } from '../context/frame';\nimport { InsightViewerHostProps } from '../hooks/useInsightViewerSync';\nimport { CornerstoneImage } from '../image/types';\nimport { CornerstoneRenderData, ViewportTransform, ViewportTransformParams } from '../types';\nimport { startAdjustInteraction } from './interactions/startAdjustInteraction';\nimport { startPanInteraction } from './interactions/startPanInteraction';\nimport { startZoomInteraction } from './interactions/startZoomInteraction';\n\nexport interface InsightViewerProps extends InsightViewerHostProps {\n  width: number;\n  height: number;\n\n  image: CornerstoneImage;\n\n  /**\n   * Pan Action (Mouse Drag)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Pan 기능을 끈다\n   */\n  pan: boolean | HTMLElement | null;\n\n  /**\n   * Adjust Action (Mouse Drag)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Adjust 기능을 끈다\n   */\n  adjust: boolean | HTMLElement | null;\n\n  /**\n   * Zoom Action (Mouse Wheel)\n   *\n   * - `true` 로 입력되는 경우 자체 Element를 사용해서 Event를 처리한다\n   * - `HTMLElement` 로 입력되는 경우 해당 Element를 사용해서 Event를 처리한다\n   * - `false | null` 로 입력되는 경우 Wheel 기능을 끈다\n   */\n  zoom: boolean | HTMLElement | null;\n\n  /** Invert Color Image */\n  invert: boolean;\n\n  /** Flip Image */\n  flip: boolean;\n\n  /**\n   * Date.now() 로 입력하면 된다.\n   * 값이 변경되는 경우 Pan, Adjust, Zoom 으로 변경된 상태들이 초기화 된다.\n   */\n  resetTime: number;\n\n  /**\n   * Image가 최초 그려지는 순간 변경한다\n   */\n  defaultViewportTransforms?: ViewportTransform[];\n}\n\nconst maxScale: number = 3;\n\n/** @deprecated use <CornerstoneViewer> instead */\nexport class InsightViewer extends Component<InsightViewerProps, {}> {\n  // ref={}에 의해서 componentDidMount() 이전에 반드시 들어온다\n  private element!: HTMLDivElement;\n\n  // imageLoaded 이후 지연되어 들어오게 된다\n  // setViewport, updateViewport 에 의해서만 접근한다\n  private currentViewport: cornerstone.Viewport | null = null;\n  // props.image.subscribe()를 통해서 지연되어 들어오게 된다\n  private currentImage: cornerstone.Image | null = null;\n\n  // mouse interaction에서 사용한다\n  private teardownPanInteraction: (() => void) | null = null;\n  private teardownAdjustInteraction: (() => void) | null = null;\n  private teardownZoomInteraction: (() => void) | null = null;\n\n  // rx subscriptions\n  private imageSubscription: Unsubscribable | null = null;\n\n  private needImageInitialize: boolean = true;\n\n  private contentWindow: Window = window;\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <div\n          ref={this.elementRef}\n          style={{\n            width: this.props.width,\n            height: this.props.height,\n          }}\n        />\n      </>\n    );\n  }\n\n  // ---------------------------------------------\n  // life cycle\n  // ---------------------------------------------\n  elementRef = (element: HTMLDivElement) => {\n    this.element = element;\n\n    if (!element) return;\n\n    if (this.props.pan === true) {\n      this.startPanInteraction(this.props.pan);\n    }\n\n    if (this.props.adjust === true) {\n      this.startAdjustInteraction(this.props.adjust);\n    }\n\n    if (this.props.zoom === true) {\n      this.startZoomInteraction(this.props.zoom);\n    }\n  };\n\n  componentDidMount() {\n    // cornerstone의 imagernderered event를 받는다\n    // image가 render 될때마다 context로 enabledElement를 배포해주기 위해 필요하다\n    this.element.addEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n\n    this.setCornerstoneImage(this.props.image);\n  }\n\n  initImage = (image: cornerstone.Image) => {\n    cornerstone.disable(this.element);\n    cornerstone.enable(this.element, { renderer: 'webgl' });\n\n    let defaultViewport = this.getDefaultViewport(image, this.element);\n\n    if (!defaultViewport) {\n      throw new Error('defaultViewport는 null일 수 없다.');\n    }\n\n    if (Array.isArray(this.props.defaultViewportTransforms)) {\n      const minScale: number = defaultViewport.scale;\n\n      for (const transform of this.props.defaultViewportTransforms) {\n        const patch = transform({\n          element: this.element,\n          currentViewport: defaultViewport,\n          minScale,\n          maxScale,\n        });\n\n        defaultViewport = {\n          ...defaultViewport,\n          ...patch,\n        };\n      }\n    }\n\n    defaultViewport = {\n      ...defaultViewport,\n      hflip: this.props.flip,\n      invert: this.props.invert,\n    };\n\n    cornerstone.displayImage(this.element, image, defaultViewport);\n\n    this.setImage(image);\n    this.setViewport(defaultViewport);\n    this.startPanInteraction(this.props.pan);\n    this.startAdjustInteraction(this.props.adjust);\n    this.startZoomInteraction(this.props.zoom);\n  };\n\n  componentWillUnmount() {\n    this.element.removeEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n    cornerstone.disable(this.element);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n    }\n\n    if (this.teardownPanInteraction) {\n      this.teardownPanInteraction();\n    }\n\n    if (this.teardownAdjustInteraction) {\n      this.teardownAdjustInteraction();\n    }\n\n    if (this.teardownZoomInteraction) {\n      this.teardownZoomInteraction();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<InsightViewerProps>) {\n    const { width, height, flip, invert, pan, adjust, zoom, resetTime, image } = this.props;\n\n    const defaultViewport: cornerstone.Viewport | null = this.getDefaultViewport(this.currentImage, this.element);\n\n    // 선택된 control 상태에 따라 event를 해제/등록 해준다\n    if (prevProps.pan !== pan) {\n      this.startPanInteraction(pan);\n    }\n\n    if (prevProps.adjust !== adjust) {\n      this.startAdjustInteraction(adjust);\n    }\n\n    if (prevProps.zoom !== zoom) {\n      this.startZoomInteraction(zoom);\n    }\n\n    if (defaultViewport) {\n      if (prevProps.resetTime !== resetTime) {\n        // resetTime이 새로 갱신되면 viewport를 defaultViewport를 사용해서 초기화 해준다\n        this.updateCurrentViewport({\n          ...defaultViewport,\n          //...this.defaultViewport,\n          hflip: flip,\n          invert: defaultViewport.invert ? !invert : invert,\n        });\n      } else {\n        // flip, invert는 resetTime의 부분 집합이기 때문에\n        // resetTime에 의한 갱신이 없는 경우에만 적용한다\n        if (prevProps.flip !== flip || prevProps.invert !== invert) {\n          this.updateCurrentViewport({\n            hflip: flip,\n            invert: defaultViewport.invert ? !invert : invert,\n          });\n        }\n      }\n    }\n\n    if (prevProps.width !== width || prevProps.height !== height) {\n      if (this.currentImage) {\n        // container size가 변경되는 경우 cornerstone resize() 처리를 해준다\n        cornerstone.resize(this.element);\n\n        const viewport = cornerstone.getViewport(this.element);\n\n        if (viewport) {\n          this.setViewport(viewport);\n        } else {\n          throw new Error('getViewport() is returns not a Viewport');\n        }\n      }\n    }\n\n    if (prevProps.image !== image) {\n      this.setCornerstoneImage(image);\n    }\n  }\n\n  subscribeImage = (image: cornerstone.Image | null) => {\n    if (!image) return;\n\n    image.voiLUT = undefined; // remove VOI LUT for 'adjust' functionality\n\n    // props.image의 변경 또는 초기화로 인한 완전한 초기화가 필요할때\n    if (this.needImageInitialize) {\n      this.needImageInitialize = false;\n      this.initImage(image);\n    }\n    // 단순 series image의 변경일 경우에는 화면 표시만 바꿔준다\n    else if (this.currentViewport) {\n      cornerstone.displayImage(this.element, image, this.currentViewport);\n    }\n    // 이건 실행되면 안됨\n    else {\n      throw new Error('어떤 상황인지 확인 필요!!!');\n    }\n  };\n\n  onImageRenderered = (event: cornerstone.CornerstoneEvent) => {\n    const eventData: cornerstone.CornerstoneEventData | undefined = event.detail;\n    if (\n      eventData &&\n      eventData.canvasContext &&\n      eventData.element &&\n      eventData.enabledElement &&\n      eventData.image &&\n      typeof eventData.renderTimeInMs === 'number' &&\n      eventData.viewport\n    ) {\n      this.currentViewport = eventData.viewport;\n      this.props.updateCornerstoneRenderData(eventData as CornerstoneRenderData);\n    } else {\n      console.error('CornerstoneEventData에 없는 정보가 있다???', eventData);\n    }\n  };\n\n  // ---------------------------------------------\n  // event handlers\n  // ---------------------------------------------\n  startPanInteraction = (pan: boolean | HTMLElement | null) => {\n    if (this.teardownPanInteraction) {\n      this.teardownPanInteraction();\n    }\n\n    const element: HTMLElement | null =\n      pan instanceof this.contentWindow['HTMLElement'] ? (pan as HTMLElement) : pan === true ? this.element : null;\n\n    if (element) {\n      this.teardownPanInteraction = startPanInteraction({\n        element,\n        getCurrentViewport: () => this.currentViewport!,\n        onMove: (translation: cornerstone.Vec2) => this.updateCurrentViewport({ translation }),\n        onEnd: () => {},\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  startAdjustInteraction = (adjust: boolean | HTMLElement | null) => {\n    if (this.teardownAdjustInteraction) {\n      this.teardownAdjustInteraction();\n    }\n\n    const element: HTMLElement | null =\n      adjust instanceof this.contentWindow['HTMLElement']\n        ? (adjust as HTMLElement)\n        : adjust === true\n        ? this.element\n        : null;\n\n    if (element) {\n      this.teardownAdjustInteraction = startAdjustInteraction({\n        element,\n        getCurrentViewport: () => this.currentViewport!,\n        onMove: (voi: cornerstone.VOI) => this.updateCurrentViewport({ voi }),\n        onEnd: () => {},\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  startZoomInteraction = (zoom: boolean | HTMLElement | null) => {\n    if (this.teardownZoomInteraction) {\n      this.teardownZoomInteraction();\n    }\n\n    const element: HTMLElement | null =\n      zoom instanceof this.contentWindow['HTMLElement'] ? (zoom as HTMLElement) : zoom === true ? this.element : null;\n\n    if (element) {\n      this.teardownZoomInteraction = startZoomInteraction({\n        element,\n        getMinMaxScale: () => [this.getMinScale(), this.getMaxScale()],\n        getCurrentViewport: () => this.currentViewport!,\n        onZoom: (patch) => this.updateCurrentViewport(patch),\n        contentWindow: this.contentWindow,\n      });\n    }\n  };\n\n  // ---------------------------------------------\n  // getters\n  // ---------------------------------------------\n  getDefaultViewport = (image: cornerstone.Image | null, element: HTMLElement | null): cornerstone.Viewport | null => {\n    if (!image || !element) return null;\n    return cornerstone.getDefaultViewportForImage(element, image);\n  };\n\n  getMinScale = () => {\n    const viewport = this.getDefaultViewport(this.currentImage, this.element);\n\n    if (!viewport) {\n      throw new Error('viewport가 정상적으로 와야만 한다');\n    }\n\n    return viewport.scale;\n  };\n\n  getMaxScale = () => {\n    return maxScale;\n  };\n\n  // ---------------------------------------------\n  // setters\n  // ---------------------------------------------\n  updateViewport = (patch: Partial<cornerstone.Viewport>) => {\n    if (this.currentViewport) {\n      this.updateCurrentViewport(patch);\n    }\n  };\n\n  getViewportTransformParams = (): ViewportTransformParams => {\n    return {\n      element: this.element,\n      minScale: this.getMinScale(),\n      maxScale: this.getMaxScale(),\n      currentViewport: this.currentViewport,\n    };\n  };\n\n  private setCornerstoneImage = (image: CornerstoneImage) => {\n    this.needImageInitialize = true;\n\n    this.setImage(null);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n      this.imageSubscription = null;\n    }\n\n    this.imageSubscription = image.image.subscribe(this.subscribeImage);\n  };\n\n  private setImage = (image: cornerstone.Image | null) => {\n    this.currentImage = image;\n  };\n\n  private setViewport = (viewport: cornerstone.Viewport) => {\n    this.currentViewport = viewport;\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n\n  private updateCurrentViewport = (\n    update: Partial<cornerstone.Viewport> | ((viewport: cornerstone.Viewport) => Partial<cornerstone.Viewport>),\n  ) => {\n    if (!this.currentViewport) {\n      throw new Error('viewport가 없는 상태에서 실행되면 안된다');\n    }\n\n    const patch: Partial<cornerstone.Viewport> = typeof update === 'function' ? update(this.currentViewport) : update;\n\n    this.currentViewport = {\n      ...this.currentViewport,\n      ...patch,\n    };\n\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n}\n","import polylabel from 'polylabel';\nimport React, { Component, createRef, CSSProperties, Fragment, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface ContourViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** <svg className={}> */\n  className?: string;\n\n  /** <svg style={}> */\n  style?: CSSProperties;\n\n  /**\n   * Line에 외곽을 그려준다\n   * Line을 두 개 그려서 border를 표현하기 때문에,성능에 민감한 상황인 경우 비활성 시킬 수 있다.\n   */\n  border?: boolean;\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): Point[] {\n  return polygon.map(([x, y]) => {\n    const p = cornerstone.pixelToCanvas(element, { x, y });\n    return [p.x, p.y];\n  });\n}\n\nexport class ContourViewerBase<T extends Contour> extends Component<ContourViewerProps<T>, {}> {\n  static defaultProps: Pick<ContourViewerProps<Contour>, 'border'> = {\n    border: true,\n  };\n\n  private svgRef: RefObject<SVGSVGElement> = createRef();\n\n  render() {\n    const { cornerstoneRenderData, contours, focusedContour } = this.props;\n\n    return (\n      <svg\n        ref={this.svgRef}\n        className={this.props.className}\n        style={this.props.style}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {contours.length > 0 &&\n          cornerstoneRenderData &&\n          cornerstoneRenderData.element &&\n          contours.map(contour => {\n            const polygon: number[][] = toLocal(cornerstoneRenderData.element, contour.polygon);\n            const labelCenter: number[] = polylabel([polygon], 1);\n            const focused: boolean = contour === focusedContour;\n            const dataAttrs: { [attr: string]: string } = contour.dataAttrs || {};\n\n            return (\n              <Fragment key={'polygon' + contour.id}>\n                {this.props.border === true && (\n                  <polygon\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    points={polygon.map(([x, y]) => `${x},${y}`).join(' ')}\n                  />\n                )}\n                <polygon\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  points={polygon.map(([x, y]) => `${x},${y}`).join(' ')}\n                />\n                {this.props.border === true && (\n                  <text\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                    x={labelCenter[0]}\n                    y={labelCenter[1]}\n                  >\n                    {contour.label\n                      ? typeof contour.label === 'function'\n                        ? contour.label(contour)\n                        : contour.label\n                      : contour.id}\n                  </text>\n                )}\n                <text\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                  x={labelCenter[0]}\n                  y={labelCenter[1]}\n                >\n                  {contour.label\n                    ? typeof contour.label === 'function'\n                      ? contour.label(contour)\n                      : contour.label\n                    : contour.id}\n                </text>\n              </Fragment>\n            );\n          })}\n      </svg>\n    );\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourViewer: new <T extends Contour>() => ContourViewerBase<T> = styled(ContourViewerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  user-select: none;\n\n  --color: #ffffff;\n  --focused-color: rgb(255, 194, 17);\n  --stroke-width: 3px;\n  --focused-stroke-width: 6px;\n  --fill-color: rgba(0, 0, 0, 0.2);\n  --focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  > polygon {\n    stroke-width: var(--contour-viewer-stroke-width, var(--stroke-width));\n    stroke: var(--contour-viewer-color, var(--color));\n    fill: var(--contour-viewer-fill-color, var(--fill-color));\n    transition: stroke 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      stroke-width: var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width));\n      stroke: var(--contour-viewer-focused-color, var(--focused-color));\n      fill: var(--contour-viewer-focused-fill-color, var(--focused-fill-color));\n    }\n\n    &[data-border] {\n      stroke-width: calc(var(--contour-viewer-stroke-width, var(--stroke-width)) + 2px);\n      stroke: #000000;\n      fill: transparent;\n\n      &[data-focused] {\n        stroke-width: calc(var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width)) + 2px);\n        stroke: #000000;\n      }\n    }\n  }\n\n  > text {\n    fill: var(--contour-viewer-color, var(--color));\n    font-family: proximanova, noto_sans, sans-serif;\n    font-weight: 600;\n    text-anchor: middle;\n    dominant-baseline: central;\n    transition: fill 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      fill: var(--contour-viewer-focused-color, var(--focused-color));\n    }\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n      fill: transparent;\n    }\n  }\n` as any;\n\n/**\n * @deprecated use ContourViewer instead\n */\nexport const UserContourViewer = ContourViewer;\n","import React, { Component, CSSProperties } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestContours } from '../geom/hitTestContours';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { dashStroke } from './animation/dashStroke';\n\nexport interface ContourDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * 그리기 기능 활성화 여부\n   *\n   * <InsightViewer> 와 마찬가지로 HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  draw: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd: (polygon: Point[], event: MouseEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove: (contour: T) => void;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /** 그리는 과정에서 Line에 표현되는 Animation을 비활성 시킬 수 있다 */\n  animateStroke?: boolean;\n}\n\ninterface ContourDrawerState {\n  polygon: Point[];\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): string {\n  return polygon\n    .map(([x, y]) => {\n      const p = cornerstone.pixelToCanvas(element, { x, y });\n      return p.x + ',' + p.y;\n    })\n    .join(' ');\n}\n\nexport class ContourDrawerBase<T extends Contour> extends Component<ContourDrawerProps<T>, ContourDrawerState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private preventClickEvent: boolean = false;\n  private startX: number = 0;\n  private startY: number = 0;\n\n  private contentWindow: Window = window;\n\n  constructor(props: ContourDrawerProps<T>) {\n    super(props);\n\n    this.state = {\n      polygon: [],\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n          style={this.props.style}\n        >\n          {this.props.cornerstoneRenderData && this.state.polygon && this.state.polygon.length > 0 && (\n            <>\n              <polyline points={toLocal(this.props.cornerstoneRenderData.element, this.state.polygon)} />\n              {this.props.animateStroke !== false && (\n                <polyline\n                  points={toLocal(this.props.cornerstoneRenderData.element, this.state.polygon)}\n                  data-highlight=\"highlight\"\n                />\n              )}\n            </>\n          )}\n        </svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateDrawEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<ContourDrawerProps<T>>) {\n    if (prevProps.draw !== this.props.draw) {\n      if (this.element) {\n        this.deactivateInitialEvents();\n        this.deactivateDrawEvents();\n      }\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateDrawEvents();\n    }\n  }\n\n  getElement = ({ draw }: Readonly<ContourDrawerProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return draw instanceof this.contentWindow['HTMLElement'] ? (draw as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ draw }: Readonly<ContourDrawerProps<T>>) => {\n    return draw instanceof this.contentWindow['HTMLElement'] || draw === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.addEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.addEventListener('click', this.onMouseClickToRemove);\n  };\n\n  deactivateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.removeEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.removeEventListener('click', this.onMouseClickToRemove);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestContours<T>(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n\n  onMouseClickToRemove = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.focused || this.preventClickEvent) return;\n\n    this.props.onRemove(this.focused);\n  };\n\n  // ---------------------------------------------\n  // draw events\n  // ---------------------------------------------\n  onMouseDownToStartDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n\n    this.deactivateInitialEvents();\n    this.activateDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState(prevState => ({\n      ...prevState,\n      polygon: [[x, y]],\n    }));\n  };\n\n  activateDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.addEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.addEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelDraw);\n  };\n\n  deactivateDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.removeEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.removeEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelDraw);\n  };\n\n  onMouseMoveToDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(Math.abs(event.pageX - this.startX), Math.abs(event.pageY - this.startY)) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState(prevState => ({\n      ...prevState,\n      polygon: [...prevState.polygon, [x, y]],\n    }));\n  };\n\n  onMouseUpToEndDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.deactivateDrawEvents();\n    this.activateInitialEvents();\n\n    this.props.onAdd(this.state.polygon, event);\n\n    this.setState(prevState => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n\n  onMouseLeaveToCancelDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.cancelDraw();\n  };\n\n  onKeyDownToCancelDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.stopPropagation();\n\n      this.cancelDraw();\n    }\n  };\n\n  cancelDraw = () => {\n    this.deactivateDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState(prevState => ({\n      ...prevState,\n      polygon: [],\n    }));\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourDrawer: new <T extends Contour>() => ContourDrawerBase<T> = styled(ContourDrawerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  --color: rgb(255, 224, 0);\n  --stroke-width: 4px;\n  --fill-color: rgba(255, 224, 0, 0.2);\n\n  > polyline:first-child {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: var(--contour-drawer-fill-color, var(--fill-color));\n  }\n\n  > polyline[data-highlight] {\n    stroke: #ffffff;\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: transparent;\n    ${dashStroke}\n  }\n` as any;\n\n/**\n * @deprecated use ContourDrawer instead\n */\nexport const UserContourDrawer = ContourDrawer;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestContours } from '../geom/hitTestContours';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface ContourHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * Hover 기능 활성화 여부\n   * <InsightViewer> 와 마찬가지로 HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다.\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n\ninterface ContourHoverState {\n  polygon: Point[];\n}\n\nexport class ContourHoverBase<T extends Contour> extends Component<ContourHoverProps<T>, ContourHoverState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private contentWindow: Window = window;\n\n  constructor(props: ContourHoverProps<T>) {\n    super(props);\n\n    this.state = {\n      polygon: [],\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n        ></svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<ContourHoverProps<T>>) {\n    if (prevProps.hover !== this.props.hover) {\n      if (this.element) this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) this.deactivateInitialEvents();\n  }\n\n  getElement = ({ hover }: Readonly<ContourHoverProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return hover instanceof this.contentWindow['HTMLElement'] ? (hover as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ hover }: Readonly<ContourHoverProps<T>>) => {\n    return hover instanceof this.contentWindow['HTMLElement'] || hover === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (this.element) this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  deactivateInitialEvents = () => {\n    if (this.element) this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestContours<T>(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const ContourHover: new <T extends Contour>() => ContourHoverBase<T> = styled(ContourHoverBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n` as any;\n","import styled from 'styled-components';\n\nexport const InsightViewerContainer = styled.div<{ width: number; height: number }>`\n  background-color: #000000;\n  position: relative;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n`;\n\nexport const LeftTopHolder = styled.div`\n  position: absolute;\n  left: 5px;\n  top: 5px;\n`;\n\nexport const LeftBottomHolder = styled.div`\n  position: absolute;\n  left: 5px;\n  bottom: 5px;\n`;\n\nexport const RightTopHolder = styled.div`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const RightBottomHolder = styled.div`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n`;\n","import { CircularProgress } from '@material-ui/core';\nimport React, {\n  Context,\n  createContext,\n  CSSProperties,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { useImageProgress } from '../hooks/useImageProgress';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface ProgressViewerProps {\n  width: number;\n  height: number;\n  inProgress?: boolean;\n  image?: CornerstoneImage | null | undefined;\n}\n\nlet count: number = 0;\n\nexport function ProgressViewer({ width, height, inProgress, image }: ProgressViewerProps) {\n  const id: number = useMemo(() => ++count, []);\n  const imageProgress = useImageProgress(image);\n  const { setProgress, unsetProgress } = useProgressCollection();\n\n  useEffect(() => {\n    if (inProgress === true || typeof imageProgress === 'number') {\n      setProgress(id, imageProgress || 0);\n    } else {\n      unsetProgress(id);\n    }\n  }, [id, imageProgress, inProgress, setProgress, unsetProgress]);\n\n  return (\n    <>\n      {(inProgress === true || typeof imageProgress === 'number') && (\n        <Div\n          style={{\n            width,\n            height,\n            backgroundColor: 'rgba(0, 0, 0, 0.3)',\n          }}\n        >\n          <CircularProgress size={120} />\n        </Div>\n      )}\n      {typeof imageProgress === 'number' && (\n        <Div\n          style={{\n            width,\n            height,\n          }}\n        >\n          <CircularProgress size={100} variant=\"static\" value={imageProgress * 100} />\n        </Div>\n      )}\n    </>\n  );\n}\n\ninterface ProgressCollectorProps {\n  children: ReactNode;\n}\n\ninterface ProgressCollection {\n  inProgress: boolean;\n  setProgress: (id: number, progress: number) => void;\n  unsetProgress: (id: number) => void;\n}\n\nconst ProgressCollectionContext: Context<ProgressCollection> = createContext<ProgressCollection>({\n  inProgress: false,\n\n  setProgress: () => {\n    // DO NOTHING\n  },\n  unsetProgress: () => {\n    // DO NOTHING\n  },\n});\n\nexport function ProgressCollector({ children }: ProgressCollectorProps) {\n  const [collection, setCollection] = useState<Map<number, number>>(() => new Map());\n\n  const setProgress = useCallback(\n    (id: number, progress: number) => {\n      setCollection(prevCollection => {\n        const nextCollection: Map<number, number> = new Map(prevCollection);\n        nextCollection.set(id, progress);\n        return nextCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const unsetProgress = useCallback(\n    (id: number) => {\n      setCollection(prevCollection => {\n        if (prevCollection.has(id)) {\n          const nextCollection: Map<number, number> = new Map(prevCollection);\n          nextCollection.delete(id);\n          return nextCollection;\n        }\n        return prevCollection;\n      });\n    },\n    [setCollection],\n  );\n\n  const inProgress: boolean = useMemo(() => {\n    return collection.size > 0;\n  }, [collection]);\n\n  const state: ProgressCollection = useMemo<ProgressCollection>(() => {\n    return {\n      inProgress,\n      setProgress,\n      unsetProgress,\n    };\n  }, [inProgress, setProgress, unsetProgress]);\n\n  return <ProgressCollectionContext.Provider value={state}>{children}</ProgressCollectionContext.Provider>;\n}\n\nfunction useProgressCollection(): ProgressCollection {\n  return useContext(ProgressCollectionContext);\n}\n\nexport function useProgressViewersActivity(): boolean {\n  return useContext(ProgressCollectionContext).inProgress;\n}\n\nexport function useContainerStyleOfProgressViewersInactivity(\n  style: CSSProperties = { pointerEvents: 'none' },\n): CSSProperties {\n  const { inProgress } = useContext(ProgressCollectionContext);\n  return inProgress ? style : {};\n}\n\nconst Div = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { Component, createRef, CSSProperties, Fragment, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface CircleViewerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** <svg className={}> */\n  className?: string;\n\n  /** <svg style={}> */\n  style?: CSSProperties;\n\n  /**\n   * Line에 외곽을 그려준다\n   * Line을 두 개 그려서 border를 표현하기 때문에,성능에 민감한 상황인 경우 비활성 시킬 수 있다.\n   */\n  border?: boolean;\n}\n\nfunction toLocal(element: HTMLElement, polygon: Point[]): { cx: number; cy: number; r: number } {\n  const { x: x1, y: y1 } = cornerstone.pixelToCanvas(element, { x: polygon[0][0], y: polygon[0][1] });\n  const { x: x2, y: y2 } = cornerstone.pixelToCanvas(element, { x: polygon[1][0], y: polygon[1][1] });\n  const r: number = Math.sqrt(Math.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2));\n\n  return {\n    cx: x1,\n    cy: y1,\n    r,\n  };\n}\n\nexport class CircleViewerBase<T extends Contour> extends Component<CircleViewerProps<T>, {}> {\n  static defaultProps: Pick<CircleViewerProps<Contour>, 'border'> = {\n    border: true,\n  };\n\n  private svgRef: RefObject<SVGSVGElement> = createRef();\n\n  render() {\n    const { cornerstoneRenderData, contours, focusedContour } = this.props;\n\n    return (\n      <svg\n        ref={this.svgRef}\n        className={this.props.className}\n        style={this.props.style}\n        width={this.props.width}\n        height={this.props.height}\n      >\n        {contours.length > 0 &&\n          cornerstoneRenderData &&\n          cornerstoneRenderData.element &&\n          contours.map(contour => {\n            const { cx, cy, r } = toLocal(cornerstoneRenderData.element, contour.polygon);\n            const focused: boolean = contour === focusedContour;\n            const dataAttrs: { [attr: string]: string } = contour.dataAttrs || {};\n\n            return (\n              <Fragment key={'circle' + contour.id}>\n                {this.props.border === true && (\n                  <circle\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    cx={cx}\n                    cy={cy}\n                    r={r}\n                  />\n                )}\n                <circle {...dataAttrs} data-id={contour.id} data-focused={focused || undefined} cx={cx} cy={cy} r={r} />\n                {this.props.border === true && (\n                  <text\n                    {...dataAttrs}\n                    data-border=\"border\"\n                    data-id={contour.id}\n                    data-focused={focused || undefined}\n                    fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                    x={cx}\n                    y={cy}\n                  >\n                    {contour.label\n                      ? typeof contour.label === 'function'\n                        ? contour.label(contour)\n                        : contour.label\n                      : contour.id}\n                  </text>\n                )}\n                <text\n                  {...dataAttrs}\n                  data-id={contour.id}\n                  data-focused={focused || undefined}\n                  fontSize={14 * Math.max(1, cornerstoneRenderData.viewport.scale)}\n                  x={cx}\n                  y={cy}\n                >\n                  {contour.label\n                    ? typeof contour.label === 'function'\n                      ? contour.label(contour)\n                      : contour.label\n                    : contour.id}\n                </text>\n              </Fragment>\n            );\n          })}\n      </svg>\n    );\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleViewer: new <T extends Contour>() => CircleViewerBase<T> = styled(CircleViewerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  user-select: none;\n\n  --color: #ffffff;\n  --focused-color: rgb(255, 194, 17);\n  --stroke-width: 3px;\n  --focused-stroke-width: 6px;\n  --fill-color: rgba(0, 0, 0, 0.2);\n  --focused-fill-color: rgba(0, 0, 0, 0.4);\n\n  > circle {\n    stroke-width: var(--contour-viewer-stroke-width, var(--stroke-width));\n    stroke: var(--contour-viewer-color, var(--color));\n    fill: var(--contour-viewer-fill-color, var(--fill-color));\n    transition: stroke 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      stroke-width: var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width));\n      stroke: var(--contour-viewer-focused-color, var(--focused-color));\n      fill: var(--contour-viewer-focused-fill-color, var(--focused-fill-color));\n    }\n\n    &[data-border] {\n      stroke-width: calc(var(--contour-viewer-stroke-width, var(--stroke-width)) + 2px);\n      stroke: #000000;\n      fill: transparent;\n\n      &[data-focused] {\n        stroke-width: calc(var(--contour-viewer-focused-stroke-width, var(--focused-stroke-width)) + 2px);\n        stroke: #000000;\n      }\n    }\n  }\n\n  > text {\n    fill: var(--contour-viewer-color, var(--color));\n    font-family: proximanova, noto_sans, sans-serif;\n    font-weight: 600;\n    text-anchor: middle;\n    dominant-baseline: central;\n    transition: fill 120ms ease-out, stroke-width 120ms ease-out;\n\n    &[data-focused] {\n      fill: var(--contour-viewer-focused-color, var(--focused-color));\n    }\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n      fill: transparent;\n    }\n  }\n` as any;\n\n/**\n * @deprecated use CircleViewer instead\n */\nexport const UserCircleViewer = CircleViewer;\n","import React, { Component, CSSProperties } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestCircles } from '../geom/hitTestCircles';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { dashStroke } from './animation/dashStroke';\n\nexport interface CircleDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * 그리기 기능 활성화 여부\n   *\n   * <InsightViewer> 와 마찬가지로 HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  draw: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd: (polygon: Point[], event: MouseEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove: (contour: T) => void;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /** 그리는 과정에서 Line에 표현되는 Animation을 비활성 시킬 수 있다 */\n  animateStroke?: boolean;\n}\n\ninterface CircleDrawerState {\n  p1: Point | null;\n  p2: Point | null;\n}\n\nexport class CircleDrawerBase<T extends Contour> extends Component<CircleDrawerProps<T>, CircleDrawerState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n  private preventClickEvent: boolean = false;\n  private startX: number = 0;\n  private startY: number = 0;\n\n  private contentWindow: Window = window;\n\n  constructor(props: CircleDrawerProps<T>) {\n    super(props);\n\n    this.state = {\n      p1: null,\n      p2: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n          style={this.props.style}\n        >\n          {this.props.cornerstoneRenderData &&\n            this.state.p1 &&\n            this.state.p2 &&\n            (() => {\n              const { x: x1, y: y1 } = cornerstone.pixelToCanvas(this.props.cornerstoneRenderData.element, {\n                x: this.state.p1[0],\n                y: this.state.p1[1],\n              });\n              const { x: x2, y: y2 } = cornerstone.pixelToCanvas(this.props.cornerstoneRenderData.element, {\n                x: this.state.p2[0],\n                y: this.state.p2[1],\n              });\n              const r: number = Math.sqrt(Math.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2));\n\n              return (\n                <>\n                  <circle cx={x1} cy={y1} r={r} />\n                  {this.props.animateStroke !== false && <circle cx={x1} cy={y1} r={r} data-highlight=\"highlight\" />}\n                  <line x1={x1} y1={y1} x2={x2} y2={y2} />\n                </>\n              );\n            })()}\n        </svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateDrawEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CircleDrawerProps<T>>) {\n    if (prevProps.draw !== this.props.draw) {\n      if (this.element) {\n        this.deactivateInitialEvents();\n        this.deactivateDrawEvents();\n      }\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) {\n      this.deactivateInitialEvents();\n      this.deactivateDrawEvents();\n    }\n  }\n\n  getElement = ({ draw }: Readonly<CircleDrawerProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return draw instanceof this.contentWindow['HTMLElement'] ? (draw as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ draw }: Readonly<CircleDrawerProps<T>>) => {\n    return draw instanceof this.contentWindow['HTMLElement'] || draw === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.addEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.addEventListener('click', this.onMouseClickToRemove);\n  };\n\n  deactivateInitialEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n    this.element.removeEventListener('mousedown', this.onMouseDownToStartDraw);\n    this.element.removeEventListener('click', this.onMouseClickToRemove);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestCircles(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n\n  onMouseClickToRemove = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.focused || this.preventClickEvent) return;\n\n    this.props.onRemove(this.focused);\n  };\n\n  // ---------------------------------------------\n  // draw events\n  // ---------------------------------------------\n  onMouseDownToStartDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    this.preventClickEvent = false;\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n\n    this.deactivateInitialEvents();\n    this.activateDrawEvents();\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState(prevState => ({\n      ...prevState,\n      p1: [x, y],\n    }));\n  };\n\n  activateDrawEvents = () => {\n    if (!this.element) return;\n    this.element.addEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.addEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.addEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.addEventListener('keydown', this.onKeyDownToCancelDraw);\n  };\n\n  deactivateDrawEvents = () => {\n    if (!this.element) return;\n    this.element.removeEventListener('mousemove', this.onMouseMoveToDraw);\n    this.element.removeEventListener('mouseup', this.onMouseUpToEndDraw);\n    this.element.removeEventListener('mouseleave', this.onMouseLeaveToCancelDraw);\n    window.removeEventListener('keydown', this.onKeyDownToCancelDraw);\n  };\n\n  onMouseMoveToDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    if (!this.props.cornerstoneRenderData) {\n      throw new Error('cornerstoneRenderEventData를 찾을 수 없다!');\n    }\n\n    if (\n      !this.preventClickEvent &&\n      Math.max(Math.abs(event.pageX - this.startX), Math.abs(event.pageY - this.startY)) > 20\n    ) {\n      this.preventClickEvent = true;\n    }\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n\n    this.setState(prevState => ({\n      ...prevState,\n      p2: [x, y],\n    }));\n  };\n\n  onMouseUpToEndDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.deactivateDrawEvents();\n    this.activateInitialEvents();\n\n    if (this.state.p1 && this.state.p2) {\n      this.props.onAdd([this.state.p1, this.state.p2], event);\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n\n  onMouseLeaveToCancelDraw = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    this.cancelDraw();\n  };\n\n  onKeyDownToCancelDraw = (event: KeyboardEvent) => {\n    if (event.key.toLowerCase() === 'escape') {\n      event.stopPropagation();\n\n      this.cancelDraw();\n    }\n  };\n\n  cancelDraw = () => {\n    this.deactivateDrawEvents();\n    this.activateInitialEvents();\n\n    this.setState(prevState => ({\n      ...prevState,\n      p1: null,\n      p2: null,\n    }));\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleDrawer: new <T extends Contour>() => CircleDrawerBase<T> = styled(CircleDrawerBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  --color: rgb(255, 224, 0);\n  --stroke-width: 4px;\n  --fill-color: rgba(255, 224, 0, 0.2);\n\n  > circle:first-child {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: var(--contour-drawer-fill-color, var(--fill-color));\n  }\n\n  > circle[data-highlight] {\n    stroke: #ffffff;\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n    fill: transparent;\n    ${dashStroke}\n  }\n\n  > line {\n    stroke: var(--contour-drawer-color, var(--color));\n    stroke-width: var(--contour-drawer-stroke-width, var(--stroke-width));\n  }\n` as any;\n\n/**\n * @deprecated use CircleDrawer instead\n */\nexport const UserCircleDrawer = CircleDrawer;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FrameConsumer } from '../context/frame';\nimport { hitTestCircles } from '../geom/hitTestCircles';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\n\nexport interface CircleHoverProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /**\n   * Hover 기능 활성화 여부\n   * <InsightViewer> 와 마찬가지로 HTMLElement로 입력할 경우 MouseEvent를 해당 HTMLElement를 사용해서 처리한다\n   */\n  hover: boolean | HTMLElement | null;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus: (contour: T | null) => void;\n\n  className?: string;\n}\n\ninterface CircleHoverState {\n  p1: Point | null;\n  p2: Point | null;\n}\n\nexport class CircleHoverBase<T extends Contour> extends Component<CircleHoverProps<T>, CircleHoverState> {\n  private svg: SVGSVGElement | null = null;\n  private element: HTMLElement | null = null;\n  private focused: T | null = null;\n\n  private contentWindow: Window = window;\n\n  constructor(props: CircleHoverProps<T>) {\n    super(props);\n\n    this.state = {\n      p1: null,\n      p2: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <svg\n          ref={this.svgRef}\n          role=\"figure\"\n          width={this.props.width}\n          height={this.props.height}\n          className={this.props.className}\n        ></svg>\n      </>\n    );\n  }\n\n  svgRef = (svg: SVGSVGElement) => {\n    if (svg && this.svg && this.element) {\n      this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.svg = svg;\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n\n    this.svg = svg;\n  };\n\n  componentDidMount() {\n    if (!this.svg) throw new Error('<svg> is not initialized');\n\n    if (this.canActivate(this.props)) {\n      this.element = this.getElement(this.props);\n      this.activateInitialEvents();\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CircleHoverProps<T>>) {\n    if (prevProps.hover !== this.props.hover) {\n      if (this.element) this.deactivateInitialEvents();\n\n      if (this.canActivate(this.props)) {\n        this.element = this.getElement(this.props);\n        this.activateInitialEvents();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) this.deactivateInitialEvents();\n  }\n\n  getElement = ({ hover }: Readonly<CircleHoverProps<T>>): HTMLElement => {\n    //@ts-ignore\n    return hover instanceof this.contentWindow['HTMLElement'] ? (hover as HTMLElement) : (this.svg as HTMLElement);\n  };\n\n  canActivate = ({ hover }: Readonly<CircleHoverProps<T>>) => {\n    return hover instanceof this.contentWindow['HTMLElement'] || hover === true;\n  };\n\n  // ---------------------------------------------\n  // initial events\n  // ---------------------------------------------\n  activateInitialEvents = () => {\n    if (this.element) this.element.addEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  deactivateInitialEvents = () => {\n    if (this.element) this.element.removeEventListener('mousemove', this.onMouseMoveToFindFocus);\n  };\n\n  onMouseMoveToFindFocus = (event: MouseEvent) => {\n    this.findFocus(event.pageX, event.pageY);\n  };\n\n  findFocus = (pageX: number, pageY: number) => {\n    if (!this.props.contours || this.props.contours.length === 0 || !this.props.cornerstoneRenderData) return;\n\n    const element: HTMLElement = this.props.cornerstoneRenderData.element;\n\n    const { x, y } = cornerstone.pageToPixel(element, pageX, pageY);\n\n    this.focused = hitTestCircles(this.props.contours, [x, y]);\n\n    this.props.onFocus(this.focused);\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const CircleHover: new <T extends Contour>() => CircleHoverBase<T> = styled(CircleHoverBase)`\n  position: absolute;\n  top: 0;\n  left: 0;\n` as any;\n","import React, { useEffect, useRef } from 'react';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface DCMImageProps {\n  cornerstoneImage: CornerstoneImage;\n  width: number;\n  height: number;\n}\n\nexport function DCMImage({ cornerstoneImage, width, height }: DCMImageProps) {\n  const element = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const subscription = cornerstoneImage.image.subscribe(image => {\n      if (!element.current) return;\n\n      cornerstone.disable(element.current);\n      cornerstone.enable(element.current);\n\n      if (image) {\n        const defaultViewport = cornerstone.getDefaultViewportForImage(element.current, image);\n        cornerstone.displayImage(element.current, image, defaultViewport);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [cornerstoneImage]);\n\n  return (\n    <div\n      ref={element}\n      style={{\n        width,\n        height,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface ThumbnailImageProps {\n  width: number;\n  height: number;\n  src: string;\n}\n\nexport function ThumbnailImage({ width, height, src }: ThumbnailImageProps) {\n  return (\n    <Thumbnail\n      style={{\n        width,\n        height,\n        backgroundImage: `url(${src})`,\n      }}\n    />\n  );\n}\n\nconst Thumbnail = styled.div`\n  display: inline-block;\n  background-color: #000000;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n","import { Control } from '@lunit/use-opt-control';\nimport { Box, Button, FormControlLabel, Radio, RadioGroup, Slider, Switch, Typography } from '@material-ui/core';\nimport React, { Fragment, ReactNode, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nexport type Wheel = 'none' | 'zoom' | 'scroll';\n\nexport interface InsightViewerControllerOptions {\n  width: [number, number, number] | number;\n  height: [number, number, number] | number;\n  control: [Control, Control[]] | Control;\n  wheel: [Wheel, Wheel[]] | Wheel;\n  invert: [boolean] | boolean;\n  flip: [boolean] | boolean;\n}\n\nexport interface InsightViewerControllerProps {\n  children: (controllerState: InsightViewerControllerState) => ReactNode;\n  options: InsightViewerControllerOptions;\n}\n\nexport interface InsightViewerControllerState {\n  options: InsightViewerControllerOptions;\n\n  width: number;\n  height: number;\n  control: Control;\n  wheel: Wheel;\n  invert: boolean;\n  flip: boolean;\n  resetTime: number;\n\n  updateWidth: (value: number) => void;\n  updateHeight: (value: number) => void;\n  updateControl: (value: Control) => void;\n  updateWheel: (value: Wheel) => void;\n  updateInvert: (value: boolean) => void;\n  updateFlip: (value: boolean) => void;\n  updateResetTime: (value: number) => void;\n}\n\nexport function InsightViewerTestController({ children, options }: InsightViewerControllerProps) {\n  const [width, setWidth] = useState<number>(() => (Array.isArray(options.width) ? options.width[0] : options.width));\n  const [height, setHeight] = useState<number>(() =>\n    Array.isArray(options.height) ? options.height[0] : options.height,\n  );\n  const [control, setControl] = useState<Control>(() =>\n    Array.isArray(options.control) ? options.control[0] : options.control,\n  );\n  const [wheel, setWheel] = useState<Wheel>(() => (Array.isArray(options.wheel) ? options.wheel[0] : options.wheel));\n  const [invert, setInvert] = useState(() => (Array.isArray(options.invert) ? options.invert[0] : options.invert));\n  const [flip, setFlip] = useState(() => (Array.isArray(options.flip) ? options.flip[0] : options.flip));\n  const [resetTime, setResetTime] = useState(Date.now());\n\n  const state: InsightViewerControllerState = useMemo<InsightViewerControllerState>(\n    () => ({\n      options,\n      width,\n      height,\n      control,\n      wheel,\n      invert,\n      flip,\n      resetTime,\n      updateWidth: setWidth,\n      updateHeight: setHeight,\n      updateControl: setControl,\n      updateWheel: setWheel,\n      updateInvert: setInvert,\n      updateFlip: setFlip,\n      updateResetTime: setResetTime,\n    }),\n    [\n      options,\n      width,\n      height,\n      control,\n      wheel,\n      invert,\n      flip,\n      resetTime,\n      setWidth,\n      setHeight,\n      setControl,\n      setWheel,\n      setInvert,\n      setFlip,\n      setResetTime,\n    ],\n  );\n\n  return (\n    <Fragment>\n      {children(state)}\n      <Controller {...state} />\n    </Fragment>\n  );\n}\n\nfunction Controller({\n  options,\n  width,\n  height,\n  control,\n  wheel,\n  invert,\n  flip,\n  resetTime,\n  updateWidth,\n  updateHeight,\n  updateControl,\n  updateWheel,\n  updateInvert,\n  updateFlip,\n  updateResetTime,\n}: InsightViewerControllerState) {\n  return (\n    <FloatingBox>\n      {Array.isArray(options.width) && (\n        <>\n          <Typography gutterBottom>Width</Typography>\n          <Slider\n            color=\"primary\"\n            value={width}\n            min={options.width[1]}\n            max={options.width[2]}\n            onChange={(event, nextValue) => updateWidth(nextValue as number)}\n          />\n        </>\n      )}\n\n      {Array.isArray(options.height) && (\n        <>\n          <Typography gutterBottom>Height</Typography>\n          <Slider\n            color=\"primary\"\n            value={height}\n            min={options.height[1]}\n            max={options.height[2]}\n            onChange={(event, nextValue) => updateHeight(nextValue as number)}\n          />\n        </>\n      )}\n\n      {Array.isArray(options.control) && (\n        <>\n          <Typography gutterBottom>Control</Typography>\n          <RadioGroup value={control} onChange={(event, nextValue) => updateControl(nextValue as Control)}>\n            {options.control[1].map(value => (\n              <FormControlLabel\n                color=\"primary\"\n                key={value}\n                value={value}\n                control={<Radio color=\"primary\" />}\n                label={value.toUpperCase()}\n              />\n            ))}\n          </RadioGroup>\n        </>\n      )}\n\n      {Array.isArray(options.wheel) && (\n        <>\n          <Typography gutterBottom>Wheel</Typography>\n          <RadioGroup value={wheel} onChange={(event, nextValue) => updateWheel(nextValue as Wheel)}>\n            {options.wheel[1].map(value => (\n              <FormControlLabel\n                color=\"primary\"\n                key={value}\n                value={value}\n                control={<Radio color=\"primary\" />}\n                label={value.toUpperCase()}\n              />\n            ))}\n          </RadioGroup>\n        </>\n      )}\n\n      {Array.isArray(options.invert) && (\n        <>\n          <Typography gutterBottom>Invert</Typography>\n          <Switch checked={invert} color=\"primary\" onChange={(event, nextValue) => updateInvert(nextValue)} />\n        </>\n      )}\n\n      {Array.isArray(options.flip) && (\n        <>\n          <Typography gutterBottom>Flip</Typography>\n          <Switch checked={flip} color=\"primary\" onChange={(event, nextValue) => updateFlip(nextValue)} />\n        </>\n      )}\n\n      <Typography gutterBottom>Reset</Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => updateResetTime(Date.now())}>\n        Reset\n      </Button>\n    </FloatingBox>\n  );\n}\n\nconst FloatingBox = styled(Box)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 200px;\n`;\n","import React, { cloneElement, ReactElement, SVGProps, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nexport interface StrokeTextProps {\n  fontFamily?: string;\n  fontSize?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  children: ReactElement<SVGProps<SVGTextElement>>;\n}\n\nexport function StrokeText({\n  fontFamily = 'proximanova,noto_sanslight,sans-serif',\n  fontSize = 12,\n  strokeWidth = 6,\n  strokeColor = '#000000',\n  children,\n}: StrokeTextProps) {\n  const [width, setWidth] = useState<number>(100);\n  const height = useMemo<number>(() => fontSize + strokeWidth * 2, [fontSize, strokeWidth]);\n  const textRef = useRef<SVGTextElement>(null);\n\n  const text = useMemo(() => {\n    return (\n      <>\n        {cloneElement(children, {\n          ref: textRef,\n          x: strokeWidth,\n          y: strokeWidth,\n          stroke: strokeColor,\n          strokeWidth,\n          strokeLinejoin: 'round',\n          strokeLinecap: 'round',\n          dominantBaseline: 'mathematical',\n          fontFamily,\n        })}\n        {cloneElement(children, {\n          x: strokeWidth,\n          y: strokeWidth,\n          dominantBaseline: 'mathematical',\n          fontFamily,\n        })}\n      </>\n    );\n  }, [children, fontFamily, strokeColor, strokeWidth]);\n\n  useLayoutEffect(() => {\n    const rect = textRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    setWidth(rect.width + strokeWidth * 2);\n  }, [strokeWidth, text]);\n\n  return (\n    <svg width={width} height={height} style={{ pointerEvents: 'none', userSelect: 'none', fontSize }}>\n      {text}\n    </svg>\n  );\n}\n","import React, { Component } from 'react';\nimport { Unsubscribable } from 'rxjs';\nimport { FrameConsumer } from '../context/frame';\nimport { InsightViewerHostProps } from '../hooks/useInsightViewerSync';\nimport { CornerstoneImage } from '../image/types';\nimport {\n  CornerstoneRenderData,\n  CornerstoneViewerLike,\n  Interaction,\n  ViewportTransform,\n  ViewportTransformParams,\n} from '../types';\n\ntype Interactions = (Interaction | false | null | undefined)[];\n\nexport interface CornerstoneViewerProps extends InsightViewerHostProps {\n  width: number;\n  height: number;\n\n  image: CornerstoneImage;\n\n  interactions: Interactions;\n\n  /** Invert Color Image */\n  invert: boolean;\n\n  /** Flip Image */\n  flip: boolean;\n\n  /**\n   * Date.now() 로 입력하면 된다.\n   * 값이 변경되는 경우 Pan, Adjust, Zoom 으로 변경된 상태들이 초기화 된다.\n   */\n  resetTime: number;\n\n  /**\n   * Image가 최초 그려지는 순간 변경한다\n   */\n  defaultViewportTransforms?: ViewportTransform[];\n}\n\nconst maxScale: number = 3;\n\nexport class CornerstoneViewer extends Component<CornerstoneViewerProps, {}> implements CornerstoneViewerLike {\n  // ref={}에 의해서 componentDidMount() 이전에 반드시 들어온다\n  private element!: HTMLDivElement;\n\n  // imageLoaded 이후 지연되어 들어오게 된다\n  // setViewport, updateViewport 에 의해서만 접근한다\n  private currentViewport: cornerstone.Viewport | null = null;\n  // props.image.subscribe()를 통해서 지연되어 들어오게 된다\n  private currentImage: cornerstone.Image | null = null;\n\n  // mouse interaction에서 사용한다\n  private teardownInteraction: (() => void)[] | null = null;\n\n  // rx subscriptions\n  private imageSubscription: Unsubscribable | null = null;\n\n  private needImageInitialize: boolean = true;\n\n  private contentWindow: Window = window;\n\n  render() {\n    return (\n      <>\n        <FrameConsumer stateRef={({ contentWindow }) => (this.contentWindow = contentWindow)} />\n        <div\n          ref={this.elementRef}\n          style={{\n            width: this.props.width,\n            height: this.props.height,\n          }}\n        />\n      </>\n    );\n  }\n\n  // ---------------------------------------------\n  // life cycle\n  // ---------------------------------------------\n  elementRef = (element: HTMLDivElement) => {\n    this.element = element;\n\n    if (!element) return;\n\n    this.startInteraction(this.props.interactions);\n  };\n\n  componentDidMount() {\n    // cornerstone의 imagernderered event를 받는다\n    // image가 render 될때마다 context로 enabledElement를 배포해주기 위해 필요하다\n    this.element.addEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n\n    this.setCornerstoneImage(this.props.image);\n  }\n\n  initImage = (image: cornerstone.Image) => {\n    cornerstone.disable(this.element);\n    cornerstone.enable(this.element, { renderer: 'webgl' });\n\n    let defaultViewport = this.getDefaultViewport(image, this.element);\n\n    if (!defaultViewport) {\n      throw new Error('defaultViewport는 null일 수 없다.');\n    }\n\n    if (Array.isArray(this.props.defaultViewportTransforms)) {\n      const minScale: number = defaultViewport.scale;\n\n      for (const transform of this.props.defaultViewportTransforms) {\n        const patch = transform({\n          element: this.element,\n          currentViewport: defaultViewport,\n          minScale,\n          maxScale,\n        });\n\n        defaultViewport = {\n          ...defaultViewport,\n          ...patch,\n        };\n      }\n    }\n\n    defaultViewport = {\n      ...defaultViewport,\n      hflip: this.props.flip,\n      invert: this.props.invert,\n    };\n\n    cornerstone.displayImage(this.element, image, defaultViewport);\n\n    this.setImage(image);\n    this.setViewport(defaultViewport);\n    this.startInteraction(this.props.interactions);\n  };\n\n  componentWillUnmount() {\n    this.element.removeEventListener(cornerstone.EVENTS.IMAGE_RENDERED, this.onImageRenderered);\n    cornerstone.disable(this.element);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n    }\n\n    if (this.teardownInteraction) {\n      this.teardownInteraction.forEach((teardown) => teardown());\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<CornerstoneViewerProps>) {\n    const { width, height, flip, invert, interactions, resetTime, image } = this.props;\n\n    const defaultViewport: cornerstone.Viewport | null = this.getDefaultViewport(this.currentImage, this.element);\n\n    // 선택된 control 상태에 따라 event를 해제/등록 해준다\n    if (prevProps.interactions !== interactions) {\n      this.startInteraction(interactions);\n    }\n\n    if (defaultViewport) {\n      if (prevProps.resetTime !== resetTime) {\n        // resetTime이 새로 갱신되면 viewport를 defaultViewport를 사용해서 초기화 해준다\n        this.updateCurrentViewport({\n          ...defaultViewport,\n          //...this.defaultViewport,\n          hflip: flip,\n          invert: defaultViewport.invert ? !invert : invert,\n        });\n      } else {\n        // flip, invert는 resetTime의 부분 집합이기 때문에\n        // resetTime에 의한 갱신이 없는 경우에만 적용한다\n        if (prevProps.flip !== flip || prevProps.invert !== invert) {\n          this.updateCurrentViewport({\n            hflip: flip,\n            invert: defaultViewport.invert ? !invert : invert,\n          });\n        }\n      }\n    }\n\n    if (prevProps.width !== width || prevProps.height !== height) {\n      if (this.currentImage) {\n        // container size가 변경되는 경우 cornerstone resize() 처리를 해준다\n        cornerstone.resize(this.element);\n\n        const viewport = cornerstone.getViewport(this.element);\n\n        if (viewport) {\n          this.setViewport(viewport);\n        } else {\n          throw new Error('getViewport() is returns not a Viewport');\n        }\n      }\n    }\n\n    if (prevProps.image !== image) {\n      this.setCornerstoneImage(image);\n    }\n  }\n\n  subscribeImage = (image: cornerstone.Image | null) => {\n    if (!image) return;\n\n    image.voiLUT = undefined; // remove VOI LUT for 'adjust' functionality\n\n    // props.image의 변경 또는 초기화로 인한 완전한 초기화가 필요할때\n    if (this.needImageInitialize) {\n      this.needImageInitialize = false;\n      this.initImage(image);\n    }\n    // 단순 series image의 변경일 경우에는 화면 표시만 바꿔준다\n    else if (this.currentViewport) {\n      cornerstone.displayImage(this.element, image, this.currentViewport);\n    }\n    // 이건 실행되면 안됨\n    else {\n      throw new Error('어떤 상황인지 확인 필요!!!');\n    }\n  };\n\n  onImageRenderered = (event: cornerstone.CornerstoneEvent) => {\n    const eventData: cornerstone.CornerstoneEventData | undefined = event.detail;\n    if (\n      eventData &&\n      eventData.canvasContext &&\n      eventData.element &&\n      eventData.enabledElement &&\n      eventData.image &&\n      typeof eventData.renderTimeInMs === 'number' &&\n      eventData.viewport\n    ) {\n      this.currentViewport = eventData.viewport;\n      this.props.updateCornerstoneRenderData(eventData as CornerstoneRenderData);\n    } else {\n      console.error('CornerstoneEventData에 없는 정보가 있다???', eventData);\n    }\n  };\n\n  // ---------------------------------------------\n  // event handlers\n  // ---------------------------------------------\n  startInteraction = (interactions: Interactions) => {\n    if (this.teardownInteraction) {\n      this.teardownInteraction.forEach((teardown) => teardown());\n    }\n\n    this.teardownInteraction = interactions\n      .filter((interaction): interaction is Interaction => typeof interaction === 'function')\n      .map((interaction) => interaction(this));\n  };\n\n  // ---------------------------------------------\n  // getters\n  // ---------------------------------------------\n  getElement = () => this.element;\n\n  getContentWindow = () => this.contentWindow;\n\n  getCurrentViewport = () => this.currentViewport!;\n\n  getDefaultViewport = (image: cornerstone.Image | null, element: HTMLElement | null): cornerstone.Viewport | null => {\n    if (!image || !element) return null;\n    return cornerstone.getDefaultViewportForImage(element, image);\n  };\n\n  getMinScale = () => {\n    const viewport = this.getDefaultViewport(this.currentImage, this.element);\n\n    if (!viewport) {\n      throw new Error('viewport가 정상적으로 와야만 한다');\n    }\n\n    return viewport.scale;\n  };\n\n  getMaxScale = () => {\n    return maxScale;\n  };\n\n  // ---------------------------------------------\n  // setters\n  // ---------------------------------------------\n  updateViewport = (patch: Partial<cornerstone.Viewport>) => {\n    if (this.currentViewport) {\n      this.updateCurrentViewport(patch);\n    }\n  };\n\n  getViewportTransformParams = (): ViewportTransformParams => {\n    return {\n      element: this.element,\n      minScale: this.getMinScale(),\n      maxScale: this.getMaxScale(),\n      currentViewport: this.currentViewport,\n    };\n  };\n\n  private setCornerstoneImage = (image: CornerstoneImage) => {\n    this.needImageInitialize = true;\n\n    this.setImage(null);\n\n    if (this.imageSubscription) {\n      this.imageSubscription.unsubscribe();\n      this.imageSubscription = null;\n    }\n\n    this.imageSubscription = image.image.subscribe(this.subscribeImage);\n  };\n\n  private setImage = (image: cornerstone.Image | null) => {\n    this.currentImage = image;\n  };\n\n  private setViewport = (viewport: cornerstone.Viewport) => {\n    this.currentViewport = viewport;\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n\n  private updateCurrentViewport = (\n    update: Partial<cornerstone.Viewport> | ((viewport: cornerstone.Viewport) => Partial<cornerstone.Viewport>),\n  ) => {\n    if (!this.currentViewport) {\n      throw new Error('viewport가 없는 상태에서 실행되면 안된다');\n    }\n\n    const patch: Partial<cornerstone.Viewport> = typeof update === 'function' ? update(this.currentViewport) : update;\n\n    this.currentViewport = {\n      ...this.currentViewport,\n      ...patch,\n    };\n\n    cornerstone.setViewport(this.element, this.currentViewport);\n  };\n}\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startAdjustInteraction } from '../components/interactions/startAdjustInteraction';\n\nexport const adjust = ({ element }: { element?: HTMLElement } = {}) => ({\n  getElement,\n  getCurrentViewport,\n  updateViewport,\n  getContentWindow,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startAdjustInteraction({\n    element,\n    getCurrentViewport,\n    onMove: (voi: cornerstone.VOI) => updateViewport({ voi }),\n    onEnd: () => {},\n    contentWindow: getContentWindow(),\n  });\n};\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startPanInteraction } from '../components/interactions/startPanInteraction';\n\nexport const pan = ({ element }: { element?: HTMLElement } = {}) => ({\n  getElement,\n  getCurrentViewport,\n  getContentWindow,\n  updateViewport,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startPanInteraction({\n    element,\n    getCurrentViewport,\n    onMove: (translation: cornerstone.Vec2) => updateViewport({ translation }),\n    onEnd: () => {},\n    contentWindow: getContentWindow(),\n  });\n};\n","import { CornerstoneViewerLike } from '@lunit/insight-viewer';\nimport { startZoomInteraction } from '../components/interactions/startZoomInteraction';\n\nexport const zoom = ({ element }: { element?: HTMLElement } = {}) => ({\n  getElement,\n  updateViewport,\n  getCurrentViewport,\n  getContentWindow,\n  getMinScale,\n  getMaxScale,\n}: CornerstoneViewerLike) => {\n  if (!element) element = getElement();\n\n  return startZoomInteraction({\n    element,\n    getMinMaxScale: () => [getMinScale(), getMaxScale()],\n    getCurrentViewport,\n    onZoom: (patch) => updateViewport(patch),\n    contentWindow: getContentWindow(),\n  });\n};\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { useEffect, useState } from 'react';\n\ninterface SeriesImagePosition {\n  /** 현재 Image 위치 */\n  current: number;\n\n  /** 총 Image 갯수 */\n  end: number;\n}\n\nexport function useSeriesImagePosition(image: CornerstoneSequenceImage): SeriesImagePosition {\n  const [result, setResult] = useState<{ current: number; end: number }>(() => ({\n    current: image.getIndex(),\n    end: image.length() - 1,\n  }));\n\n  useEffect(() => {\n    const subscription = image.index.subscribe((current: number) => {\n      setResult(prevResult => {\n        return {\n          ...prevResult,\n          current,\n          end: image.length() - 1,\n        };\n      });\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [image]);\n\n  return result;\n}\n\n/** @deprecated use useSeriesImagePosition() */\nexport const useBulkImagePosition = useSeriesImagePosition;\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { useEffect } from 'react';\n\ninterface SeriesImageScrollParams {\n  image: CornerstoneSequenceImage;\n\n  /** Wheel Event를 처리할 EventTarget */\n  element: HTMLElement | null;\n\n  /** User Interaction 활성화 여부 */\n  enabled?: boolean;\n}\n\nexport function useSeriesImageScroll({ image, element, enabled = true }: SeriesImageScrollParams) {\n  useEffect(() => {\n    if (!element || enabled !== true) {\n      return () => {};\n    }\n\n    function handler(event: WheelEvent) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n\n      if (event.deltaY > 0) {\n        image.prev();\n      } else if (event.deltaY < 0) {\n        image.next();\n      }\n    }\n\n    element.addEventListener('wheel', handler);\n\n    return () => {\n      element.removeEventListener('wheel', handler);\n    };\n  }, [image, element, enabled]);\n}\n\n/** @deprecated use useSeriesImageScroll */\nexport const useBulkImageScroll = useSeriesImageScroll;\n","import { useState } from 'react';\nimport { CornerstoneRenderData } from '../types';\n\nexport interface InsightViewerHostProps {\n  updateCornerstoneRenderData: (renderData: CornerstoneRenderData) => void;\n}\n\nexport interface InsightViewerGuestProps {\n  cornerstoneRenderData: CornerstoneRenderData | null;\n}\n\ninterface InsightViewerSyncProps {\n  cornerstoneRenderData: CornerstoneRenderData | null;\n  updateCornerstoneRenderData: (eventData: CornerstoneRenderData) => void;\n}\n\nexport function useInsightViewerSync(): InsightViewerSyncProps {\n  const [cornerstoneRenderData, setCornerstoneRenderData] = useState<CornerstoneRenderData | null>(null);\n\n  return {\n    cornerstoneRenderData,\n    updateCornerstoneRenderData: setCornerstoneRenderData,\n  };\n}\n","import { RefObject, useCallback, useMemo } from 'react';\nimport { InsightViewer } from '../components/InsightViewer';\nimport { CornerstoneRenderData } from '../types';\n\ninterface ViewportMirroring {\n  /** <InsightViewer updateCornerstoneRenderData={}> 에 사용한다 */\n  updateMasterRenderData: (renderData: CornerstoneRenderData) => void;\n}\n\n/**\n * 여러개의 <InsightViewer>를 동기화 시키기 위해 사용된다\n */\nexport function useViewportMirroring(...destinations: (InsightViewer | RefObject<InsightViewer>)[]): ViewportMirroring {\n  const updateMasterRenderData = useCallback(\n    ({ viewport }: CornerstoneRenderData) => {\n      const { hflip, vfilip, translation, scale } = viewport;\n\n      for (const dest of destinations) {\n        if ('updateViewport' in dest) {\n          dest.updateViewport({\n            hflip,\n            vfilip,\n            translation,\n            scale,\n          });\n        } else if ('current' in dest && dest.current) {\n          dest.current.updateViewport({\n            hflip,\n            vfilip,\n            translation,\n            scale,\n          });\n        }\n      }\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [...destinations],\n  );\n\n  return useMemo<ViewportMirroring>(\n    () => ({\n      updateMasterRenderData,\n    }),\n    [updateMasterRenderData],\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Progress가 완료된 시간을 찾기 위해 사용된다.\n *\n * (A. Task 시작)\n * → User가 행동할 수 없는 Image Loading 시간\n * → (B. Image가 로딩되어 Task가 시작된 시간)\n * → Task 진행\n * → (C. Task 완료 시점)\n *\n * User가 Task를 진행한 시간을 좀 더 정확하게 계산하기 위해 사용된다.\n *\n * C - A = User가 행동할 수 없는 Image Loading 시간 때문에 부정확\n * B - A = C - A 보다 좀 더 User가 행동할 수 있는 시간을 기준으로 계산\n *\n * ```ts\n * const progress = useMemo(() => [image.progress], [image]);\n * const imageLoadedTime = useImageLoadedTime(progress);\n * ```\n *\n * 여기서 `imageLoadedTime`은 Image가 최종적으로 Load된 시간이다.\n */\nexport function useImageLoadedTime(progresses: Observable<number>[] | null): Date | null {\n  const [time, setTime] = useState<Date | null>(null);\n\n  useEffect(() => {\n    if (progresses) {\n      const subscription = combineLatest(progresses)\n        .pipe(map((numbers: number[]) => numbers.reduce((t, x) => t + x, 0) / numbers.length))\n        .subscribe(value => {\n          if (value >= 1) {\n            setTime(new Date());\n            subscription.unsubscribe();\n          }\n        });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }, [progresses]);\n\n  return time;\n}\n","import React, {\n  Consumer,\n  Context,\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { CornerstoneSingleImage } from '../image/CornerstoneSingleImage';\nimport { CornerstoneImage } from '../image/types';\n\nexport interface ImageStoreProviderProps {\n  children: ReactNode;\n\n  /** 최대 Cache 갯수 - 높을수록 Memory에 영향을 미치게 된다. */\n  cacheImages?: number;\n\n  /** CornerstoneImage factory */\n  factory?: (imageId: string) => CornerstoneImage;\n}\n\nexport interface ImageStoreState {\n  /** CornerstoneImage를 Load 한다 */\n  fetch: (imageId: string) => CornerstoneImage;\n\n  /** Cache를 지운다 */\n  purge: (imageId: string) => void;\n}\n\n// @ts-ignore\nconst ImageStoreContext: Context<ImageStoreState> = createContext<ImageStoreState>();\n\nfunction defaultFactory(imageId: string): CornerstoneImage {\n  return new CornerstoneSingleImage(imageId);\n}\n\nexport function ImageStoreProvider({ cacheImages = 10, factory = defaultFactory, children }: ImageStoreProviderProps) {\n  const [cache] = useState<[string, CornerstoneImage][]>(() => []);\n\n  const fetch = useCallback(\n    (imageId: string) => {\n      let item = cache.find(([itemImageId]) => itemImageId === imageId);\n\n      if (!item) {\n        item = [imageId, factory(imageId)];\n        cache.push(item);\n\n        if (cache.length > cacheImages) {\n          const deleteCount: number = cache.length - cacheImages;\n          const deleteItems = cache.splice(0, deleteCount);\n\n          for (const deleteItem of deleteItems) {\n            deleteItem[1].destroy();\n          }\n        }\n      }\n\n      return item[1];\n    },\n    [cache, cacheImages, factory],\n  );\n\n  const purge = useCallback(\n    (imageId: string) => {\n      const index = cache.findIndex(([itemImageId]) => itemImageId === imageId);\n\n      if (index > -1) {\n        const deleteItems = cache.splice(index, 1);\n\n        for (const deleteItem of deleteItems) {\n          deleteItem[1].destroy();\n        }\n      }\n    },\n    [cache],\n  );\n\n  useEffect(() => {\n    return () => {\n      for (const deleteItem of cache) {\n        deleteItem[1].destroy();\n      }\n    };\n  }, [cache]);\n\n  return <ImageStoreContext.Provider value={{ fetch, purge }}>{children}</ImageStoreContext.Provider>;\n}\n\nexport function useImageStore(): ImageStoreState {\n  return useContext(ImageStoreContext);\n}\n\nexport const ImageStoreConsumer: Consumer<ImageStoreState> = ImageStoreContext.Consumer;\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneSequenceImage, getProgressEventDetail, ImageLoader, ProgressEventDetail } from './types';\nimport { wadoImageLoaderXHRLoader } from './wadoImageLoaderXHRLoader';\n\nfunction isImage(image: cornerstone.Image | null): image is cornerstone.Image {\n  return image !== null;\n}\n\ninterface Options {\n  unload?: (imageIds: string[]) => void;\n  initialIndex?: number;\n  cancelTokenName?: string;\n  timeout?: number;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneSeriesImage implements CornerstoneSequenceImage {\n  private readonly _images: (cornerstone.Image | null)[];\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _progressSubject: BehaviorSubject<number[]>;\n  private readonly _indexSubject: BehaviorSubject<number>;\n  private readonly _cancel: (() => void)[] = [];\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private readonly imageIds: string[], private readonly options: Options = {}) {\n    this._images = imageIds.map(() => null);\n\n    const { initialIndex = 0 } = options;\n\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._indexSubject = new BehaviorSubject<number>(initialIndex);\n    this._progressSubject = new BehaviorSubject(imageIds.map(() => 0));\n    this._loader = options.loader || defaultLoader;\n\n    cornerstone.events.addEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this.loadImage(imageIds[initialIndex], initialIndex).then(() => {\n      // 최초 image를 next로 보내준다\n      this.change(this._indexSubject.getValue());\n\n      imageIds.forEach((imageId, i) => {\n        // initialDisplayIndex는 이미 로딩했으므로 pass한다\n        if (i !== initialIndex) {\n          this.loadImage(imageId, i).then(() => {\n            // 현재 시점의 displayIndex이면 (displayIndex의 교체 -> loadImage의 순서로 실행되었다면)\n            // next로 보내준다\n            if (i === this._indexSubject.getValue()) {\n              this.change(this._indexSubject.getValue());\n            }\n          });\n        }\n      });\n    });\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progressSubject.pipe<number>(\n      map<number[], number>(progress => progress.reduce((t, x) => t + x, 0) / progress.length),\n    );\n  }\n\n  get index(): Observable<number> {\n    return this._indexSubject.asObservable();\n  }\n\n  onProgress = (event: Event) => {\n    const eventDetail: ProgressEventDetail | undefined = getProgressEventDetail(event);\n\n    if (eventDetail) {\n      const imageIndex: number = this.imageIds.indexOf(eventDetail.imageId);\n\n      if (imageIndex > -1) {\n        const nextProgress: number[] = [...this._progressSubject.getValue()];\n        nextProgress[imageIndex] = eventDetail.loaded / eventDetail.total;\n        this._progressSubject.next(nextProgress);\n      }\n    }\n  };\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this.imageIds);\n    }\n\n    this._imageSubject.unsubscribe();\n\n    cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n\n    this._cancel.forEach(cancel => cancel());\n\n    this._destoyed = true;\n  };\n\n  length = (): number => {\n    return this._images.length;\n  };\n\n  getIndex = (): number => {\n    return this._indexSubject.getValue();\n  };\n\n  goto = (value: number) => {\n    this.change(Math.max(0, Math.min(this._images.length - 1, value)));\n  };\n\n  next = (delta: number = 1) => {\n    this.change(Math.min(this._images.length - 1, this._indexSubject.getValue() + delta));\n  };\n\n  prev = (delta: number = 1) => {\n    this.change(Math.max(0, this._indexSubject.getValue() - delta));\n  };\n\n  private change = (index: number) => {\n    this._indexSubject.next(index);\n\n    // 해당 image가 load 되었으면 보여준다\n    if (this._images[index]) {\n      this._imageSubject.next(this._images[index]);\n      return;\n    }\n\n    // load되지 않은 image를 보려하는 경우 가까운 index의 이미지를 먼저 보여준다\n\n    const before: cornerstone.Image[] = this._images\n      .slice(0, index - 1)\n      .filter<cornerstone.Image>(isImage)\n      .reverse();\n\n    if (before.length > 0) {\n      this._imageSubject.next(before[0]);\n      return;\n    }\n\n    const after: cornerstone.Image[] = this._images.slice(index + 1).filter<cornerstone.Image>(isImage);\n\n    if (after.length > 0) {\n      this._imageSubject.next(after[0]);\n      return;\n    }\n\n    console.warn('대체할 Image를 찾을 수 없음');\n  };\n\n  private loadImage = async (imageId: string, index: number) => {\n    try {\n      this._images[index] = await this._loader.loadImage({\n        imageId: imageId,\n        options: { loader: wadoImageLoaderXHRLoader(cancel => this._cancel.push(cancel)) },\n      });\n\n      const nextProgress: number[] = [...this._progressSubject.getValue()];\n      nextProgress[index] = 1;\n\n      const total: number = nextProgress.reduce((t, n) => t + n, 0);\n      if (total >= 1) {\n        cornerstone.events.removeEventListener('cornerstoneimageloadprogress', this.onProgress);\n      }\n\n      if (!this._destoyed) {\n        this._progressSubject.next(nextProgress);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${imageId}):`, error);\n        this.loadImage(imageId, index);\n      }\n    }\n  };\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\n\ninterface Params {\n  url: string;\n  signal?: AbortSignal;\n  headers?: Headers | [string, string][] | { [key: string]: string };\n}\n\nexport function fetchBuffer({ url, signal, headers }: Params): Observable<number | ArrayBuffer> {\n  const subject = new BehaviorSubject<number | ArrayBuffer>(0);\n\n  const xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  xhr.open('get', url, true);\n  xhr.responseType = 'arraybuffer';\n\n  if (headers instanceof Headers || Array.isArray(headers)) {\n    for (const [k, v] of headers) {\n      xhr.setRequestHeader(k, v);\n    }\n  } else if (headers) {\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n  }\n\n  const abort = () => {\n    try {\n      xhr.abort();\n    } catch (error) {}\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  signal?.addEventListener('abort', abort);\n\n  xhr.onloadstart = () => {\n    subject.next(0);\n  };\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      subject.next(xhr.response);\n\n      signal?.removeEventListener('abort', abort);\n    }\n  };\n\n  xhr.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n    if (lengthComputable) {\n      subject.next(loaded / total);\n    }\n  };\n\n  xhr.send();\n\n  return subject.asObservable();\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\n\ninterface Params {\n  blob: Blob;\n  signal?: AbortSignal;\n}\n\nexport function fileToBuffer({ blob, signal }: Params): Observable<number | ArrayBufferLike> {\n  const subject = new BehaviorSubject<number | ArrayBufferLike>(0);\n\n  const reader = new FileReader();\n\n  const abort = () => {\n    try {\n      reader.abort();\n    } catch (error) {}\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  signal?.addEventListener('abort', abort);\n\n  reader.onloadstart = () => {\n    subject.next(0);\n  };\n\n  reader.onloadend = () => {\n    subject.next(reader.result as ArrayBufferLike);\n\n    signal?.removeEventListener('abort', abort);\n  };\n\n  reader.onprogress = ({ loaded, lengthComputable, total }: ProgressEvent) => {\n    if (lengthComputable) {\n      subject.next(loaded / total);\n    }\n  };\n\n  reader.readAsArrayBuffer(blob);\n\n  return subject.asObservable();\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ParallelImageLoader } from './ParallelImageLoader';\nimport { CornerstoneImage, ImageLoader } from './types';\n\ninterface Options {\n  unload?: (imageId: string) => void;\n  loader?: ImageLoader;\n}\n\nconst defaultLoader: ImageLoader = new ParallelImageLoader();\n\nexport class CornerstoneFileSingleImage implements CornerstoneImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _imageId: string;\n  private readonly _loader: ImageLoader;\n  private _destoyed: boolean = false;\n\n  constructor(private file: File, private readonly options: Options = {}) {\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._loader = options.loader || defaultLoader;\n\n    this._imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file);\n\n    this.loadImage();\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._imageSubject.pipe(map(image => (image ? 1 : 0)));\n  }\n\n  destroy = () => {\n    if (this.options && typeof this.options.unload === 'function') {\n      this.options.unload(this._imageId);\n    }\n\n    this._destoyed = true;\n  };\n\n  private loadImage = async () => {\n    try {\n      const image = await this._loader.loadImage({\n        imageId: this._imageId,\n      });\n\n      if (!this._destoyed) {\n        this._imageSubject.next(image);\n      }\n    } catch (error) {\n      if (!this._destoyed) {\n        console.warn(`It will retry loadImage(${this._imageId}):`, error);\n        this.loadImage();\n      }\n    }\n  };\n}\n","import { CornerstoneSequenceImage } from '@lunit/insight-viewer';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nexport class CornerstoneStaticSeriesImage implements CornerstoneSequenceImage {\n  private readonly _imageSubject: BehaviorSubject<cornerstone.Image | null>;\n  private readonly _indexSubject: BehaviorSubject<number>;\n  private readonly _imagesSubscription: Subscription;\n  private readonly _progress: Observable<number>;\n  private _images: cornerstone.Image[] | null = null;\n\n  constructor({\n    progress,\n    images,\n    initialIndex = 'center',\n  }: {\n    progress: Observable<number>;\n    images: Observable<cornerstone.Image[]>;\n    initialIndex?: number | 'start' | 'center' | 'end';\n  }) {\n    this._imagesSubscription = images.subscribe(images => {\n      this._images = images;\n\n      let index: number;\n\n      if (initialIndex === 'start') {\n        index = 0;\n      } else if (initialIndex === 'center') {\n        index = Math.round(images.length / 2);\n      } else if (initialIndex === 'end') {\n        index = images.length - 1;\n      } else {\n        index = initialIndex;\n      }\n\n      this._imageSubject.next(images[index]);\n      this._indexSubject.next(index);\n\n      // subscribe once\n      this._imagesSubscription.unsubscribe();\n    });\n\n    this._progress = progress;\n    this._imageSubject = new BehaviorSubject<cornerstone.Image | null>(null);\n    this._indexSubject = new BehaviorSubject<number>(0);\n  }\n\n  get image(): Observable<cornerstone.Image | null> {\n    return this._imageSubject.asObservable();\n  }\n\n  get progress(): Observable<number> {\n    return this._progress;\n  }\n\n  get index(): Observable<number> {\n    return this._indexSubject.asObservable();\n  }\n\n  length = (): number => {\n    return this._images?.length || 0;\n  };\n\n  getIndex = (): number => {\n    return this._indexSubject.getValue();\n  };\n\n  goto = (value: number) => {\n    if (!this._images) return;\n    const index: number = Math.max(0, Math.min(this._images.length - 1, value));\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  next = (delta: number = 1) => {\n    if (!this._images) return;\n    const index: number = Math.min(this._images.length - 1, this._indexSubject.getValue() + delta);\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  prev = (delta: number = 1) => {\n    if (!this._images) return;\n    const index: number = Math.max(0, this._indexSubject.getValue() - delta);\n    this._imageSubject.next(this._images[index]);\n    this._indexSubject.next(index);\n  };\n\n  destroy = () => {\n    this._imagesSubscription.unsubscribe();\n    this._imageSubject.unsubscribe();\n    this._indexSubject.unsubscribe();\n  };\n}\n","import { DecoratorFunction } from '@storybook/addons';\nimport React, { createElement, isValidElement } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { globalStyle } from './style';\n\nconst StorybookGlobalStyle = createGlobalStyle`\n  html {\n    font-size: 14px;\n    box-sizing: border-box;\n  }\n  \n  ${globalStyle}\n`;\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withInsightViewerStorybookGlobalStyle: DecoratorFunction<any> = storyFn => {\n  const story = storyFn();\n\n  return (\n    <>\n      <StorybookGlobalStyle />\n      {typeof story === 'function' ? (\n        createElement(story)\n      ) : isValidElement(story) ? (\n        story\n      ) : (\n        <div>story is not valid element</div>\n      )}\n    </>\n  );\n};\n","import { posMapToImageData } from '@lunit/heatmap';\nimport React, { Component, createRef, RefObject } from 'react';\nimport styled from 'styled-components';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { cleanCanvas } from './draw/cleanCanvas';\n\nexport interface HeatmapViewerProps extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** AI 결과로 나오는 Heatmap 데이터 형식 */\n  posMap: number[][];\n\n  /** Threshold 값 (CXR = 0.15, MMG = 0.1) */\n  threshold: number;\n}\n\nexport class HeatmapViewer extends Component<HeatmapViewerProps, {}> {\n  private canvasRef: RefObject<HTMLCanvasElement> = createRef();\n  private ctx: CanvasRenderingContext2D | null = null;\n  private imageData: ImageData | null = null;\n  private imageResourceCanvas: HTMLCanvasElement | null = null;\n\n  render() {\n    return (\n      <Canvas\n        ref={this.canvasRef}\n        width={this.props.width}\n        height={this.props.height}\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.imageResourceCanvas = document.createElement('canvas');\n\n    if (!this.canvasRef.current) throw new Error('<canvas> is not initialized');\n\n    this.ctx = this.canvasRef.current.getContext('2d');\n\n    if (!this.ctx) throw new Error('<canvas> context 2d is not initialized');\n\n    this.imageData = posMapToImageData(this.props.posMap, this.props.threshold);\n\n    this.drawHeatmap(this.props);\n  }\n\n  componentDidUpdate(prevProps: Readonly<HeatmapViewerProps>) {\n    const { width, height, posMap, threshold, cornerstoneRenderData } = this.props;\n\n    if (prevProps.posMap !== posMap || prevProps.threshold !== threshold) {\n      this.imageData = posMapToImageData(posMap, threshold);\n    }\n\n    if (\n      prevProps.posMap !== posMap ||\n      prevProps.threshold !== threshold ||\n      prevProps.cornerstoneRenderData !== cornerstoneRenderData\n    ) {\n      cleanCanvas(this.ctx!, width, height);\n\n      this.drawHeatmap(this.props);\n    }\n  }\n\n  drawHeatmap = ({ cornerstoneRenderData }: Readonly<HeatmapViewerProps>) => {\n    if (!this.imageData || !this.imageResourceCanvas || !this.ctx || !cornerstoneRenderData) {\n      return;\n    }\n\n    try {\n      this.ctx.save();\n\n      this.imageResourceCanvas.width = this.imageData.width;\n      this.imageResourceCanvas.height = this.imageData.height;\n      this.imageResourceCanvas.getContext('2d')!.putImageData(this.imageData, 0, 0);\n\n      cornerstone.setToPixelCoordinateSystem(cornerstoneRenderData.enabledElement, this.ctx);\n\n      const imageWidth: number = cornerstoneRenderData.image.width;\n      const imageHeight: number = cornerstoneRenderData.image.height;\n\n      this.ctx.drawImage(\n        this.imageResourceCanvas,\n        0,\n        0,\n        this.imageResourceCanvas.width,\n        this.imageResourceCanvas.height,\n        0,\n        0,\n        imageWidth,\n        imageHeight,\n      );\n\n      this.ctx.restore();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nconst Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n`;\n\n/**\n * @deprecated use HeatmapViewer instead\n */\nexport const MachineHeatmapViewer = HeatmapViewer;\n","import React, { ComponentType, MouseEvent, SVGProps, useCallback } from 'react';\nimport styled from 'styled-components';\n\nexport interface PointPinProps extends SVGProps<SVGGElement> {\n  x: number;\n  y: number;\n  label: string | null;\n  onEnter: () => void;\n  onLeave: () => void;\n  onRemove: () => void;\n}\n\nfunction PointPinBase({ x, y, label, onEnter, onLeave, onRemove, ...gProps }: PointPinProps) {\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n      event.preventDefault();\n\n      onRemove();\n    },\n    [onRemove],\n  );\n\n  return (\n    <g {...gProps} transform={`translate(${x} ${y})`} onMouseEnter={onEnter} onMouseLeave={onLeave} onClick={onClick}>\n      <circle cx={0} cy={0} r={4} />\n\n      <path\n        d=\"M8,16c0,0,6-5.582,6-10s-2.686-6-6-6S2,1.582,2,6S8,16,8,16z M5,5c0-1.657,1.343-3,3-3s3,1.343,3,3S9.657,8,8,8S5,6.657,5,5  z\"\n        transform=\"translate(-8 -16)\"\n        data-border=\"border\"\n      />\n\n      <path\n        d=\"M8,16c0,0,6-5.582,6-10s-2.686-6-6-6S2,1.582,2,6S8,16,8,16z M5,5c0-1.657,1.343-3,3-3s3,1.343,3,3S9.657,8,8,8S5,6.657,5,5  z\"\n        transform=\"translate(-8 -16)\"\n      />\n\n      {label && (\n        <g transform=\"translate(0 -25)\">\n          <text>{label}</text>\n          <text>{label}</text>\n        </g>\n      )}\n    </g>\n  );\n}\n\nexport const PointPin: ComponentType<PointPinProps> = styled(PointPinBase)`\n  cursor: pointer;\n\n  color: var(--pin-color, #ffffff);\n\n  &[data-focused] {\n    color: var(--pin-focused-color, rgb(255, 194, 17));\n  }\n\n  > circle {\n    fill: #000000;\n  }\n\n  > path {\n    fill: currentColor;\n\n    &[data-border] {\n      stroke-width: 4px;\n      stroke: #000000;\n    }\n  }\n\n  > g {\n    text {\n      text-anchor: middle;\n      font-size: 14px;\n      font-weight: bold;\n    }\n\n    text:first-child {\n      stroke-width: 4px;\n      stroke: #000000;\n    }\n\n    text:last-child {\n      fill: currentColor;\n    }\n  }\n` as ComponentType<PointPinProps>;\n","import React, { Component, ComponentType, MouseEvent } from 'react';\nimport { InsightViewerGuestProps } from '../hooks/useInsightViewerSync';\nimport { Contour, Point } from '../types';\nimport { PointPin, PointPinProps } from './PointPin';\n\nexport interface PointDrawerProps<T extends Contour> extends InsightViewerGuestProps {\n  width: number;\n  height: number;\n\n  /** Contour 데이터를 상속받은 Annotation 데이터 */\n  contours: T[];\n\n  /** Mouse Over 등 User Interaction에 의해서 Focus 된 Contour */\n  focusedContour: T | null;\n\n  /** Draw / Focus / Remove 와 같은 User Interaction을 활성 / 비활성 한다 */\n  interact?: boolean;\n\n  /**\n   * 특정 Contour에 Mouse Over 되었을 때\n   * focusedContour를 결정하는데 필요하다\n   */\n  onFocus?: (contour: T | null) => void;\n\n  /** 그리기가 완료되어 새로운 Contour가 발생했을 때 */\n  onAdd?: (polygon: Point[], event: MouseEvent) => void;\n\n  /** 특정 Contour를 Click 해서 지울때 필요하다 */\n  onRemove?: (contour: T) => void;\n\n  className?: string;\n\n  /** Pin의 모양을 변경하는데 사용할 수 있다 */\n  pointPinComponent?: ComponentType<PointPinProps>;\n\n  /** Contour 데이터에 따라 Pin을 다르게 하고 싶은 경우 사용할 수 있다 */\n  pointPinFunction?: (contour: T) => ComponentType<PointPinProps>;\n}\n\nfunction toLocal(element: HTMLElement, point: Point): { x: number; y: number } {\n  return cornerstone.pixelToCanvas(element, { x: point[0], y: point[1] });\n}\n\nexport class PointViewer<T extends Contour> extends Component<PointDrawerProps<T>, {}> {\n  render() {\n    return (\n      <svg\n        role=\"figure\"\n        width={this.props.width}\n        height={this.props.height}\n        className={this.props.className}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: this.props.width,\n          height: this.props.height,\n          userSelect: 'none',\n          pointerEvents: this.props.interact === true ? 'auto' : 'none',\n        }}\n        onClick={this.onPointAdd}\n      >\n        {this.props.cornerstoneRenderData &&\n          this.props.contours &&\n          this.props.contours.length > 0 &&\n          this.props.contours.map(contour => {\n            const { id, polygon, dataAttrs = {}, label } = contour;\n\n            const Pin: ComponentType<PointPinProps> =\n              typeof this.props.pointPinFunction === 'function'\n                ? this.props.pointPinFunction(contour)\n                : this.props.pointPinComponent || PointPin;\n\n            const text: string =\n              typeof label === 'function' ? label(contour) : typeof label === 'string' ? label : id.toString();\n\n            return (\n              <Pin\n                key={id}\n                {...toLocal(this.props.cornerstoneRenderData!.element, polygon[0])}\n                {...dataAttrs}\n                data-id={id}\n                data-focused={contour === this.props.focusedContour || undefined}\n                label={text}\n                onEnter={() => this.onPointEnter(contour)}\n                onLeave={() => this.onPointLeave()}\n                onRemove={() => this.onPointRemove(contour)}\n              />\n            );\n          })}\n      </svg>\n    );\n  }\n\n  private onPointAdd = (event: MouseEvent<SVGSVGElement>) => {\n    if (\n      typeof this.props.onAdd === 'function' &&\n      this.props.cornerstoneRenderData &&\n      this.props.cornerstoneRenderData.element\n    ) {\n      const element: HTMLElement = this.props.cornerstoneRenderData.element;\n      const { x, y } = cornerstone.pageToPixel(element, event.pageX, event.pageY);\n      this.props.onAdd([[x, y]], event);\n    }\n  };\n\n  private onPointEnter = (contour: T) => {\n    if (typeof this.props.onFocus === 'function') {\n      this.props.onFocus(contour);\n    }\n  };\n\n  private onPointLeave = () => {\n    if (typeof this.props.onFocus === 'function') {\n      this.props.onFocus(null);\n    }\n  };\n\n  private onPointRemove = (contour: T) => {\n    if (typeof this.props.onRemove === 'function') {\n      this.props.onRemove(contour);\n    }\n  };\n}\n\n/**\n * @deprecated use PointViewer instead\n */\nexport const UserPointViewer = PointViewer;\n","import { ColorProperty } from 'csstype';\nimport { createGlobalStyle, css } from 'styled-components';\n\nexport interface OPTComponentsCSSProperties {\n  '--button-background-color'?: ColorProperty;\n  '--button-label-color'?: ColorProperty;\n  '--button-background-color-hover'?: ColorProperty;\n  '--button-label-color-hover'?: ColorProperty;\n  '--button-background-color-selected'?: ColorProperty;\n  '--button-label-color-selected'?: ColorProperty;\n  '--button-background-color-disabled'?: ColorProperty;\n  '--button-label-color-disabled'?: ColorProperty;\n\n  '--panel-background-color'?: ColorProperty;\n  '--panel-header-background-color'?: ColorProperty;\n  '--panel-icon-color'?: ColorProperty;\n  '--panel-icon-color-hover'?: ColorProperty;\n  '--panel-title-color'?: ColorProperty;\n\n  '--slider-rail-color'?: ColorProperty;\n  '--slider-thumb-color'?: ColorProperty;\n  '--slider-track-color'?: ColorProperty;\n  '--slider-value-label-color'?: ColorProperty;\n\n  '--tooltip-background-color'?: ColorProperty;\n  '--tooltip-color'?: ColorProperty;\n}\n\nexport const blockStyle = css`\n  --button-background-color: rgba(255, 255, 255, 0.2);\n  --button-label-color: rgba(255, 255, 255, 0.7);\n  --button-background-color-hover: rgba(255, 255, 255, 0.35);\n  --button-label-color-hover: rgba(255, 255, 255, 0.9);\n  --button-background-color-selected: #00a4c8;\n  --button-label-color-selected: #ffffff;\n  --button-background-color-disabled: rgba(255, 255, 255, 0.12);\n  --button-label-color-disabled: rgba(255, 255, 255, 0.2);\n\n  --panel-background-color: #242e3e;\n  --panel-header-background-color: rgba(255, 255, 255, 0.03);\n  --panel-icon-color: #8694b1;\n  --panel-icon-color-hover: #c5d8f8;\n  --panel-title-color: #ffffff;\n\n  --slider-rail-color: rgba(255, 255, 255, 0.4);\n  --slider-thumb-color: #ffffff;\n  --slider-track-color: rgba(255, 255, 255, 0.6);\n  --slider-value-label-color: rgba(0, 0, 0, 0.4);\n\n  --tooltip-background-color: rgba(0, 0, 0, 0.7);\n  --tooltip-label-color: #ffffff;\n\n  --snackbar-background-color: rgba(0, 0, 0, 0.7);\n  --snackbar-label-color: #ffffff;\n\n  --switch-color: #eeeeee;\n  --switch-track-color: rgba(255, 255, 255, 0.2);\n  --switch-color-checked: #00a5c8;\n  --switch-track-color-checked: rgba(255, 255, 255, 0.2);\n`;\n\nexport const globalStyle = css`\n  :root {\n    ${blockStyle};\n  }\n\n  body {\n    color: white;\n    background-color: #222232;\n  }\n\n  body,\n  button,\n  input,\n  optgroup,\n  select,\n  textarea,\n  pre {\n    font-family: proximanova, noto_sanslight, sans-serif;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: 0.6px;\n  }\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n","import { createMuiTheme, Theme as MuiTheme } from '@material-ui/core/styles';\n\nconst muiTheme: MuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  typography: {\n    fontFamily: 'proximanova,noto_sanslight,sans-serif',\n    fontWeightLight: 200,\n    fontWeightRegular: 400,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: 13,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      },\n    },\n  },\n});\n\nexport const theme = {\n  ...muiTheme,\n  app: {\n    backgroundColor: '#222232',\n  },\n};\n\nexport type Theme = typeof theme;\n","import { DecoratorFunction } from '@storybook/addons';\nimport React, { createElement, isValidElement } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { ThemeProvider } from './context';\nimport { globalStyle } from './style';\n\nconst StorybookGlobalStyle = createGlobalStyle`\n  html {\n    font-size: 14px;\n    box-sizing: border-box;\n  }\n  \n  ${globalStyle}\n`;\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withOPTComponentsStorybookGlobalStyle: DecoratorFunction<any> = storyFn => {\n  const story = storyFn();\n\n  return (\n    <ThemeProvider>\n      <StorybookGlobalStyle />\n      {typeof story === 'function' ? (\n        createElement(story)\n      ) : isValidElement(story) ? (\n        story\n      ) : (\n        <div>story is not valid element</div>\n      )}\n    </ThemeProvider>\n  );\n};\n","import { ButtonBase as MuiButtonBase } from '@material-ui/core';\nimport { ButtonBaseProps as MuiButtonBaseProps } from '@material-ui/core/ButtonBase';\nimport CheckIcon from '@material-ui/icons/Done';\nimport React, { ComponentType, MouseEvent, ReactElement, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ButtonProps extends Omit<MuiButtonBaseProps, 'onChange'> {\n  label?: ReactElement | string;\n  icon?: ReactElement | string;\n  check?: ReactElement;\n  layout?: 'left' | 'center';\n  hideCheck?: boolean;\n  selected?: boolean;\n  onChange?: (nextSelected: boolean) => void;\n}\n\nexport const checkIcon = <CheckIcon />;\n\nexport const buttonClasses = {\n  label: 'LunitButton-label',\n  icon: 'LunitButton-icon',\n  check: 'LunitButton-check',\n} as const;\n\nexport function ButtonBase({\n  label,\n  icon,\n  check = checkIcon,\n  className = '',\n  selected,\n  onChange,\n  onClick,\n  hideCheck,\n  style = {},\n  disabled = false,\n  ...muiButtonProps\n}: ButtonProps) {\n  const click = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      if (typeof selected === 'boolean' && typeof onChange === 'function') {\n        onChange(!selected);\n      }\n\n      if (typeof onClick === 'function') {\n        onClick(event);\n      }\n    },\n    [selected, onChange, onClick],\n  );\n\n  return (\n    <MuiButtonBase\n      {...muiButtonProps}\n      className={className}\n      aria-selected={selected === true}\n      style={style}\n      onClick={click}\n      disabled={disabled}\n    >\n      {icon && <span className={buttonClasses.icon}>{icon}</span>}\n      {label && <span className={buttonClasses.label}>{label}</span>}\n      {hideCheck !== true && selected === true && <span className={buttonClasses.check}>{check}</span>}\n    </MuiButtonBase>\n  );\n}\n\nexport const IconAndLabelButton: ComponentType<ButtonProps> = styled(ButtonBase).attrs(props => {\n  if (!props.label || !props.icon) {\n    throw new Error(`the props label and icon are required to <IconAndLabelButton>`);\n  }\n\n  if (props.layout === 'left') {\n    console.warn(`<IconAndLabelButton> layout prop is only support 'center'`);\n  }\n\n  if (props.hideCheck === false) {\n    console.warn(`<IconAndLabelButton> hideCheck prop is only support 'true'`);\n  }\n\n  return {\n    ...props,\n    hideCheck: true,\n    layout: 'center',\n  };\n})`\n  && {\n    flex: 1;\n    justify-content: center;\n\n    height: 54px;\n\n    font-size: 13px;\n    color: var(--button-label-color);\n    background-color: var(--button-background-color);\n    flex-direction: column;\n\n    .${buttonClasses.icon} {\n      font-size: 21px;\n      display: block;\n      text-align: center;\n\n      .MuiSvgIcon-root {\n        font-size: 1em;\n      }\n    }\n\n    .${buttonClasses.label} {\n      display: block;\n      text-align: center;\n      margin-bottom: -2px;\n    }\n\n    &:hover {\n      background-color: var(--button-background-color-hover);\n      color: var(--button-label-color-hover);\n    }\n\n    &[aria-selected='true'] {\n      background-color: var(--button-background-color-selected);\n      color: var(--button-label-color-selected);\n    }\n\n    &:disabled {\n      background-color: var(--button-background-color-disabled);\n      color: var(--button-label-color-disabled);\n    }\n  }\n`;\n\nexport const Button: ComponentType<ButtonProps> = styled(ButtonBase)`\n  && {\n    justify-content: ${({ layout }) => layout};\n    padding-left: ${({ layout }) => (layout === 'left' ? '13px' : 0)};\n\n    height: 40px;\n\n    font-size: 13px;\n    color: var(--button-label-color);\n    background-color: var(--button-background-color);\n\n    .${buttonClasses.icon} {\n      font-size: 21px;\n      margin-right: ${({ label }) => (label ? '8px' : 0)};\n      transform: translateY(2px);\n\n      .MuiSvgIcon-root {\n        font-size: 1em;\n      }\n    }\n\n    .${buttonClasses.check} {\n      ${({ layout }) => (layout !== 'left' ? 'display: none' : '')};\n      position: absolute;\n      font-size: 21px;\n      right: 5px;\n      top: 8px;\n\n      .MuiSvgIcon-root {\n        font-size: 1em;\n      }\n    }\n\n    &:hover {\n      background-color: var(--button-background-color-hover);\n      color: var(--button-label-color-hover);\n    }\n\n    &[aria-selected='true'] {\n      background-color: var(--button-background-color-selected);\n      color: var(--button-label-color-selected);\n    }\n\n    &:disabled {\n      background-color: var(--button-background-color-disabled);\n      color: var(--button-label-color-disabled);\n    }\n  }\n`;\n\nexport const buttonStyle = css`\n  font-size: 13px;\n  color: var(--button-label-color);\n  background-color: var(--button-background-color);\n\n  &:hover {\n    background-color: var(--button-background-color-hover);\n    color: var(--button-label-color-hover);\n  }\n\n  &[aria-selected='true'] {\n    background-color: var(--button-background-color-selected);\n    color: var(--button-label-color-selected);\n  }\n\n  &:disabled {\n    background-color: var(--button-background-color-disabled);\n    color: var(--button-label-color-disabled);\n  }\n`;\n","import { KeyboardArrowDown } from '@material-ui/icons';\nimport React, { ComponentType, CSSProperties, ReactNode, useCallback, useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface PanelProps {\n  children: ReactNode | ((expanded: boolean) => ReactNode);\n  expanded?: boolean;\n  onChange?: (nextExapnded: boolean) => void;\n  title: ReactNode | ((expanded: boolean) => ReactNode);\n  icon?: ReactNode | ((expanded: boolean) => ReactNode);\n  className?: string;\n  style?: CSSProperties;\n  disabled?: boolean;\n}\n\nexport const panelClasses = {\n  header: 'LunitPanel-header',\n  icon: 'LunitPanel-icon',\n  title: 'LunitPanel-title',\n  content: 'LunitPanel-content',\n} as const;\n\nfunction getIcon(value: ReactNode | ((expanded: boolean) => ReactNode), expanded: boolean | undefined) {\n  const icon: ReactNode | undefined = typeof value === 'function' ? value(expanded === true) : value;\n\n  if (icon) return icon;\n\n  return typeof expanded !== 'boolean' ? null : expanded ? (\n    <Arrow />\n  ) : (\n    <Arrow style={{ transform: 'rotate(180deg)' }} />\n  );\n}\n\nexport function PanelBase({\n  className = '',\n  expanded,\n  onChange,\n  style = {},\n  title,\n  icon,\n  children,\n  disabled,\n}: PanelProps) {\n  const expand = useCallback(() => {\n    if (typeof expanded === 'boolean' && typeof onChange === 'function') {\n      onChange(!expanded);\n    }\n  }, [expanded, onChange]);\n\n  const content = typeof children === 'function' ? children(expanded === true) : children;\n\n  const iconElement = getIcon(icon, expanded);\n\n  return (\n    <div className={className} aria-expanded={expanded === true} aria-disabled={disabled === true} style={style}>\n      <div className={panelClasses.header}>\n        {iconElement && (\n          <span className={panelClasses.icon} onClick={expand}>\n            {iconElement}\n          </span>\n        )}\n\n        <span className={panelClasses.title}>{typeof title === 'function' ? title(expanded === true) : title}</span>\n      </div>\n\n      {content && <div className={panelClasses.content}>{content}</div>}\n    </div>\n  );\n}\n\nexport interface SessionPanelProps extends Omit<PanelProps, 'expanded'> {\n  sessionId: string;\n  defaultExpanded?: boolean;\n}\n\nexport function SessionPanelBase({ sessionId, defaultExpanded = true, onChange, ...props }: SessionPanelProps) {\n  const id: string = useMemo(() => {\n    return `__sidebar_panel_${sessionId}__`;\n  }, [sessionId]);\n\n  const [expanded, setExpanded] = useState<boolean>(() => {\n    const sessionValue: string | null = localStorage.getItem(id);\n\n    return typeof sessionValue === 'string' ? sessionValue === 'open' : defaultExpanded;\n  });\n\n  const updateExpanded = useCallback(\n    (nextExpanded: boolean) => {\n      localStorage.setItem(id, nextExpanded ? 'open' : 'close');\n      setExpanded(nextExpanded);\n      if (typeof onChange === 'function') onChange(nextExpanded);\n    },\n    [id, onChange],\n  );\n\n  return <Panel {...props} expanded={expanded} onChange={updateExpanded} />;\n}\n\nconst Arrow = styled(KeyboardArrowDown)`\n  transition: transform 0.3s ease-out;\n`;\n\nexport const PANEL_HEADER_HEIGHT: number = 25;\n\nconst panelStyle = css`\n  background-color: var(--panel-background-color);\n  position: relative;\n\n  &[aria-disabled='true'] {\n  }\n\n  .${panelClasses.header} {\n    height: 25px;\n    background-color: var(--panel-header-background-color);\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding: 1px 14px 0 14px;\n\n    .${panelClasses.icon} {\n      color: var(--panel-icon-color);\n      margin-left: -8px;\n      margin-right: 6px;\n      transform: translateY(2px);\n    }\n\n    .${panelClasses.title} {\n      color: var(--panel-title-color);\n      letter-spacing: 0.2em;\n    }\n  }\n\n  .${panelClasses.content} {\n    padding: 14px;\n  }\n`;\n\nconst panelIconHoverStyle = css`\n  .${panelClasses.header} {\n    .${panelClasses.icon} {\n      cursor: pointer;\n\n      &:hover {\n        color: var(--panel-icon-color-hover);\n      }\n    }\n  }\n`;\n\nexport const panelDisabled = ({ disabled }: PanelProps) =>\n  disabled\n    ? css`\n        opacity: 0.4;\n        pointer-events: none;\n        user-select: none;\n      `\n    : css`\n        opacity: 1;\n      `;\n\nexport const Panel: ComponentType<PanelProps> = styled(PanelBase)`\n  ${panelDisabled}\n  ${panelStyle}\n  ${({ onChange }) => (typeof onChange === 'function' ? panelIconHoverStyle : '')}\n`;\n\nexport const SessionPanel: ComponentType<SessionPanelProps> = styled(SessionPanelBase)`\n  opacity: ${({ disabled }) => (disabled ? 0.4 : 1)};\n  ${panelStyle}\n  ${panelIconHoverStyle}s\n`;\n","import { ComponentType, DetailedHTMLProps, HTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nexport const PanelDescription: ComponentType<DetailedHTMLProps<\n  HTMLAttributes<HTMLParagraphElement>,\n  HTMLParagraphElement\n>> = styled.p`\n  font-size: 12px;\n  margin-top: 0;\n  color: #ffffff;\n\n  > .MuiSvgIcon-root {\n    font-size: 16px;\n    margin-bottom: 6px;\n    display: block;\n  }\n`;\n\nexport const PanelDescriptionTitle: ComponentType<DetailedHTMLProps<\n  HTMLAttributes<HTMLHeadingElement>,\n  HTMLHeadingElement\n>> = styled.h3`\n  font-size: 12px;\n  font-weight: normal;\n  margin: 5px 0 4px 0;\n  color: currentColor;\n\n  > .MuiSvgIcon-root {\n    font-size: 16px;\n    margin-right: 6px;\n    transform: translateY(3px);\n  }\n`;\n\nexport const PanelDescriptionColors = {\n  NORMAL: '#ffffff',\n  INFO: '#00a4c8',\n  WARNING: '#d6ae41',\n  ERROR: '#c9434b',\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { PANEL_HEADER_HEIGHT } from './Panel';\n\nexport interface PanelToolbarProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function PanelToolbarBase({ children, className = '' }: PanelToolbarProps) {\n  return <div className={className}>{children}</div>;\n}\n\nexport const PanelToolbar = styled(PanelToolbarBase)`\n  position: absolute;\n  height: ${PANEL_HEADER_HEIGHT}px;\n  display: flex;\n  align-items: center;\n  top: 0;\n  padding-top: 1px;\n  right: 12px;\n`;\n","import styled from 'styled-components';\n\nexport const PanelToolbarBadge = styled.span`\n  font-size: 11px;\n  color: #ffffff;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 3px 11px;\n  border-radius: 10px;\n`;\n","import React, { ComponentType, CSSProperties, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ButtonLayoutProps {\n  gap?: number;\n  direction: 'horizontal' | 'vertical';\n  className?: string;\n  children: ReactNode;\n  style?: CSSProperties;\n}\n\nexport function ButtonLayoutBase({ className = '', children, style }: ButtonLayoutProps) {\n  return (\n    <div className={className} style={style}>\n      {children}\n    </div>\n  );\n}\n\nconst verticalLayout = ({ gap = 2 }: ButtonLayoutProps) => css`\n  display: flex;\n  flex-flow: column;\n\n  > :not(:last-child) {\n    margin-bottom: ${gap}px;\n  }\n`;\n\nconst horizontalLayout = ({ gap = 2 }: ButtonLayoutProps) => css`\n  display: flex;\n  width: 100%;\n\n  > * {\n    flex: 1;\n  }\n\n  > :not(:last-child) {\n    margin-right: ${gap}px;\n  }\n`;\n\nexport const ButtonLayout: ComponentType<ButtonLayoutProps> = styled(ButtonLayoutBase)`\n  ${({ direction }) => (direction === 'horizontal' ? horizontalLayout : verticalLayout)};\n`;\n","import { Slider as MuiSlider } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Slider = styled(MuiSlider).attrs({\n  valueLabelDisplay: 'on',\n})`\n  && {\n    color: var(--slider-rail-color);\n    height: 19px;\n\n    .MuiSlider-thumb {\n      width: 28px;\n      height: 19px;\n      background-color: var(--slider-thumb-color);\n      border-radius: 10px;\n      margin-top: -7px;\n      margin-left: -14px;\n    }\n\n    .MuiSlider-active {\n      cursor: none;\n    }\n\n    .MuiSlider-valueLabel {\n      left: 0;\n      top: -7px;\n      transform: none;\n\n      * {\n        text-align: center;\n        width: 28px;\n        margin: 0;\n        padding: 0;\n        transform: none;\n        background: transparent;\n        color: var(--slider-value-label-color);\n        font-size: 13px;\n      }\n    }\n\n    ,\n    .MuiSlider-rail {\n      height: 5px;\n      border-radius: 2px;\n    }\n\n    .MuiSlider-track {\n      background-color: var(--slider-track-color);\n      height: 5px;\n      border-radius: 2px;\n    }\n  }\n`;\n","import MuiTooltip, { TooltipProps as MuiTooltipProps } from '@material-ui/core/Tooltip';\nimport { Error, Help } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { Fragment } from 'react';\nimport styled, { DefaultTheme, keyframes } from 'styled-components';\n\nexport interface TooltipProps extends MuiTooltipProps {}\n\nexport function Tooltip({ className, ...props }: TooltipProps) {\n  const { arrow, popper, ...classes } = useTooltipStyle(props);\n  const [arrowRef, setArrowRef] = React.useState<HTMLSpanElement | null>(null);\n\n  return (\n    <MuiTooltip\n      classes={classes}\n      PopperProps={{\n        className: popper + ' ' + (className || ''),\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </Fragment>\n      }\n    />\n  );\n}\n\nexport const useTooltipStyle = makeStyles<DefaultTheme, TooltipProps>({\n  tooltip: {\n    position: 'relative',\n    borderRadius: 0,\n    color: 'var(--tooltip-label-color)',\n    backgroundColor: 'var(--tooltip-background-color)',\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-1.45em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1.5em 1em',\n        borderColor: `transparent transparent var(--tooltip-background-color) transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1.5em 1em 0 1em',\n        borderColor: `var(--tooltip-background-color) transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-1.45em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1.5em 1em 0',\n        borderColor: `transparent var(--tooltip-background-color) transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1.5em',\n        borderColor: `transparent transparent transparent var(--tooltip-background-color)`,\n      },\n    },\n  },\n});\n\nexport const NormalTooltip = styled(Tooltip).attrs({\n  children: <Help style={{ color: 'rgba(255, 255, 255, 0.6)' }} />,\n})`\n  --tooltip-background-color: rgba(255, 255, 255, 0.6);\n  --tooltip-label-color: #030a18;\n`;\n\nexport const InfoTooltip = styled(Tooltip).attrs({\n  children: <Help style={{ color: '#00a4c8' }} />,\n})`\n  --tooltip-background-color: #00a4c8;\n  --tooltip-label-color: #ffffff;\n`;\n\nconst blinkAnimation = keyframes`\n  0% {\n    opacity: 0.7;\n  }\n  \n  49% {\n    opacity: 0.7;\n  }\n  \n  50% {\n    opacity: 1;\n  }\n`;\n\nconst ErrorIcon = styled(Error)`\n  animation: ${blinkAnimation} 1s infinite;\n`;\n\nexport const WarningTooltip = styled(Tooltip).attrs({\n  children: <ErrorIcon style={{ color: '#d6ae41' }} />,\n})`\n  --tooltip-background-color: #d6ae41;\n  --tooltip-label-color: #ffffff;\n`;\n\nexport const ErrorTooltip = styled(Tooltip).attrs({\n  children: <ErrorIcon style={{ color: '#c9434b' }} />,\n})`\n  --tooltip-background-color: #c9434b;\n  --tooltip-label-color: #ffffff;\n`;\n","import React, { Component, createRef, CSSProperties, DetailedHTMLProps, HTMLAttributes, RefObject } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface ScrollContainerProps extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  sessionId?: string;\n}\n\ninterface ScrollContainerState {}\n\nconst divStyle: CSSProperties = { overflow: 'hidden' };\n\nexport class ScrollContainer extends Component<ScrollContainerProps, ScrollContainerState> {\n  private resizeObserver: ResizeObserver;\n  private containerRef: RefObject<HTMLDivElement> = createRef();\n\n  constructor(props: ScrollContainerProps) {\n    super(props);\n\n    this.resizeObserver = new ResizeObserver(this.resizeHandler);\n  }\n\n  render() {\n    const { sessionId, ...divProps } = this.props;\n    return <div {...divProps} ref={this.containerRef} style={divStyle} />;\n  }\n\n  componentDidMount() {\n    const div: HTMLDivElement = this.containerRef.current!;\n    this.resizeObserver.observe(div);\n    div.addEventListener('wheel', this.wheelHandler);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ScrollContainerProps>) {\n    if (prevProps.sessionId !== this.props.sessionId) {\n      this.scrollTo(0);\n    }\n  }\n\n  scrollTo = (top: number) => {\n    const div: HTMLDivElement | null = this.containerRef.current;\n    if (!div) return;\n    div.scrollTop = top;\n  };\n\n  private wheelHandler = (event: WheelEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    const div: HTMLDivElement | null = this.containerRef.current;\n    if (!div) return;\n    div.scrollTop = Math.min(Math.max(0, div.scrollTop + event.deltaY), div.scrollHeight - div.offsetHeight);\n  };\n\n  private resizeHandler = (entries: ResizeObserverEntry[]) => {\n    for (const entry of entries) {\n      if (entry.target === this.containerRef.current) {\n        const div: HTMLDivElement | null = this.containerRef.current;\n        if (!div) return;\n        div.scrollTop = Math.min(Math.max(0, div.scrollTop), div.scrollHeight - div.offsetHeight);\n      }\n    }\n  };\n}\n","import { Switch as MuiSwitch } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Switch = styled(MuiSwitch)`\n  && {\n    .MuiSwitch-track {\n      opacity: 1;\n      background-color: var(--switch-track-color);\n    }\n\n    .MuiSwitch-switchBase {\n      color: var(--switch-color);\n\n      &.Mui-checked {\n        color: var(--switch-color-checked);\n      }\n    }\n\n    .Mui-checked + .MuiSwitch-track {\n      opacity: 1;\n      background-color: var(--switch-track-color-checked);\n    }\n  }\n`;\n","import { createMuiTheme, Theme as MuiTheme } from '@material-ui/core/styles';\nimport { css } from 'styled-components';\n\nexport const lighten = css`\n  color: #242e3e;\n\n  --button-background-color: #00a4c8;\n  --button-label-color: rgba(255, 255, 255, 0.8);\n  --button-background-color-hover: #008cb0;\n  --button-label-color-hover: rgba(255, 255, 255, 1);\n  --button-background-color-selected: #007294;\n  --button-label-color-selected: rgba(255, 255, 255, 1);\n  --button-background-color-disabled: rgba(0, 164, 200, 0.65);\n  --button-label-color-disabled: rgba(255, 255, 255, 0.2);\n\n  --slider-rail-color: rgba(86, 81, 136, 0.4);\n  --slider-thumb-color: #6b6b9b;\n  --slider-track-color: rgba(86, 81, 136, 0.6);\n  --slider-value-label-color: #ffffff;\n`;\n\nexport const lightenTheme: MuiTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n  typography: {\n    fontFamily: 'proximanova,noto_sanslight,sans-serif',\n    fontWeightLight: 200,\n    fontWeightRegular: 400,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: 13,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      },\n    },\n  },\n});\n","import { Paper } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { lighten } from '../theme/lighten';\n\nexport const DialogPaper = styled(Paper)`\n  ${lighten};\n\n  background-color: #ffffff;\n  width: fit-content;\n  height: fit-content;\n  padding: 30px 50px;\n  border-radius: 0;\n\n  > div {\n    text-align: center;\n  }\n`;\n","import { Dialog as MuiDialog, DialogProps } from '@material-ui/core';\nimport { ComponentType } from 'react';\nimport styled from 'styled-components';\nimport { lighten } from '../theme/lighten';\n\nexport { DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport const Dialog: ComponentType<DialogProps> = styled(MuiDialog)`\n  && {\n    .MuiDialog-paper {\n      ${lighten};\n\n      background-color: #ffffff;\n\n      border-radius: 0;\n\n      padding: 30px 50px;\n\n      .MuiDialogTitle-root {\n        color: inherit;\n        padding: 0;\n        margin: 0 0 15px 0;\n      }\n\n      .MuiDialogContent-root {\n        color: inherit;\n        padding: 0;\n        margin: 0;\n        overflow: unset;\n      }\n\n      .MuiDialogActions-root {\n        padding: 0;\n        margin: 15px 0 0 0;\n        justify-content: center;\n      }\n\n      .MuiTypography-root {\n        color: inherit;\n      }\n    }\n  }\n`;\n","import { IconButton } from '@material-ui/core';\nimport { Fullscreen, FullscreenExit } from '@material-ui/icons';\nimport React, { Children, ReactNode, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport useResizeObserver from 'use-resize-observer/polyfilled';\n\nexport interface QuarterViewProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport function QuarterView({ children, className }: QuarterViewProps) {\n  const { ref: resizeRef, width = 500, height = 500 } = useResizeObserver<HTMLDivElement>({});\n  const [solo, setSolo] = useState<number>(-1);\n\n  const soloEnabled: boolean = solo > -1;\n\n  return (\n    <div\n      ref={resizeRef}\n      className={className}\n      css={`\n        ${soloEnabled ? soloContainerStyle : width / height < 1.2 ? gridContainerStyle : verticalContainerStyle}\n      `}\n    >\n      {Children.map(children, (child, i) => {\n        return (\n          <div\n            key={'quarter-' + i}\n            css={`\n              ${!soloEnabled || solo === i ? itemStyle : hiddenStyle}\n            `}\n          >\n            {child}\n            <ExpandButton\n              onClick={event => {\n                event.preventDefault();\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n                setSolo(soloEnabled ? -1 : i);\n              }}\n            >\n              {soloEnabled ? <FullscreenExit /> : <Fullscreen />}\n            </ExpandButton>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst verticalContainerStyle = css`\n  display: flex;\n  background-color: #1c2331; // line color\n\n  > div {\n    flex: 1;\n\n    &:not(:last-of-type) {\n      margin-right: 1px;\n    }\n  }\n`;\n\nconst gridContainerStyle = css`\n  display: grid;\n  background-color: #1c2331; // line color\n\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  grid-gap: 1px;\n`;\n\nconst soloContainerStyle = css`\n  display: block;\n  position: relative;\n`;\n\nconst itemStyle = css`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst hiddenStyle = css`\n  position: absolute;\n  left: 100vw;\n  top: 0;\n  width: 200px;\n  height: 300px;\n`;\n\nconst ExpandButton = styled(IconButton)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 0;\n  padding: 4px 6px;\n  color: #8694b1;\n  font-size: 18px;\n\n  .MuiSvgIcon-root {\n    font-size: 1em;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SwitchRow = styled.div`\n  display: flex;\n  align-items: center;\n\n  > :first-child {\n    margin-right: 10px;\n  }\n\n  > :last-child {\n    flex: 1;\n    text-align: right;\n  }\n`;\n","import { SnackbarContent as MuiSnackbarContent, SnackbarContentProps } from '@material-ui/core';\nimport { ComponentType } from 'react';\nimport styled from 'styled-components';\n\nexport const SnackbarContent: ComponentType<SnackbarContentProps> = styled(MuiSnackbarContent)`\n  && {\n    border-radius: 0;\n    background-color: var(--snackbar-background-color);\n    color: var(--snackbar-label-color);\n\n    .MuiButton-label,\n    .MuiIconButton-label {\n      opacity: 0.6;\n    }\n  }\n`;\n\nexport const NormalSnackbarContent: ComponentType<SnackbarContentProps> = styled(SnackbarContent)`\n  --snackbar-background-color: rgba(255, 255, 255, 0.6);\n  --snackbar-label-color: #030a18;\n`;\n\nexport const InfoSnackbarContent: ComponentType<SnackbarContentProps> = styled(SnackbarContent)`\n  --snackbar-background-color: #00a4c8;\n  --snackbar-label-color: #ffffff;\n`;\n\nexport const WarningSnackbarContent: ComponentType<SnackbarContentProps> = styled(SnackbarContent)`\n  --snackbar-background-color: #d6ae41;\n  --snackbar-label-color: #ffffff;\n`;\n\nexport const ErrorSnackbarContent: ComponentType<SnackbarContentProps> = styled(SnackbarContent)`\n  --snackbar-background-color: #c9434b;\n  --snackbar-label-color: #ffffff;\n`;\n","import React, { DetailedHTMLProps, HTMLAttributes, ReactElement, SourceHTMLAttributes } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nexport interface VideoBackgroundContainerProps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  source: ReactElement<DetailedHTMLProps<SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>>;\n}\n\nfunction VideoBackgroundContainerBase({ source, children, ...divProps }: VideoBackgroundContainerProps) {\n  return (\n    <div {...divProps}>\n      <video autoPlay loop muted>\n        {source}\n      </video>\n\n      {children}\n    </div>\n  );\n}\n\nconst enter = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const VideoBackgroundContainer = styled(VideoBackgroundContainerBase)`\n  position: relative;\n  overflow: hidden;\n\n  > * {\n    position: relative;\n  }\n\n  > video {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    object-fit: cover;\n    min-width: 100%;\n    min-height: 100%;\n    transform: translate3d(-50%, -50%, 0);\n\n    animation: ${enter} 1s ease-out;\n  }\n`;\n","import { globalStyle as componentsGlobalStyle } from '@lunit/opt-components';\nimport { globalStyle as insightViewerGlobalStyle } from '@lunit/insight-viewer';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${componentsGlobalStyle}\n  ${insightViewerGlobalStyle}\n  \n  html {\n    font-size: 14px;\n    box-sizing: border-box;\n  }\n  \n  html, body {\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n  \n  #app {\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n  }\n`;\n","import {\n  CornerstoneImage,\n  CornerstoneSingleImage,\n  InsightViewer,\n  installWADOImageLoader,\n  unloadImage,\n} from '@lunit/insight-viewer';\nimport React, { useMemo } from 'react';\nimport { render } from 'react-dom';\nimport { GlobalStyle } from './components/GlobalStyle';\n\ninstallWADOImageLoader();\n\nfunction App() {\n  const image: CornerstoneImage = useMemo(\n    () =>\n      new CornerstoneSingleImage(`wadouri:https://fixtures.front.lunit.io/dcm-files/series/CT000010.dcm`, {\n        unload: unloadImage,\n      }),\n    [],\n  );\n\n  return (\n    <div>\n      <GlobalStyle />\n      <InsightViewer\n        width={700}\n        height={600}\n        invert={false} // 색상을 반전한다\n        flip={false} // 이미지를 좌우로 뒤집는다\n        pan={true} // Pan Interaction을 활성화 한다\n        adjust={false} // Adjust Interaction을 활성화 한다 (Pan과 동시에 사용할 수 없다)\n        zoom={true} // Zoom Interaction을 활성화 한다\n        resetTime={Date.now()} // 이 값이 변경되면 Pan, Adjust, Zoom 상태가 초기화 된다\n        image={image}\n        updateCornerstoneRenderData={() => {}}\n      />\n    </div>\n  );\n}\n\nrender(<App />, document.querySelector('#app'));\n\n// Hot Module Replacement\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}